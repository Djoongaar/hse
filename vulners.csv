software;version;is_detected;cve_list;href;description
LibreOffice;6.0.7;False;;;
7zip;18.05;False;;;
Adobe Reader;2018.011.20035;False;;;
nginx;1.14.0;True;['CVE-2018-16843'];https://www.prio-n.com/kb/vulnerability/CVE-2018-16843;nginx before versions 1.15.6 and 1.14.1 has a vulnerability in the implementation of HTTP/2 that can allow for excessive memory consumption. This issue affects nginx compiled with the ngx_http_v2_module (not compiled by default) if the 'http2' option of the 'listen' directive is used in a configuration file.
nginx;1.14.0;True;['CVE-2018-16844'];https://www.prio-n.com/kb/vulnerability/CVE-2018-16844;nginx before versions 1.15.6 and 1.14.1 has a vulnerability in the implementation of HTTP/2 that can allow for excessive CPU usage. This issue affects nginx compiled with the ngx_http_v2_module (not compiled by default) if the 'http2' option of the 'listen' directive is used in a configuration file.
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];;"<!DOCTYPE html>
<html dir=""rtl"" lang=""fa-IR"">

<head>
	<meta cha..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

> Apache2 2.4.49 - LFI & RCE Exploit

## Info
..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
Small PoC of CVE-2021-4177..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
Path Traversal for Apache 2.4.49

https://ubunt..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

##                                            ..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
This is a sim..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
CVE-2021-41773 POC with Docker

### Configurati..."
Apache HTTP Server;2.4.29;True;['CVE-2019-0211'];https://0day.today/exploit/description/32502;Exploit for linux platform in category local exploits
Apache HTTP Server;2.4.29;True;['CVE-2019-10092'];https://0day.today/exploit/description/33575;Exploit for multiple platform in category web applications
Apache HTTP Server;2.4.29;True;['CVE-2019-10098'];https://0day.today/exploit/description/33577;Exploit for multiple platform in category web applications
Apache HTTP Server;2.4.29;True;['CVE-2020-11984'];https://0day.today/exploit/description/34882;Apache2 suffers from an incorrect handling of large requests issue in mod_proxy_uwsgi.
Apache HTTP Server;2.4.29;True;['CVE-2020-11993'];https://0day.today/exploit/description/35422;
Apache HTTP Server;2.4.29;True;['CVE-2021-41773', 'CVE-2021-42013'];https://0day.today/exploit/description/36952;This Metasploit module exploits an unauthenticated remote code execution vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773). If files outside of the document root are not protected by ‚Äòrequire all denied‚Äô and CGI has been explicitly enabled, it can be used to execute arbitrary commands. This vulnerability has been reintroduced in the Apache 2.4.50 fix (CVE-2021-42013).
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];https://0day.today/exploit/description/37777;
Apache HTTP Server;2.4.29;True;['CVE-2021-44790'];https://0day.today/exploit/description/38427;
Apache HTTP Server;2.4.29;True;['CVE-2023-25690'];https://0day.today/exploit/description/39214;Some mod_proxy configurations on Apache HTTP Server versions 2.4.0 through 2.4.55 allow for an HTTP request smuggling attack. Configurations are affected when mod_proxy is enabled along with some form of RewriteRule or ProxyPassMatch in which a non-specific pattern matches some portion of the user-supplied request-target (URL) data and is then re-inserted into the proxied request-target using variable substitution.
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# Rapid Reset Client

Rapid Reset Client is a tool for testing m..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
# Docker 
```
$ sudo docker build -t <image_nam..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# Dockerisation d'une Vuln√©rabilit√© : cve-2021-42013

Ce projet ..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# CVE-2021-42013
## Poc CVE-2021-42013 - Apache 2.4.50 w..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

> Apache2 2.4.49 - LFI & RCE Exploit

## Info
..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
---
goËØ≠Ë®Äpoc&expÈ°πÁõÆ„ÄÇ Â£∞ÊòéÔºöËØ•È°πÁõÆÊù•Ëá™‰ΩúËÄÖÊó•Â∏∏Â≠¶‰π†Á¨îËÆ∞„ÄÇ ËØ∑ÂãøÂà©Áî®Áõ∏ÂÖ≥ÊäÄÊúØ‰ª•Âèä..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

[![Build Status](https://travis-ci.org/joemcca..."
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];;"# CVE-2021-40438 - Apache <= 2.4.48 - SSRF Python exploit
A craf..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

A flaw was found in a change made to path norm..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# Apache 2.4.49 - Path Traversal or Remote Code Execution
cve-20..."
Apache HTTP Server;2.4.29;True;['CVE-2023-25690'];;"# CVE-2023-25690
## M√¥ t·∫£ CVE-2023-25690:
- M·ªôt v√†i c·∫•u h√¨nh mod..."
Apache HTTP Server;2.4.29;True;['CVE-2019-10092'];;"# CVE-2019-10092 Docker - Apache HTTP Server

### Using

```
$ d..."
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];;"# CVE-2021-40438

## build

```bash
do..."
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];;"# CVE-2021-40438

ËØ∑Ê±Ç uri-path ÂèØ‰ª•ÂØºËá¥ mod_proxy Â∞ÜËØ∑Ê±ÇËΩ¨ÂèëÂà∞ËøúÁ®ãÁî®Êà∑ÈÄâÊã©ÁöÑÊ∫êÊúçÂä°Âô®„ÄÇÊ≠§..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
<p align=""center"">
<img width=""927"" alt=""top"" s..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# cve-2021-41773

## Ch·∫°y Server
$ docker build -t cve-2021-4177..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# mass_cve-2021-41773
***MASS CVE-2021-41773***
## Screenshot
<i..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# Apache 2.4.50 - Path Traversal or Remote Code Execution
CVE-20..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# CVE-2021-42013 - Apache HTTP Server 2.4.50

# Cara Menjalankan..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# Scanner-CVE-2021-41773
### A automatic scanner to apache 2.4.4..."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# CVE-2023-44487-
----------------------------------------------..."
Apache HTTP Server;2.4.29;True;['CVE-2023-25690'];;"# CVE 2023 25690 - Proof of Concept
**Published: 7 March 2023**
..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# CVE-2021-42013
C implementation of the infamous [Apache 2.4.50..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
## üêõ Path traversal and file disclosure vulnera..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
## üêõ Path traversal and file disclosure vulnera..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# mass_cve-2021-41773
***MASS CVE-2021-41773***
## Screenshot
<i..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# CVE-2021-42013-LAB
Apache HTTP Server 2.4.50 - RCE Lab


**exp..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

A Demonstration to show the CVE-2021-41773 vul..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773 Essay üï∏Ô∏è

## Description üñºÔ∏è

This repository co..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
# Docker 
```
$ sudo docker build -t <image_nam..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773 PoC

Proof of concept to check if hosts are vul..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# CVE-2021-42013_Reverse-Shell
PoC CVE-2021-42013 reverse shell ..."
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];;"# CVE-2021-40438
## Apache forward request CVE

[CVE-2021-40438]..."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# HTTP/2 Rapid Reset: CVE-2023-44487

## Description

This repos..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
## üêõ Path traversal and file disclosure vulnera..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# Apache 2.4.50 - Path Traversal or Remote Code Execution
cve-20..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# Mitigation-CVE-2021-41773-
Shell Script to mitigate CVE-2021-4..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"Áî®‰∫éÊ£ÄÊµã/Âà©Áî®Apache 2.4.49‰∏é2.4.50‰∏äÁöÑÁõÆÂΩïÁ©øË∂ä/ÂëΩ‰ª§ÊâßË°åÊºèÊ¥û


‰ΩøÁî®Ôºö

Êºè..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# POC-CVE-2021-41773

On the 5th of October 2021, a CVE detailin..."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# Golang CVE-2023-44487 testing

This repository contains testin..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
Apache 2.4.49 Path Traversal Vulnerability Chec..."
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];;"# CVE-2021-40438 - Apache <= 2.4.48 - SSRF Python exploit
A craf..."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# CVE-2023-44487
Basic vulnerability scanning to see if web serv..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
Fast python tool to test..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773-PoC
PoC for CVE-2021-41773 with docker to demon..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# Exploit for Apache2

Exploit for path transversal vulnerabilit..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

## Description

This script exploits CVE-2..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
---
## pythonËØ≠Ë®Äpoc&expÈ°πÁõÆ„ÄÇ Â£∞ÊòéÔºöËØ•È°πÁõÆÊù•Ëá™‰ΩúËÄÖÊó•Â∏∏..."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# CVE-2023-44487 and http2-rst-stream-attacker

## CVE-2023-4448..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773 - Apache HTTP Server 2.4.49

# Cara Menjalankan..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# Apachuk - CVE-2021-41773 Grabber with Shodan
Grabber Apache Di..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
### Poc CVE-2021-41773 - Apache 2.4.49 ..."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# HTTP/2 Rapid Reset Client (C#)

The HTTP/2 Rapid Reset Client,..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# Apache 2.4.50 - Path Traversal or Remote Code Execution
cve-20..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"### Simple CVE-2021-41773 checker

Simple..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773 - Apache HTTP Server 2.4.49

# Cara Menjalankan..."
Apache HTTP Server;2.4.29;True;['CVE-2021-44790'];https://www.cnvd.org.cn/flaw/show/CNVD-2021-102386;Apache HTTP Server is an open source web server from the Apache Foundation. A buffer overflow vulnerability exists in Apache HTTP Server, which stems from a failure of the product's r:parsebody to properly determine user bounds. An attacker could cause a buffer overflow through this vulnerability.
Apache HTTP Server;2.4.29;True;['CVE-2021-34798'];https://www.cnvd.org.cn/flaw/show/CNVD-2022-03223;Apache HTTP Server is an open source web server from the Apache Foundation. The server is fast, reliable, and extensible via a simple API.A security vulnerability exists in Apache HTTP Server versions 2.4.48 and earlier, which stems from the possibility that a malformed request could cause the server to dereference a NULL pointer. No details of the vulnerability are currently available.
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];https://www.cnvd.org.cn/flaw/show/CNVD-2022-03224;Apache HTTP Server is an open source web server from the Apache Foundation. Apache HTTP Server in version 2.4.48 and earlier is vulnerable to server-side request forgery, which stems from a failure of the mod_proxy module to properly validate user input and can be exploited to forward requests to a remote user-selected source server.
Apache HTTP Server;2.4.29;True;['CVE-2021-39275'];https://www.cnvd.org.cn/flaw/show/CNVD-2022-03225;Apache HTTP Server is an open source web server from the Apache Foundation. The server is fast, reliable, and extensible via a simple API. buffer overflow vulnerability exists in Apache HTTP Server versions 2.4.48 and earlier, which stems from the possibility that ap_escape_quotes() may write content outside of the buffer when given malicious input. An attacker could exploit this vulnerability to write malicious content and execute it.
Apache HTTP Server;2.4.29;True;['CVE-2022-28330'];https://www.cnvd.org.cn/flaw/show/CNVD-2022-53582;Apache HTTP Server is an open source web server from the Apache Foundation. The server is fast, reliable, and extensible via a simple API. buffer overflow vulnerability exists in Apache HTTP Server 2.4.53 and earlier versions, which stems from a boundary error in the mod_isapi module when handling untrusted input. A remote attacker could exploit this vulnerability to cause out-of-bounds reads.
Apache HTTP Server;2.4.29;True;['CVE-2022-29404'];https://www.cnvd.org.cn/flaw/show/CNVD-2022-53584;Apache HTTP Server is an open source web server from the Apache Foundation. Apache HTTP Server 2.4.53 and earlier versions are vulnerable to an input validation error that results from a failure to restrict input to malicious requests for lua scripts that call r:parsebody(0), which can be exploited by attackers to cause a denial of service.
Apache HTTP Server;2.4.29;True;['CVE-2022-30556'];https://www.cnvd.org.cn/flaw/show/CNVD-2022-73122;Apache HTTP Server is an open source web server from the Apache Foundation. Apache HTTP Server is vulnerable to an information disclosure vulnerability that could be exploited by attackers to obtain sensitive information.
Apache HTTP Server;2.4.29;True;['CVE-2022-31813'];https://www.cnvd.org.cn/flaw/show/CNVD-2022-73123;Apache HTTP Server is an open source web server from the Apache Foundation. Apache HTTP Server is vulnerable to a data forgery issue that stems from mod_proxy's X-Forwarded-For hop-by-hop mechanism discard. An attacker could use this vulnerability to bypass IP-based authentication on the source server/application.
Apache HTTP Server;2.4.29;True;['CVE-2006-20001'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-80558;Apache HTTP Server is the United States Apache (Apache) Foundation of an open source web server . The server is fast, reliable and can be expanded through a simple API. A buffer overflow vulnerability exists in Apache HTTP Server version 2.4.54 and earlier. An attacker can exploit this vulnerability to cause a process crash.
Apache HTTP Server;2.4.29;True;['CVE-2023-31122'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-93320;Apache HTTP Server is the United States Apache (Apache) Foundation of an open source web server . The server is fast, reliable and can be expanded through a simple API. A buffer overflow vulnerability exists in Apache HTTP Server 2.4.57 and earlier versions, which stems from an out-of-bounds read vulnerability in the mod_macro buffer. An attacker could exploit this vulnerability to cause a denial of service.
Apache HTTP Server;2.4.29;True;['CVE-2006-20001'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2006-20001;"A carefully crafted If: request header can cause a memory read, or write of a single zero byte, in a pool (heap) memory location beyond the header value sent. This could cause the process to crash.

This issue affects Apache HTTP Server 2.4.54 and earlier.
"
Apache HTTP Server;2.4.29;True;['CVE-2017-15710'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-15710;In Apache httpd 2.0.23 to 2.0.65, 2.2.0 to 2.2.34, and 2.4.0 to 2.4.29, mod_authnz_ldap, if configured with AuthLDAPCharsetConfig, uses the Accept-Language header value to lookup the right charset encoding when verifying the user's credentials. If the header value is not present in the charset conversion table, a fallback mechanism is used to truncate it to a two characters value to allow a quick retry (for example, 'en-US' is truncated to 'en'). A header value of less than two characters forces an out of bound write of one NUL byte to a memory location that is not part of the string. In the worst case, quite unlikely, the process would crash which could be used as a Denial of Service attack. In the more likely case, this memory is already reserved for future use and the issue has no effect at all.
Apache HTTP Server;2.4.29;True;['CVE-2017-15715'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-15715;In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.
Apache HTTP Server;2.4.29;True;['CVE-2018-11763'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-11763;In Apache HTTP Server 2.4.17 to 2.4.34, by sending continuous, large SETTINGS frames a client can occupy a connection, server thread and CPU time without any connection timeout coming to effect. This affects only HTTP/2 connections. A possible mitigation is to not enable the h2 protocol.
Apache HTTP Server;2.4.29;True;['CVE-2018-1283'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1283;"In Apache httpd 2.4.0 to 2.4.29, when mod_session is configured to forward its session data to CGI applications (SessionEnv on, not the default), a remote user may influence their content by using a ""Session"" header. This comes from the ""HTTP_SESSION"" variable name used by mod_session to forward its data to CGIs, since the prefix ""HTTP_"" is also used by the Apache HTTP Server to pass HTTP header fields, per CGI specifications."
Apache HTTP Server;2.4.29;True;['CVE-2018-1301'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1301;A specially crafted request could have crashed the Apache HTTP Server prior to version 2.4.30, due to an out of bound access after a size limit is reached by reading the HTTP header. This vulnerability is considered very hard if not impossible to trigger in non-debug mode (both log and build level), so it is classified as low risk for common server usage.
Apache HTTP Server;2.4.29;True;['CVE-2018-1302'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1302;When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.
Apache HTTP Server;2.4.29;True;['CVE-2018-1303'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1303;A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.30 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache. The vulnerability is considered as low risk since mod_cache_socache is not widely used, mod_cache_disk is not concerned by this vulnerability.
Apache HTTP Server;2.4.29;True;['CVE-2018-1312'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1312;In Apache httpd 2.2.0 to 2.4.29, when generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.
Apache HTTP Server;2.4.29;True;['CVE-2018-1333'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-1333;By specially crafting HTTP/2 requests, workers would be allocated 60 seconds longer than necessary, leading to worker exhaustion and a denial of service. Fixed in Apache HTTP Server 2.4.34 (Affected 2.4.18-2.4.30,2.4.33).
Apache HTTP Server;2.4.29;True;['CVE-2018-17189'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-17189;In Apache HTTP server versions 2.4.37 and prior, by sending request bodies in a slow loris way to plain resources, the h2 stream for that request unnecessarily occupied a server thread cleaning up that incoming data. This affects only HTTP/2 (mod_http2) connections.
Apache HTTP Server;2.4.29;True;['CVE-2018-17199'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-17199;In Apache HTTP Server 2.4 release 2.4.37 and prior, mod_session checks the session expiry time before decoding the session. This causes session expiry time to be ignored for mod_session_cookie sessions since the expiry time is loaded when the session is decoded.
Apache HTTP Server;2.4.29;True;['CVE-2019-0196'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-0196;A vulnerability was found in Apache HTTP Server 2.4.17 to 2.4.38. Using fuzzed network input, the http/2 request handling could be made to access freed memory in string comparison when determining the method of a request and thus process the request incorrectly.
Apache HTTP Server;2.4.29;True;['CVE-2019-0211'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-0211;In Apache HTTP Server 2.4 releases 2.4.17 to 2.4.38, with MPM event, worker or prefork, code executing in less-privileged child processes or threads (including scripts executed by an in-process scripting interpreter) could execute arbitrary code with the privileges of the parent process (usually root) by manipulating the scoreboard. Non-Unix systems are not affected.
Apache HTTP Server;2.4.29;True;['CVE-2019-0217'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-0217;In Apache HTTP Server 2.4 release 2.4.38 and prior, a race condition in mod_auth_digest when running in a threaded server could allow a user with valid credentials to authenticate using another username, bypassing configured access control restrictions.
Apache HTTP Server;2.4.29;True;['CVE-2019-0220'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-0220;A vulnerability was found in Apache HTTP Server 2.4.0 to 2.4.38. When the path component of a request URL contains multiple consecutive slashes ('/'), directives such as LocationMatch and RewriteRule must account for duplicates in regular expressions while other aspects of the servers processing will implicitly collapse them.
Apache HTTP Server;2.4.29;True;['CVE-2019-10081'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10081;"HTTP/2 (2.4.20 through 2.4.39) very early pushes, for example configured with ""H2PushResource"", could lead to an overwrite of memory in the pushing request's pool, leading to crashes. The memory copied is that of the configured push link header values, not data supplied by the client."
Apache HTTP Server;2.4.29;True;['CVE-2019-10082'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10082;In Apache HTTP Server 2.4.18-2.4.39, using fuzzed network input, the http/2 session handling could be made to read memory after being freed, during connection shutdown.
Apache HTTP Server;2.4.29;True;['CVE-2019-10092'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10092;In Apache HTTP Server 2.4.0-2.4.39, a limited cross-site scripting issue was reported affecting the mod_proxy error page. An attacker could cause the link on the error page to be malformed and instead point to a page of their choice. This would only be exploitable where a server was set up with proxying enabled but was misconfigured in such a way that the Proxy Error page was displayed.
Apache HTTP Server;2.4.29;True;['CVE-2019-10098'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10098;In Apache HTTP server 2.4.0 to 2.4.39, Redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an unexpected URL within the request URL.
Apache HTTP Server;2.4.29;True;['CVE-2019-17567'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-17567;Apache HTTP Server versions 2.4.6 to 2.4.46 mod_proxy_wstunnel configured on an URL that is not necessarily Upgraded by the origin server was tunneling the whole connection regardless, thus allowing for subsequent requests on the same connection to pass through with no HTTP validation, authentication or authorization possibly configured.
Apache HTTP Server;2.4.29;True;['CVE-2019-9517'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-9517;"Some HTTP/2 implementations are vulnerable to unconstrained interal data buffering, potentially leading to a denial of service. The attacker opens the HTTP/2 window so the peer can send without constraint; however, they leave the TCP window closed so the peer cannot actually write (many of) the bytes on the wire. The attacker then sends a stream of requests for a large response object. Depending on how the servers queue the responses, this can consume excess memory, CPU, or both."
Apache HTTP Server;2.4.29;True;['CVE-2020-11993'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-11993;"Apache HTTP Server versions 2.4.20 to 2.4.43 When trace/debug was enabled for the HTTP/2 module and on certain traffic edge patterns, logging statements were made on the wrong connection, causing concurrent use of memory pools. Configuring the LogLevel of mod_http2 above ""info"" will mitigate this vulnerability for unpatched servers."
Apache HTTP Server;2.4.29;True;['CVE-2020-1927'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-1927;In Apache HTTP Server 2.4.0 to 2.4.41, redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.
Apache HTTP Server;2.4.29;True;['CVE-2020-1934'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-1934;In Apache HTTP Server 2.4.0 to 2.4.41, mod_proxy_ftp may use uninitialized memory when proxying to a malicious FTP server.
Apache HTTP Server;2.4.29;True;['CVE-2020-35452'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-35452;Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Digest nonce can cause a stack overflow in mod_auth_digest. There is no report of this overflow being exploitable, nor the Apache HTTP Server team could create one, though some particular compiler and/or compilation option might make it possible, with limited consequences anyway due to the size (a single byte) and the value (zero byte) of the overflow
Apache HTTP Server;2.4.29;True;['CVE-2020-9490'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-9490;"Apache HTTP Server versions 2.4.20 to 2.4.43. A specially crafted value for the 'Cache-Digest' header in a HTTP/2 request would result in a crash when the server actually tries to HTTP/2 PUSH a resource afterwards. Configuring the HTTP/2 feature via ""H2Push off"" will mitigate this vulnerability for unpatched servers."
Apache HTTP Server;2.4.29;True;['CVE-2021-26690'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-26690;Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Cookie header handled by mod_session can cause a NULL pointer dereference and crash, leading to a possible Denial Of Service
Apache HTTP Server;2.4.29;True;['CVE-2021-26691'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-26691;In Apache HTTP Server versions 2.4.0 to 2.4.46 a specially crafted SessionHeader sent by an origin server could cause a heap overflow
Apache HTTP Server;2.4.29;True;['CVE-2021-33193'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-33193;A crafted method sent through HTTP/2 will bypass validation and be forwarded by mod_proxy, which can lead to request splitting or cache poisoning. This issue affects Apache HTTP Server 2.4.17 to 2.4.48.
Apache HTTP Server;2.4.29;True;['CVE-2021-34798'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-34798;Malformed requests may cause the server to dereference a NULL pointer. This issue affects Apache HTTP Server 2.4.48 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2021-39275'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-39275;ap_escape_quotes() may write beyond the end of a buffer when given malicious input. No included modules pass untrusted data to these functions, but third-party / external modules may. This issue affects Apache HTTP Server 2.4.48 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-40438;A crafted request uri-path can cause mod_proxy to forward the request to an origin server choosen by the remote user. This issue affects Apache HTTP Server 2.4.48 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2021-44224'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-44224;A crafted URI sent to httpd configured as a forward proxy (ProxyRequests on) can cause a crash (NULL pointer dereference) or, for configurations mixing forward and reverse proxy declarations, can allow for requests to be directed to a declared Unix Domain Socket endpoint (Server Side Request Forgery). This issue affects Apache HTTP Server 2.4.7 up to 2.4.51 (included).
Apache HTTP Server;2.4.29;True;['CVE-2021-44790'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2021-44790;A carefully crafted request body can cause a buffer overflow in the mod_lua multipart parser (r:parsebody() called from Lua scripts). The Apache httpd team is not aware of an exploit for the vulnerabilty though it might be possible to craft one. This issue affects Apache HTTP Server 2.4.51 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2022-22719'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22719;A carefully crafted request body can cause a read to a random memory area which could cause the process to crash. This issue affects Apache HTTP Server 2.4.52 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2022-22720'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22720;Apache HTTP Server 2.4.52 and earlier fails to close inbound connection when errors are encountered discarding the request body, exposing the server to HTTP Request Smuggling
Apache HTTP Server;2.4.29;True;['CVE-2022-22721'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-22721;If LimitXMLRequestBody is set to allow request bodies larger than 350MB (defaults to 1M) on 32 bit systems an integer overflow happens which later causes out of bounds writes. This issue affects Apache HTTP Server 2.4.52 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2022-23943'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-23943;Out-of-bounds Write vulnerability in mod_sed of Apache HTTP Server allows an attacker to overwrite heap memory with possibly attacker provided data. This issue affects Apache HTTP Server 2.4 version 2.4.52 and prior versions.
Apache HTTP Server;2.4.29;True;['CVE-2022-26377'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-26377;Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') vulnerability in mod_proxy_ajp of Apache HTTP Server allows an attacker to smuggle requests to the AJP server it forwards requests to. This issue affects Apache HTTP Server Apache HTTP Server 2.4 version 2.4.53 and prior versions.
Apache HTTP Server;2.4.29;True;['CVE-2022-28614'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-28614;The ap_rwrite() function in Apache HTTP Server 2.4.53 and earlier may read unintended memory if an attacker can cause the server to reflect very large input using ap_rwrite() or ap_rputs(), such as with mod_luas r:puts() function. Modules compiled and distributed separately from Apache HTTP Server that use the 'ap_rputs' function and may pass it a very large (INT_MAX or larger) string must be compiled against current headers to resolve the issue.
Apache HTTP Server;2.4.29;True;['CVE-2022-28615'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-28615;Apache HTTP Server 2.4.53 and earlier may crash or disclose information due to a read beyond bounds in ap_strcmp_match() when provided with an extremely large input buffer. While no code distributed with the server can be coerced into such a call, third-party modules or lua scripts that use ap_strcmp_match() may hypothetically be affected.
Apache HTTP Server;2.4.29;True;['CVE-2022-29404'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-29404;In Apache HTTP Server 2.4.53 and earlier, a malicious request to a lua script that calls r:parsebody(0) may cause a denial of service due to no default limit on possible input size.
Apache HTTP Server;2.4.29;True;['CVE-2022-30556'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-30556;Apache HTTP Server 2.4.53 and earlier may return lengths to applications calling r:wsread() that point past the end of the storage allocated for the buffer.
Apache HTTP Server;2.4.29;True;['CVE-2022-31813'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-31813;Apache HTTP Server 2.4.53 and earlier may not send the X-Forwarded-* headers to the origin server based on client side Connection header hop-by-hop mechanism. This may be used to bypass IP based authentication on the origin server/application.
Apache HTTP Server;2.4.29;True;['CVE-2022-36760'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-36760;Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') vulnerability in mod_proxy_ajp of Apache HTTP Server allows an attacker to smuggle requests to the AJP server it forwards requests to.  This issue affects Apache HTTP Server Apache HTTP Server 2.4 version 2.4.54 and prior versions.
Apache HTTP Server;2.4.29;True;['CVE-2022-37436'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-37436;Prior to Apache HTTP Server 2.4.55, a malicious backend can cause the response headers to be truncated early, resulting in some headers being incorporated into the response body. If the later headers have any security purpose, they will not be interpreted by the client.
Apache HTTP Server;2.4.29;True;['CVE-2023-25690'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-25690;"Some mod_proxy configurations on Apache HTTP Server versions 2.4.0 through 2.4.55 allow a HTTP Request Smuggling attack.




Configurations are affected when mod_proxy is enabled along with some form of RewriteRule
 or ProxyPassMatch in which a non-specific pattern matches
 some portion of the user-supplied request-target (URL) data and is then
 re-inserted into the proxied request-target using variable 
substitution. For example, something like:




RewriteEngine on
RewriteRule ""^/here/(.*)"" ""http://example.com:8080/elsewhere?$1""; [P]
ProxyPassReverse /here/ http://example.com:8080/


Request splitting/smuggling could result in bypass of access controls in the proxy server, proxying unintended URLs to existing origin servers, and cache poisoning. Users are recommended to update to at least version 2.4.56 of Apache HTTP Server.


"
Apache HTTP Server;2.4.29;True;['CVE-2023-31122'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-31122;"Out-of-bounds Read vulnerability in mod_macro of Apache HTTP Server.This issue affects Apache HTTP Server: through 2.4.57.

"
Apache HTTP Server;2.4.29;True;['CVE-2023-44487', 'CVE-2023-45802'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-45802;"When a HTTP/2 stream was reset (RST frame) by a client, there was a time window were the request's memory resources were not reclaimed immediately. Instead, de-allocation was deferred to connection close. A client could send new requests and resets, keeping the connection busy and open and causing the memory footprint to keep on growing. On connection close, all resources were reclaimed, but the process might run out of memory before that.

This was found by the reporter during testing of¬†CVE-2023-44487 (HTTP/2 Rapid Reset Exploit) with their own test client. During ""normal"" HTTP/2 use, the probability to hit this bug is very low. The kept memory would not become noticeable before the connection closes or times out.

Users are recommended to upgrade to version 2.4.58, which fixes the issue.
"
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;# Vulnerable docker images for CVE-2021-41773 Apache path traver...
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# CVE-2023-44487 (HTTP/2 Rapid Reset)
There are some examples i..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773 ( Apache / 2.4.49 )
CVE-2021-41773 exploit by G..."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# HTTP2 Rapid Reset Attack: CVE-2023-44487
Quick exploit to test..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773
Path Traversal for Apache 2.4.49

## Affected b..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# cve-2021-42013
Apache 2.4.50 Path traversal vulnerabi..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773 Shodan scanner
CVE-2021-41773 Shodan scanner vi..."
Apache HTTP Server;2.4.29;True;['2019-0211', 'CVE-2019-0211'];https://www.exploit-db.com/exploits/46676;
Apache HTTP Server;2.4.29;True;['2021-41773', 'CVE-2021-41773'];https://www.exploit-db.com/exploits/50383;
Apache HTTP Server;2.4.29;True;['2021-42013', 'CVE-2021-42013'];https://www.exploit-db.com/exploits/50406;
Apache HTTP Server;2.4.29;True;['2021-42013', 'CVE-2021-42013'];https://www.exploit-db.com/exploits/50446;
Apache HTTP Server;2.4.29;True;['2021-41773', '2021-42013', 'CVE-2021-41773', 'CVE-2021-42013'];https://www.exploit-db.com/exploits/50512;
Apache HTTP Server;2.4.29;True;['2021-44790', 'CVE-2021-44790'];https://www.exploit-db.com/exploits/51193;
Apache HTTP Server;2.4.29;True;['CVE-2019-0211'];;"
Apache 2.4.17  2.4.38 - apache2ctl graceful logrotate Local Privilege Escalation"
Apache HTTP Server;2.4.29;True;['CVE-2023-44487'];;"# HTTP/2 Rapid Reset Client (C#)

The HTTP/2 Rapid Reset Client,..."
Apache HTTP Server;2.4.29;True;['CVE-2021-42013'];;"# Usage cve-2021-42013.py
### Check for Path Traversal and Remot..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# Mitigation-CVE-2021-41773-
Shell Script to mitigate CVE-2021-4..."
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];;"# CVE-2021-40438 exploit PoC with Docker setup

CD into the dire..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;# CVE-2021-41773_Ex...
Apache HTTP Server;2.4.29;True;['CVE-2021-41773'];;"# CVE-2021-41773

apache http server vulnerability (only works 2..."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773', 'CVE-2021-42013'];https://www.rapid7.com/db/modules/auxiliary/scanner/http/apache_normalize_path/;"This module scans for an unauthenticated RCE vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773). If files outside of the document root are not protected by ‚Äòrequire all denied‚Äô and CGI has been explicitly enabled, it can be used to execute arbitrary commands (Remote Command Execution). This vulnerability has been reintroduced in Apache 2.4.50 fix (CVE-2021-42013).
"
Apache HTTP Server;2.4.29;True;['CVE-2021-41773', 'CVE-2021-42013'];https://www.rapid7.com/db/modules/exploit/multi/http/apache_normalize_path_rce/;"This module exploit an unauthenticated RCE vulnerability which exists in Apache version 2.4.49 (CVE-2021-41773). If files outside of the document root are not protected by ‚Äòrequire all denied‚Äô and CGI has been explicitly enabled, it can be used to execute arbitrary commands (Remote Command Execution). This vulnerability has been reintroduced in Apache 2.4.50 fix (CVE-2021-42013).
"
Apache HTTP Server;2.4.29;True;['CVE-2023-31122'];https://osv.dev/vulnerability/BIT-2023-31122;Out-of-bounds Read vulnerability in mod_macro of Apache HTTP Server.This issue affects Apache HTTP Server: through 2.4.57.
Apache HTTP Server;2.4.29;True;['CVE-2023-43622'];https://osv.dev/vulnerability/BIT-2023-43622;"An attacker, opening a HTTP/2 connection with an initial window size of 0, was able to block handling of that connection indefinitely in Apache HTTP Server. This could be used to exhaust worker resources in the server, similar to the well known ""slow loris"" attack pattern.This has been fixed in version 2.4.58, so that such connection are terminated properly after the configured connection timeout.This issue affects Apache HTTP Server: from 2.4.55 through 2.4.57.Users are recommended to upgrade to version 2.4.58, which fixes the issue."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487', 'CVE-2023-45802'];https://osv.dev/vulnerability/BIT-2023-45802;"When a HTTP/2 stream was reset (RST frame) by a client, there was a time window were the request's memory resources were not reclaimed immediately. Instead, de-allocation was deferred to connection close. A client could send new requests and resets, keeping the connection busy and open and causing the memory footprint to keep on growing. On connection close, all resources were reclaimed, but the process might run out of memory before that.This was found by the reporter during testing of¬†CVE-2023-44487 (HTTP/2 Rapid Reset Exploit) with their own test client. During ""normal"" HTTP/2 use, the probability to hit this bug is very low. The kept memory would not become noticeable before the connection closes or times out.Users are recommended to upgrade to version 2.4.58, which fixes the issue."
Apache HTTP Server;2.4.29;True;['CVE-2020-11984'];https://osv.dev/vulnerability/BIT-apache-2020-11984;Apache HTTP server 2.4.32 to 2.4.44 mod_proxy_uwsgi info disclosure and possible RCE
Apache HTTP Server;2.4.29;True;['CVE-2020-11993'];https://osv.dev/vulnerability/BIT-apache-2020-11993;"Apache HTTP Server versions 2.4.20 to 2.4.43 When trace/debug was enabled for the HTTP/2 module and on certain traffic edge patterns, logging statements were made on the wrong connection, causing concurrent use of memory pools. Configuring the LogLevel of mod_http2 above ""info"" will mitigate this vulnerability for unpatched servers."
Apache HTTP Server;2.4.29;True;['CVE-2020-13938'];https://osv.dev/vulnerability/BIT-apache-2020-13938;Apache HTTP Server versions 2.4.0 to 2.4.46 Unprivileged local users can stop httpd on Windows
Apache HTTP Server;2.4.29;True;['CVE-2020-13950'];https://osv.dev/vulnerability/BIT-apache-2020-13950;Apache HTTP Server versions 2.4.41 to 2.4.46 mod_proxy_http can be made to crash (NULL pointer dereference) with specially crafted requests using both Content-Length and Transfer-Encoding headers, leading to a Denial of Service
Apache HTTP Server;2.4.29;True;['CVE-2020-1927'];https://osv.dev/vulnerability/BIT-apache-2020-1927;In Apache HTTP Server 2.4.0 to 2.4.41, redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.
Apache HTTP Server;2.4.29;True;['CVE-2020-1934'];https://osv.dev/vulnerability/BIT-apache-2020-1934;In Apache HTTP Server 2.4.0 to 2.4.41, mod_proxy_ftp may use uninitialized memory when proxying to a malicious FTP server.
Apache HTTP Server;2.4.29;True;['CVE-2020-35452'];https://osv.dev/vulnerability/BIT-apache-2020-35452;Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Digest nonce can cause a stack overflow in mod_auth_digest. There is no report of this overflow being exploitable, nor the Apache HTTP Server team could create one, though some particular compiler and/or compilation option might make it possible, with limited consequences anyway due to the size (a single byte) and the value (zero byte) of the overflow
Apache HTTP Server;2.4.29;True;['CVE-2020-9490'];https://osv.dev/vulnerability/BIT-apache-2020-9490;"Apache HTTP Server versions 2.4.20 to 2.4.43. A specially crafted value for the 'Cache-Digest' header in a HTTP/2 request would result in a crash when the server actually tries to HTTP/2 PUSH a resource afterwards. Configuring the HTTP/2 feature via ""H2Push off"" will mitigate this vulnerability for unpatched servers."
Apache HTTP Server;2.4.29;True;['CVE-2021-26690'];https://osv.dev/vulnerability/BIT-apache-2021-26690;Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Cookie header handled by mod_session can cause a NULL pointer dereference and crash, leading to a possible Denial Of Service
Apache HTTP Server;2.4.29;True;['CVE-2021-26691'];https://osv.dev/vulnerability/BIT-apache-2021-26691;In Apache HTTP Server versions 2.4.0 to 2.4.46 a specially crafted SessionHeader sent by an origin server could cause a heap overflow
Apache HTTP Server;2.4.29;True;['CVE-2021-30641'];https://osv.dev/vulnerability/BIT-apache-2021-30641;Apache HTTP Server versions 2.4.39 to 2.4.46 Unexpected matching behavior with 'MergeSlashes OFF'
Apache HTTP Server;2.4.29;True;['CVE-2021-31618'];https://osv.dev/vulnerability/BIT-apache-2021-31618;Apache HTTP Server protocol handler for the HTTP/2 protocol checks received request headers against the size limitations as configured for the server and used for the HTTP/1 protocol as well. On violation of these restrictions and HTTP response is sent to the client with a status code indicating why the request was rejected. This rejection response was not fully initialised in the HTTP/2 protocol handler if the offending header was the very first one received or appeared in a a footer. This led to a NULL pointer dereference on initialised memory, crashing reliably the child process. Since such a triggering HTTP/2 request is easy to craft and submit, this can be exploited to DoS the server. This issue affected mod_http2 1.15.17 and Apache HTTP Server version 2.4.47 only. Apache HTTP Server 2.4.47 was never released.
Apache HTTP Server;2.4.29;True;['CVE-2021-33193'];https://osv.dev/vulnerability/BIT-apache-2021-33193;A crafted method sent through HTTP/2 will bypass validation and be forwarded by mod_proxy, which can lead to request splitting or cache poisoning. This issue affects Apache HTTP Server 2.4.17 to 2.4.48.
Apache HTTP Server;2.4.29;True;['CVE-2021-34798'];https://osv.dev/vulnerability/BIT-apache-2021-34798;Malformed requests may cause the server to dereference a NULL pointer. This issue affects Apache HTTP Server 2.4.48 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2021-36160'];https://osv.dev/vulnerability/BIT-apache-2021-36160;A carefully crafted request uri-path can cause mod_proxy_uwsgi to read above the allocated memory and crash (DoS). This issue affects Apache HTTP Server versions 2.4.30 to 2.4.48 (inclusive).
Apache HTTP Server;2.4.29;True;['CVE-2021-39275'];https://osv.dev/vulnerability/BIT-apache-2021-39275;ap_escape_quotes() may write beyond the end of a buffer when given malicious input. No included modules pass untrusted data to these functions, but third-party / external modules may. This issue affects Apache HTTP Server 2.4.48 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2021-40438'];https://osv.dev/vulnerability/BIT-apache-2021-40438;A crafted request uri-path can cause mod_proxy to forward the request to an origin server choosen by the remote user. This issue affects Apache HTTP Server 2.4.48 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2021-41524'];https://osv.dev/vulnerability/BIT-apache-2021-41524;While fuzzing the 2.4.49 httpd, a new null pointer dereference was detected during HTTP/2 request processing, allowing an external source to DoS the server. This requires a specially crafted request. The vulnerability was recently introduced in version 2.4.49. No exploit is known to the project.
Apache HTTP Server;2.4.29;True;['CVE-2021-41773', 'CVE-2021-42013'];https://osv.dev/vulnerability/BIT-apache-2021-41773;"A flaw was found in a change made to path normalization in Apache HTTP Server 2.4.49. An attacker could use a path traversal attack to map URLs to files outside the directories configured by Alias-like directives. If files outside of these directories are not protected by the usual default configuration ""require all denied"", these requests can succeed. If CGI scripts are also enabled for these aliased pathes, this could allow for remote code execution. This issue is known to be exploited in the wild. This issue only affects Apache 2.4.49 and not earlier versions. The fix in Apache HTTP Server 2.4.50 was found to be incomplete, see CVE-2021-42013."
Apache HTTP Server;2.4.29;True;['CVE-2021-41773', 'CVE-2021-42013'];https://osv.dev/vulnerability/BIT-apache-2021-42013;"It was found that the fix for CVE-2021-41773 in Apache HTTP Server 2.4.50 was insufficient. An attacker could use a path traversal attack to map URLs to files outside the directories configured by Alias-like directives. If files outside of these directories are not protected by the usual default configuration ""require all denied"", these requests can succeed. If CGI scripts are also enabled for these aliased pathes, this could allow for remote code execution. This issue only affects Apache 2.4.49 and Apache 2.4.50 and not earlier versions."
Apache HTTP Server;2.4.29;True;['CVE-2021-44224'];https://osv.dev/vulnerability/BIT-apache-2021-44224;A crafted URI sent to httpd configured as a forward proxy (ProxyRequests on) can cause a crash (NULL pointer dereference) or, for configurations mixing forward and reverse proxy declarations, can allow for requests to be directed to a declared Unix Domain Socket endpoint (Server Side Request Forgery). This issue affects Apache HTTP Server 2.4.7 up to 2.4.51 (included).
Apache HTTP Server;2.4.29;True;['CVE-2021-44790'];https://osv.dev/vulnerability/BIT-apache-2021-44790;A carefully crafted request body can cause a buffer overflow in the mod_lua multipart parser (r:parsebody() called from Lua scripts). The Apache httpd team is not aware of an exploit for the vulnerabilty though it might be possible to craft one. This issue affects Apache HTTP Server 2.4.51 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2022-22719'];https://osv.dev/vulnerability/BIT-apache-2022-22719;A carefully crafted request body can cause a read to a random memory area which could cause the process to crash. This issue affects Apache HTTP Server 2.4.52 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2022-22720'];https://osv.dev/vulnerability/BIT-apache-2022-22720;Apache HTTP Server 2.4.52 and earlier fails to close inbound connection when errors are encountered discarding the request body, exposing the server to HTTP Request Smuggling
Apache HTTP Server;2.4.29;True;['CVE-2022-22721'];https://osv.dev/vulnerability/BIT-apache-2022-22721;If LimitXMLRequestBody is set to allow request bodies larger than 350MB (defaults to 1M) on 32 bit systems an integer overflow happens which later causes out of bounds writes. This issue affects Apache HTTP Server 2.4.52 and earlier.
Apache HTTP Server;2.4.29;True;['CVE-2022-23943'];https://osv.dev/vulnerability/BIT-apache-2022-23943;Out-of-bounds Write vulnerability in mod_sed of Apache HTTP Server allows an attacker to overwrite heap memory with possibly attacker provided data. This issue affects Apache HTTP Server 2.4 version 2.4.52 and prior versions.
Apache HTTP Server;2.4.29;True;['CVE-2022-26377'];https://osv.dev/vulnerability/BIT-apache-2022-26377;Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') vulnerability in mod_proxy_ajp of Apache HTTP Server allows an attacker to smuggle requests to the AJP server it forwards requests to. This issue affects Apache HTTP Server Apache HTTP Server 2.4 version 2.4.53 and prior versions.
Apache HTTP Server;2.4.29;True;['CVE-2022-28330'];https://osv.dev/vulnerability/BIT-apache-2022-28330;Apache HTTP Server 2.4.53 and earlier on Windows may read beyond bounds when configured to process requests with the mod_isapi module.
Apache HTTP Server;2.4.29;True;['CVE-2022-28614'];https://osv.dev/vulnerability/BIT-apache-2022-28614;The ap_rwrite() function in Apache HTTP Server 2.4.53 and earlier may read unintended memory if an attacker can cause the server to reflect very large input using ap_rwrite() or ap_rputs(), such as with mod_luas r:puts() function. Modules compiled and distributed separately from Apache HTTP Server that use the 'ap_rputs' function and may pass it a very large (INT_MAX or larger) string must be compiled against current headers to resolve the issue.
Apache HTTP Server;2.4.29;True;['CVE-2022-28615'];https://osv.dev/vulnerability/BIT-apache-2022-28615;Apache HTTP Server 2.4.53 and earlier may crash or disclose information due to a read beyond bounds in ap_strcmp_match() when provided with an extremely large input buffer. While no code distributed with the server can be coerced into such a call, third-party modules or lua scripts that use ap_strcmp_match() may hypothetically be affected.
Apache HTTP Server;2.4.29;True;['CVE-2022-29404'];https://osv.dev/vulnerability/BIT-apache-2022-29404;In Apache HTTP Server 2.4.53 and earlier, a malicious request to a lua script that calls r:parsebody(0) may cause a denial of service due to no default limit on possible input size.
Apache HTTP Server;2.4.29;True;['CVE-2022-30522'];https://osv.dev/vulnerability/BIT-apache-2022-30522;If Apache HTTP Server 2.4.53 is configured to do transformations with mod_sed in contexts where the input to mod_sed may be very large, mod_sed may make excessively large memory allocations and trigger an abort.
Apache HTTP Server;2.4.29;True;['CVE-2022-30556'];https://osv.dev/vulnerability/BIT-apache-2022-30556;Apache HTTP Server 2.4.53 and earlier may return lengths to applications calling r:wsread() that point past the end of the storage allocated for the buffer.
Apache HTTP Server;2.4.29;True;['CVE-2022-31813'];https://osv.dev/vulnerability/BIT-apache-2022-31813;Apache HTTP Server 2.4.53 and earlier may not send the X-Forwarded-* headers to the origin server based on client side Connection header hop-by-hop mechanism. This may be used to bypass IP based authentication on the origin server/application.
Apache HTTP Server;2.4.29;True;['CVE-2022-36760'];https://osv.dev/vulnerability/BIT-apache-2022-36760;Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') vulnerability in mod_proxy_ajp of Apache HTTP Server allows an attacker to smuggle requests to the AJP server it forwards requests to.  This issue affects Apache HTTP Server Apache HTTP Server 2.4 version 2.4.54 and prior versions.
Apache HTTP Server;2.4.29;True;['CVE-2022-37436'];https://osv.dev/vulnerability/BIT-apache-2022-37436;Prior to Apache HTTP Server 2.4.55, a malicious backend can cause the response headers to be truncated early, resulting in some headers being incorporated into the response body. If the later headers have any security purpose, they will not be interpreted by the client.
Apache HTTP Server;2.4.29;True;['CVE-2023-25690'];https://osv.dev/vulnerability/BIT-apache-2023-25690;"Some mod_proxy configurations on Apache HTTP Server versions 2.4.0 through 2.4.55 allow a HTTP Request Smuggling attack.Configurations are affected when mod_proxy is enabled along with some form of RewriteRule or ProxyPassMatch in which a non-specific pattern matches some portion of the user-supplied request-target (URL) data and is then re-inserted into the proxied request-target using variable substitution. For example, something like:RewriteEngine onRewriteRule ""^/here/(.*)"" ""http://example.com:8080/elsewhere?$1""; [P]ProxyPassReverse /here/ http://example.com:8080/Request splitting/smuggling could result in bypass of access controls in the proxy server, proxying unintended URLs to existing origin servers, and cache poisoning. Users are recommended to update to at least version 2.4.56 of Apache HTTP Server."
Apache HTTP Server;2.4.29;True;['CVE-2023-27522'];https://osv.dev/vulnerability/BIT-apache-2023-27522;HTTP Response Smuggling vulnerability in Apache HTTP Server via mod_proxy_uwsgi. This issue affects Apache HTTP Server: from 2.4.30 through 2.4.55.Special characters in the origin response header can truncate/split the response forwarded to the client.
Apache HTTP Server;2.4.29;True;['CVE-2023-31122'];https://osv.dev/vulnerability/BIT-apache-2023-31122;Out-of-bounds Read vulnerability in mod_macro of Apache HTTP Server.This issue affects Apache HTTP Server: through 2.4.57.
Apache HTTP Server;2.4.29;True;['CVE-2023-43622'];https://osv.dev/vulnerability/BIT-apache-2023-43622;"An attacker, opening a HTTP/2 connection with an initial window size of 0, was able to block handling of that connection indefinitely in Apache HTTP Server. This could be used to exhaust worker resources in the server, similar to the well known ""slow loris"" attack pattern.This has been fixed in version 2.4.58, so that such connection are terminated properly after the configured connection timeout.This issue affects Apache HTTP Server: from 2.4.55 through 2.4.57.Users are recommended to upgrade to version 2.4.58, which fixes the issue."
Apache HTTP Server;2.4.29;True;['CVE-2023-44487', 'CVE-2023-45802'];https://osv.dev/vulnerability/BIT-apache-2023-45802;"When a HTTP/2 stream was reset (RST frame) by a client, there was a time window were the request's memory resources were not reclaimed immediately. Instead, de-allocation was deferred to connection close. A client could send new requests and resets, keeping the connection busy and open and causing the memory footprint to keep on growing. On connection close, all resources were reclaimed, but the process might run out of memory before that.This was found by the reporter during testing of¬†CVE-2023-44487 (HTTP/2 Rapid Reset Exploit) with their own test client. During ""normal"" HTTP/2 use, the probability to hit this bug is very low. The kept memory would not become noticeable before the connection closes or times out.Users are recommended to upgrade to version 2.4.58, which fixes the issue."
Apache HTTP Server;2.4.29;True;['CVE-2019-0211'];https://packetstormsecurity.com/files/152441/CARPE-DIEM-Apache-2.4.x-Local-Privilege-Escalation.html;
Apache HTTP Server;2.4.29;True;['CVE-2021-44790'];https://packetstormsecurity.com/files/171631/Apache-2.4.x-Buffer-Overflow.html;
Apache HTTP Server;2.4.29;True;['CVE-2023-25690'];https://packetstormsecurity.com/files/176334/Apache-2.4.55-mod_proxy-HTTP-Request-Smuggling.html;
DjVu Reader;2.0.0.27;False;;;
Wireshark;2.6.1;True;['CVE-2018-14339'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14339;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the MMSE dissector could go into an infinite loop. This was addressed in epan/proto.c by adding offset and length validation.
Wireshark;2.6.1;True;['CVE-2018-14340'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14340;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, dissectors that support zlib decompression could crash. This was addressed in epan/tvbuff_zlib.c by rejecting negative lengths to avoid a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14341'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14341;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the DICOM dissector could go into a large or infinite loop. This was addressed in epan/dissectors/packet-dcm.c by preventing an offset overflow.
Wireshark;2.6.1;True;['CVE-2018-14342'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14342;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the BGP protocol dissector could go into a large loop. This was addressed in epan/dissectors/packet-bgp.c by validating Path Attribute lengths.
Wireshark;2.6.1;True;['CVE-2018-14343'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14343;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the ASN.1 BER dissector could crash. This was addressed in epan/dissectors/packet-ber.c by ensuring that length values do not exceed the maximum signed integer.
Wireshark;2.6.1;True;['CVE-2018-14344'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14344;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the ISMP dissector could crash. This was addressed in epan/dissectors/packet-ismp.c by validating the IPX address length to avoid a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14367'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14367;In Wireshark 2.6.0 to 2.6.1 and 2.4.0 to 2.4.7, the CoAP protocol dissector could crash. This was addressed in epan/dissectors/packet-coap.c by properly checking for a NULL condition.
Wireshark;2.6.1;True;['CVE-2018-14368'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14368;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the Bazaar protocol dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-bzr.c by properly handling items that are too long.
Wireshark;2.6.1;True;['CVE-2018-14369'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14369;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the HTTP2 dissector could crash. This was addressed in epan/dissectors/packet-http2.c by verifying that header data was found before proceeding to header decompression.
Wireshark;2.6.1;True;['CVE-2018-14370'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14370;In Wireshark 2.6.0 to 2.6.1 and 2.4.0 to 2.4.7, the IEEE 802.11 protocol dissector could crash. This was addressed in epan/crypt/airpdcap.c via bounds checking that prevents a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14438'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-14438;In Wireshark through 2.6.2, the create_app_running_mutex function in wsutil/file_util.c calls SetSecurityDescriptorDacl to set a NULL DACL, which allows attackers to modify the access control arbitrarily.
Wireshark;2.6.1;True;['CVE-2018-16056'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-16056;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Bluetooth Attribute Protocol dissector could crash. This was addressed in epan/dissectors/packet-btatt.c by verifying that a dissector for a specific UUID exists.
Wireshark;2.6.1;True;['CVE-2018-16057'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-16057;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Radiotap dissector could crash. This was addressed in epan/dissectors/packet-ieee80211-radiotap-iter.c by validating iterator operations.
Wireshark;2.6.1;True;['CVE-2018-16058'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-16058;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Bluetooth AVDTP dissector could crash. This was addressed in epan/dissectors/packet-btavdtp.c by properly initializing a data structure.
Wireshark;2.6.1;True;['CVE-2018-18225'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-18225;In Wireshark 2.6.0 to 2.6.3, the CoAP dissector could crash. This was addressed in epan/dissectors/packet-coap.c by ensuring that the piv length is correctly computed.
Wireshark;2.6.1;True;['CVE-2018-18226'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-18226;In Wireshark 2.6.0 to 2.6.3, the Steam IHS Discovery dissector could consume system memory. This was addressed in epan/dissectors/packet-steam-ihs-discovery.c by changing the memory-management approach.
Wireshark;2.6.1;True;['CVE-2018-18227'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-18227;In Wireshark 2.6.0 to 2.6.3 and 2.4.0 to 2.4.9, the MS-WSP protocol dissector could crash. This was addressed in epan/dissectors/packet-mswsp.c by properly handling NULL return values.
Wireshark;2.6.1;True;['CVE-2018-19622'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19622;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the MMSE dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-mmse.c by preventing length overflows.
Wireshark;2.6.1;True;['CVE-2018-19623'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19623;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the LBMPDM dissector could crash. In addition, a remote attacker could write arbitrary data to any memory locations before the packet-scoped memory. This was addressed in epan/dissectors/packet-lbmpdm.c by disallowing certain negative values.
Wireshark;2.6.1;True;['CVE-2018-19624'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19624;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the PVFS dissector could crash. This was addressed in epan/dissectors/packet-pvfs2.c by preventing a NULL pointer dereference.
Wireshark;2.6.1;True;['CVE-2018-19625'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19625;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the dissection engine could crash. This was addressed in epan/tvbuff_composite.c by preventing a heap-based buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-19626'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19626;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the DCOM dissector could crash. This was addressed in epan/dissectors/packet-dcom.c by adding '\0' termination.
Wireshark;2.6.1;True;['CVE-2018-19627'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19627;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the IxVeriWave file parser could crash. This was addressed in wiretap/vwr.c by adjusting a buffer boundary.
Wireshark;2.6.1;True;['CVE-2018-19628'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19628;In Wireshark 2.6.0 to 2.6.4, the ZigBee ZCL dissector could crash. This was addressed in epan/dissectors/packet-zbee-zcl-lighting.c by preventing a divide-by-zero error.
Wireshark;2.6.1;True;['CVE-2019-10894'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10894;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the GSS-API dissector could crash. This was addressed in epan/dissectors/packet-gssapi.c by ensuring that a valid dissector is called.
Wireshark;2.6.1;True;['CVE-2019-10895'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10895;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the NetScaler file parser could crash. This was addressed in wiretap/netscaler.c by improving data validation.
Wireshark;2.6.1;True;['CVE-2019-10896'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10896;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DOF dissector could crash. This was addressed in epan/dissectors/packet-dof.c by properly handling generated IID and OID bytes.
Wireshark;2.6.1;True;['CVE-2019-10899'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10899;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the SRVLOC dissector could crash. This was addressed in epan/dissectors/packet-srvloc.c by preventing a heap-based buffer under-read.
Wireshark;2.6.1;True;['CVE-2019-10901'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10901;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the LDSS dissector could crash. This was addressed in epan/dissectors/packet-ldss.c by handling file digests properly.
Wireshark;2.6.1;True;['CVE-2019-10903'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-10903;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DCERPC SPOOLSS dissector could crash. This was addressed in epan/dissectors/packet-dcerpc-spoolss.c by adding a boundary check.
Wireshark;2.6.1;True;['CVE-2019-12295'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-12295;In Wireshark 3.0.0 to 3.0.1, 2.6.0 to 2.6.8, and 2.4.0 to 2.4.14, the dissection engine could crash. This was addressed in epan/packet.c by restricting the number of layers and consequently limiting recursion.
Wireshark;2.6.1;True;['CVE-2019-13619'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13619;In Wireshark 3.0.0 to 3.0.2, 2.6.0 to 2.6.9, and 2.4.0 to 2.4.15, the ASN.1 BER dissector and related dissectors could crash. This was addressed in epan/asn1.c by properly restricting buffer increments.
Wireshark;2.6.1;True;['CVE-2019-16319'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-16319;In Wireshark 3.0.0 to 3.0.3 and 2.6.0 to 2.6.10, the Gryphon dissector could go into an infinite loop. This was addressed in plugins/epan/gryphon/packet-gryphon.c by checking for a message length of zero.
Wireshark;2.6.1;True;['CVE-2019-19553'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-19553;In Wireshark 3.0.0 to 3.0.6 and 2.6.0 to 2.6.12, the CMS dissector could crash. This was addressed in epan/dissectors/asn1/cms/packet-cms-template.c by ensuring that an object identifier is set to NULL after a ContentInfo dissection.
Wireshark;2.6.1;True;['CVE-2019-5716'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5716;In Wireshark 2.6.0 to 2.6.5, the 6LoWPAN dissector could crash. This was addressed in epan/dissectors/packet-6lowpan.c by avoiding use of a TVB before its creation.
Wireshark;2.6.1;True;['CVE-2019-5717'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5717;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the P_MUL dissector could crash. This was addressed in epan/dissectors/packet-p_mul.c by rejecting the invalid sequence number of zero.
Wireshark;2.6.1;True;['CVE-2019-5718'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5718;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the RTSE dissector and other ASN.1 dissectors could crash. This was addressed in epan/charsets.c by adding a get_t61_string length check.
Wireshark;2.6.1;True;['CVE-2019-5719'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5719;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the ISAKMP dissector could crash. This was addressed in epan/dissectors/packet-isakmp.c by properly handling the case of a missing decryption data block.
Wireshark;2.6.1;True;['CVE-2019-9208'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-9208;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the TCAP dissector could crash. This was addressed in epan/dissectors/asn1/tcap/tcap.cnf by avoiding NULL pointer dereferences.
Wireshark;2.6.1;True;['CVE-2019-9209'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-9209;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the ASN.1 BER and related dissectors could crash. This was addressed in epan/dissectors/packet-ber.c by preventing a buffer overflow associated with excessive digits in time values.
Wireshark;2.6.1;True;['CVE-2019-9214'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-9214;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the RPCAP dissector could crash. This was addressed in epan/dissectors/packet-rpcap.c by avoiding an attempted dereference of a NULL conversation.
Wireshark;2.6.1;True;['CVE-2020-11647'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-11647;In Wireshark 3.2.0 to 3.2.2, 3.0.0 to 3.0.9, and 2.6.0 to 2.6.15, the BACapp dissector could crash. This was addressed in epan/dissectors/packet-bacapp.c by limiting the amount of recursion.
Wireshark;2.6.1;True;['CVE-2020-13164'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-13164;In Wireshark 3.2.0 to 3.2.3, 3.0.0 to 3.0.10, and 2.6.0 to 2.6.16, the NFS dissector could crash. This was addressed in epan/dissectors/packet-nfs.c by preventing excessive recursion, such as for a cycle in the directory graph on a filesystem.
Wireshark;2.6.1;True;['CVE-2020-25862'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-25862;In Wireshark 3.2.0 to 3.2.6, 3.0.0 to 3.0.13, and 2.6.0 to 2.6.20, the TCP dissector could crash. This was addressed in epan/dissectors/packet-tcp.c by changing the handling of the invalid 0xFFFF checksum.
Wireshark;2.6.1;True;['CVE-2020-25863'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-25863;In Wireshark 3.2.0 to 3.2.6, 3.0.0 to 3.0.13, and 2.6.0 to 2.6.20, the MIME Multipart dissector could crash. This was addressed in epan/dissectors/packet-multipart.c by correcting the deallocation of invalid MIME parts.
Wireshark;2.6.1;True;['CVE-2020-9428'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-9428;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the EAP dissector could crash. This was addressed in epan/dissectors/packet-eap.c by using more careful sscanf parsing.
Wireshark;2.6.1;True;['CVE-2020-9430'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-9430;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the WiMax DLMAP dissector could crash. This was addressed in plugins/epan/wimax/msg_dlmap.c by validating a length field.
Wireshark;2.6.1;True;['CVE-2020-9431'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-9431;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the LTE RRC dissector could leak memory. This was addressed in epan/dissectors/packet-lte-rrc.c by adjusting certain append operations.
Wireshark;2.6.1;True;['CVE-2018-14339'];https://osv.dev/vulnerability/CVE-2018-14339;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the MMSE dissector could go into an infinite loop. This was addressed in epan/proto.c by adding offset and length validation.
Wireshark;2.6.1;True;['CVE-2018-14340'];https://osv.dev/vulnerability/CVE-2018-14340;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, dissectors that support zlib decompression could crash. This was addressed in epan/tvbuff_zlib.c by rejecting negative lengths to avoid a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14341'];https://osv.dev/vulnerability/CVE-2018-14341;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the DICOM dissector could go into a large or infinite loop. This was addressed in epan/dissectors/packet-dcm.c by preventing an offset overflow.
Wireshark;2.6.1;True;['CVE-2018-14342'];https://osv.dev/vulnerability/CVE-2018-14342;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the BGP protocol dissector could go into a large loop. This was addressed in epan/dissectors/packet-bgp.c by validating Path Attribute lengths.
Wireshark;2.6.1;True;['CVE-2018-14343'];https://osv.dev/vulnerability/CVE-2018-14343;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the ASN.1 BER dissector could crash. This was addressed in epan/dissectors/packet-ber.c by ensuring that length values do not exceed the maximum signed integer.
Wireshark;2.6.1;True;['CVE-2018-14344'];https://osv.dev/vulnerability/CVE-2018-14344;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the ISMP dissector could crash. This was addressed in epan/dissectors/packet-ismp.c by validating the IPX address length to avoid a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14367'];https://osv.dev/vulnerability/CVE-2018-14367;In Wireshark 2.6.0 to 2.6.1 and 2.4.0 to 2.4.7, the CoAP protocol dissector could crash. This was addressed in epan/dissectors/packet-coap.c by properly checking for a NULL condition.
Wireshark;2.6.1;True;['CVE-2018-14368'];https://osv.dev/vulnerability/CVE-2018-14368;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the Bazaar protocol dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-bzr.c by properly handling items that are too long.
Wireshark;2.6.1;True;['CVE-2018-14369'];https://osv.dev/vulnerability/CVE-2018-14369;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the HTTP2 dissector could crash. This was addressed in epan/dissectors/packet-http2.c by verifying that header data was found before proceeding to header decompression.
Wireshark;2.6.1;True;['CVE-2018-14370'];https://osv.dev/vulnerability/CVE-2018-14370;In Wireshark 2.6.0 to 2.6.1 and 2.4.0 to 2.4.7, the IEEE 802.11 protocol dissector could crash. This was addressed in epan/crypt/airpdcap.c via bounds checking that prevents a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14438'];https://osv.dev/vulnerability/CVE-2018-14438;In Wireshark through 2.6.2, the create_app_running_mutex function in wsutil/file_util.c calls SetSecurityDescriptorDacl to set a NULL DACL, which allows attackers to modify the access control arbitrarily.
Wireshark;2.6.1;True;['CVE-2018-16056'];https://osv.dev/vulnerability/CVE-2018-16056;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Bluetooth Attribute Protocol dissector could crash. This was addressed in epan/dissectors/packet-btatt.c by verifying that a dissector for a specific UUID exists.
Wireshark;2.6.1;True;['CVE-2018-16057'];https://osv.dev/vulnerability/CVE-2018-16057;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Radiotap dissector could crash. This was addressed in epan/dissectors/packet-ieee80211-radiotap-iter.c by validating iterator operations.
Wireshark;2.6.1;True;['CVE-2018-16058'];https://osv.dev/vulnerability/CVE-2018-16058;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Bluetooth AVDTP dissector could crash. This was addressed in epan/dissectors/packet-btavdtp.c by properly initializing a data structure.
Wireshark;2.6.1;True;['CVE-2018-18225'];https://osv.dev/vulnerability/CVE-2018-18225;In Wireshark 2.6.0 to 2.6.3, the CoAP dissector could crash. This was addressed in epan/dissectors/packet-coap.c by ensuring that the piv length is correctly computed.
Wireshark;2.6.1;True;['CVE-2018-18226'];https://osv.dev/vulnerability/CVE-2018-18226;In Wireshark 2.6.0 to 2.6.3, the Steam IHS Discovery dissector could consume system memory. This was addressed in epan/dissectors/packet-steam-ihs-discovery.c by changing the memory-management approach.
Wireshark;2.6.1;True;['CVE-2018-18227'];https://osv.dev/vulnerability/CVE-2018-18227;In Wireshark 2.6.0 to 2.6.3 and 2.4.0 to 2.4.9, the MS-WSP protocol dissector could crash. This was addressed in epan/dissectors/packet-mswsp.c by properly handling NULL return values.
Wireshark;2.6.1;True;['CVE-2018-19622'];https://osv.dev/vulnerability/CVE-2018-19622;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the MMSE dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-mmse.c by preventing length overflows.
Wireshark;2.6.1;True;['CVE-2018-19623'];https://osv.dev/vulnerability/CVE-2018-19623;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the LBMPDM dissector could crash. In addition, a remote attacker could write arbitrary data to any memory locations before the packet-scoped memory. This was addressed in epan/dissectors/packet-lbmpdm.c by disallowing certain negative values.
Wireshark;2.6.1;True;['CVE-2018-19624'];https://osv.dev/vulnerability/CVE-2018-19624;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the PVFS dissector could crash. This was addressed in epan/dissectors/packet-pvfs2.c by preventing a NULL pointer dereference.
Wireshark;2.6.1;True;['CVE-2018-19625'];https://osv.dev/vulnerability/CVE-2018-19625;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the dissection engine could crash. This was addressed in epan/tvbuff_composite.c by preventing a heap-based buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-19626'];https://osv.dev/vulnerability/CVE-2018-19626;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the DCOM dissector could crash. This was addressed in epan/dissectors/packet-dcom.c by adding '\0' termination.
Wireshark;2.6.1;True;['CVE-2018-19627'];https://osv.dev/vulnerability/CVE-2018-19627;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the IxVeriWave file parser could crash. This was addressed in wiretap/vwr.c by adjusting a buffer boundary.
Wireshark;2.6.1;True;['CVE-2018-19628'];https://osv.dev/vulnerability/CVE-2018-19628;In Wireshark 2.6.0 to 2.6.4, the ZigBee ZCL dissector could crash. This was addressed in epan/dissectors/packet-zbee-zcl-lighting.c by preventing a divide-by-zero error.
Wireshark;2.6.1;True;['CVE-2019-10894'];https://osv.dev/vulnerability/CVE-2019-10894;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the GSS-API dissector could crash. This was addressed in epan/dissectors/packet-gssapi.c by ensuring that a valid dissector is called.
Wireshark;2.6.1;True;['CVE-2019-10895'];https://osv.dev/vulnerability/CVE-2019-10895;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the NetScaler file parser could crash. This was addressed in wiretap/netscaler.c by improving data validation.
Wireshark;2.6.1;True;['CVE-2019-10896'];https://osv.dev/vulnerability/CVE-2019-10896;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DOF dissector could crash. This was addressed in epan/dissectors/packet-dof.c by properly handling generated IID and OID bytes.
Wireshark;2.6.1;True;['CVE-2019-10899'];https://osv.dev/vulnerability/CVE-2019-10899;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the SRVLOC dissector could crash. This was addressed in epan/dissectors/packet-srvloc.c by preventing a heap-based buffer under-read.
Wireshark;2.6.1;True;['CVE-2019-10901'];https://osv.dev/vulnerability/CVE-2019-10901;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the LDSS dissector could crash. This was addressed in epan/dissectors/packet-ldss.c by handling file digests properly.
Wireshark;2.6.1;True;['CVE-2019-10903'];https://osv.dev/vulnerability/CVE-2019-10903;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DCERPC SPOOLSS dissector could crash. This was addressed in epan/dissectors/packet-dcerpc-spoolss.c by adding a boundary check.
Wireshark;2.6.1;True;['CVE-2019-13619'];https://osv.dev/vulnerability/CVE-2019-13619;In Wireshark 3.0.0 to 3.0.2, 2.6.0 to 2.6.9, and 2.4.0 to 2.4.15, the ASN.1 BER dissector and related dissectors could crash. This was addressed in epan/asn1.c by properly restricting buffer increments.
Wireshark;2.6.1;True;['CVE-2019-16319'];https://osv.dev/vulnerability/CVE-2019-16319;In Wireshark 3.0.0 to 3.0.3 and 2.6.0 to 2.6.10, the Gryphon dissector could go into an infinite loop. This was addressed in plugins/epan/gryphon/packet-gryphon.c by checking for a message length of zero.
Wireshark;2.6.1;True;['CVE-2019-19553'];https://osv.dev/vulnerability/CVE-2019-19553;In Wireshark 3.0.0 to 3.0.6 and 2.6.0 to 2.6.12, the CMS dissector could crash. This was addressed in epan/dissectors/asn1/cms/packet-cms-template.c by ensuring that an object identifier is set to NULL after a ContentInfo dissection.
Wireshark;2.6.1;True;['CVE-2019-5716'];https://osv.dev/vulnerability/CVE-2019-5716;In Wireshark 2.6.0 to 2.6.5, the 6LoWPAN dissector could crash. This was addressed in epan/dissectors/packet-6lowpan.c by avoiding use of a TVB before its creation.
Wireshark;2.6.1;True;['CVE-2019-5717'];https://osv.dev/vulnerability/CVE-2019-5717;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the P_MUL dissector could crash. This was addressed in epan/dissectors/packet-p_mul.c by rejecting the invalid sequence number of zero.
Wireshark;2.6.1;True;['CVE-2019-5718'];https://osv.dev/vulnerability/CVE-2019-5718;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the RTSE dissector and other ASN.1 dissectors could crash. This was addressed in epan/charsets.c by adding a get_t61_string length check.
Wireshark;2.6.1;True;['CVE-2019-5719'];https://osv.dev/vulnerability/CVE-2019-5719;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the ISAKMP dissector could crash. This was addressed in epan/dissectors/packet-isakmp.c by properly handling the case of a missing decryption data block.
Wireshark;2.6.1;True;['CVE-2019-9208'];https://osv.dev/vulnerability/CVE-2019-9208;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the TCAP dissector could crash. This was addressed in epan/dissectors/asn1/tcap/tcap.cnf by avoiding NULL pointer dereferences.
Wireshark;2.6.1;True;['CVE-2019-9209'];https://osv.dev/vulnerability/CVE-2019-9209;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the ASN.1 BER and related dissectors could crash. This was addressed in epan/dissectors/packet-ber.c by preventing a buffer overflow associated with excessive digits in time values.
Wireshark;2.6.1;True;['CVE-2019-9214'];https://osv.dev/vulnerability/CVE-2019-9214;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the RPCAP dissector could crash. This was addressed in epan/dissectors/packet-rpcap.c by avoiding an attempted dereference of a NULL conversation.
Wireshark;2.6.1;True;['CVE-2020-11647'];https://osv.dev/vulnerability/CVE-2020-11647;In Wireshark 3.2.0 to 3.2.2, 3.0.0 to 3.0.9, and 2.6.0 to 2.6.15, the BACapp dissector could crash. This was addressed in epan/dissectors/packet-bacapp.c by limiting the amount of recursion.
Wireshark;2.6.1;True;['CVE-2020-13164'];https://osv.dev/vulnerability/CVE-2020-13164;In Wireshark 3.2.0 to 3.2.3, 3.0.0 to 3.0.10, and 2.6.0 to 2.6.16, the NFS dissector could crash. This was addressed in epan/dissectors/packet-nfs.c by preventing excessive recursion, such as for a cycle in the directory graph on a filesystem.
Wireshark;2.6.1;True;['CVE-2020-25862'];https://osv.dev/vulnerability/CVE-2020-25862;In Wireshark 3.2.0 to 3.2.6, 3.0.0 to 3.0.13, and 2.6.0 to 2.6.20, the TCP dissector could crash. This was addressed in epan/dissectors/packet-tcp.c by changing the handling of the invalid 0xFFFF checksum.
Wireshark;2.6.1;True;['CVE-2020-25863'];https://osv.dev/vulnerability/CVE-2020-25863;In Wireshark 3.2.0 to 3.2.6, 3.0.0 to 3.0.13, and 2.6.0 to 2.6.20, the MIME Multipart dissector could crash. This was addressed in epan/dissectors/packet-multipart.c by correcting the deallocation of invalid MIME parts.
Wireshark;2.6.1;True;['CVE-2020-9428'];https://osv.dev/vulnerability/CVE-2020-9428;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the EAP dissector could crash. This was addressed in epan/dissectors/packet-eap.c by using more careful sscanf parsing.
Wireshark;2.6.1;True;['CVE-2020-9430'];https://osv.dev/vulnerability/CVE-2020-9430;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the WiMax DLMAP dissector could crash. This was addressed in plugins/epan/wimax/msg_dlmap.c by validating a length field.
Wireshark;2.6.1;True;['CVE-2020-9431'];https://osv.dev/vulnerability/CVE-2020-9431;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the LTE RRC dissector could leak memory. This was addressed in epan/dissectors/packet-lte-rrc.c by adjusting certain append operations.
Wireshark;2.6.1;True;['CVE-2018-14339'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14339;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the MMSE dissector could go into an infinite loop. This was addressed in epan/proto.c by adding offset and length validation.
Wireshark;2.6.1;True;['CVE-2018-14340'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14340;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, dissectors that support zlib decompression could crash. This was addressed in epan/tvbuff_zlib.c by rejecting negative lengths to avoid a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14341'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14341;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the DICOM dissector could go into a large or infinite loop. This was addressed in epan/dissectors/packet-dcm.c by preventing an offset overflow.
Wireshark;2.6.1;True;['CVE-2018-14342'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14342;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the BGP protocol dissector could go into a large loop. This was addressed in epan/dissectors/packet-bgp.c by validating Path Attribute lengths.
Wireshark;2.6.1;True;['CVE-2018-14343'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14343;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the ASN.1 BER dissector could crash. This was addressed in epan/dissectors/packet-ber.c by ensuring that length values do not exceed the maximum signed integer.
Wireshark;2.6.1;True;['CVE-2018-14344'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14344;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the ISMP dissector could crash. This was addressed in epan/dissectors/packet-ismp.c by validating the IPX address length to avoid a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14367'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14367;In Wireshark 2.6.0 to 2.6.1 and 2.4.0 to 2.4.7, the CoAP protocol dissector could crash. This was addressed in epan/dissectors/packet-coap.c by properly checking for a NULL condition.
Wireshark;2.6.1;True;['CVE-2018-14368'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14368;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the Bazaar protocol dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-bzr.c by properly handling items that are too long.
Wireshark;2.6.1;True;['CVE-2018-14369'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14369;In Wireshark 2.6.0 to 2.6.1, 2.4.0 to 2.4.7, and 2.2.0 to 2.2.15, the HTTP2 dissector could crash. This was addressed in epan/dissectors/packet-http2.c by verifying that header data was found before proceeding to header decompression.
Wireshark;2.6.1;True;['CVE-2018-14370'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14370;In Wireshark 2.6.0 to 2.6.1 and 2.4.0 to 2.4.7, the IEEE 802.11 protocol dissector could crash. This was addressed in epan/crypt/airpdcap.c via bounds checking that prevents a buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-14438'];https://www.prio-n.com/kb/vulnerability/CVE-2018-14438;In Wireshark through 2.6.2, the create_app_running_mutex function in wsutil/file_util.c calls SetSecurityDescriptorDacl to set a NULL DACL, which allows attackers to modify the access control arbitrarily.
Wireshark;2.6.1;True;['CVE-2018-16056'];https://www.prio-n.com/kb/vulnerability/CVE-2018-16056;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Bluetooth Attribute Protocol dissector could crash. This was addressed in epan/dissectors/packet-btatt.c by verifying that a dissector for a specific UUID exists.
Wireshark;2.6.1;True;['CVE-2018-16057'];https://www.prio-n.com/kb/vulnerability/CVE-2018-16057;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Radiotap dissector could crash. This was addressed in epan/dissectors/packet-ieee80211-radiotap-iter.c by validating iterator operations.
Wireshark;2.6.1;True;['CVE-2018-16058'];https://www.prio-n.com/kb/vulnerability/CVE-2018-16058;In Wireshark 2.6.0 to 2.6.2, 2.4.0 to 2.4.8, and 2.2.0 to 2.2.16, the Bluetooth AVDTP dissector could crash. This was addressed in epan/dissectors/packet-btavdtp.c by properly initializing a data structure.
Wireshark;2.6.1;True;['CVE-2018-18225'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18225;In Wireshark 2.6.0 to 2.6.3, the CoAP dissector could crash. This was addressed in epan/dissectors/packet-coap.c by ensuring that the piv length is correctly computed.
Wireshark;2.6.1;True;['CVE-2018-18226'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18226;In Wireshark 2.6.0 to 2.6.3, the Steam IHS Discovery dissector could consume system memory. This was addressed in epan/dissectors/packet-steam-ihs-discovery.c by changing the memory-management approach.
Wireshark;2.6.1;True;['CVE-2018-18227'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18227;In Wireshark 2.6.0 to 2.6.3 and 2.4.0 to 2.4.9, the MS-WSP protocol dissector could crash. This was addressed in epan/dissectors/packet-mswsp.c by properly handling NULL return values.
Wireshark;2.6.1;True;['CVE-2018-19622'];https://www.prio-n.com/kb/vulnerability/CVE-2018-19622;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the MMSE dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-mmse.c by preventing length overflows.
Wireshark;2.6.1;True;['CVE-2018-19623'];https://www.prio-n.com/kb/vulnerability/CVE-2018-19623;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the LBMPDM dissector could crash. In addition, a remote attacker could write arbitrary data to any memory locations before the packet-scoped memory. This was addressed in epan/dissectors/packet-lbmpdm.c by disallowing certain negative values.
Wireshark;2.6.1;True;['CVE-2018-19624'];https://www.prio-n.com/kb/vulnerability/CVE-2018-19624;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the PVFS dissector could crash. This was addressed in epan/dissectors/packet-pvfs2.c by preventing a NULL pointer dereference.
Wireshark;2.6.1;True;['CVE-2018-19625'];https://www.prio-n.com/kb/vulnerability/CVE-2018-19625;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the dissection engine could crash. This was addressed in epan/tvbuff_composite.c by preventing a heap-based buffer over-read.
Wireshark;2.6.1;True;['CVE-2018-19626'];https://www.prio-n.com/kb/vulnerability/CVE-2018-19626;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the DCOM dissector could crash. This was addressed in epan/dissectors/packet-dcom.c by adding '\0' termination.
Wireshark;2.6.1;True;['CVE-2018-19627'];https://www.prio-n.com/kb/vulnerability/CVE-2018-19627;In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the IxVeriWave file parser could crash. This was addressed in wiretap/vwr.c by adjusting a buffer boundary.
Wireshark;2.6.1;True;['CVE-2018-19628'];https://www.prio-n.com/kb/vulnerability/CVE-2018-19628;In Wireshark 2.6.0 to 2.6.4, the ZigBee ZCL dissector could crash. This was addressed in epan/dissectors/packet-zbee-zcl-lighting.c by preventing a divide-by-zero error.
Wireshark;2.6.1;True;['CVE-2019-10894'];https://www.prio-n.com/kb/vulnerability/CVE-2019-10894;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the GSS-API dissector could crash. This was addressed in epan/dissectors/packet-gssapi.c by ensuring that a valid dissector is called.
Wireshark;2.6.1;True;['CVE-2019-10895'];https://www.prio-n.com/kb/vulnerability/CVE-2019-10895;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the NetScaler file parser could crash. This was addressed in wiretap/netscaler.c by improving data validation.
Wireshark;2.6.1;True;['CVE-2019-10896'];https://www.prio-n.com/kb/vulnerability/CVE-2019-10896;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DOF dissector could crash. This was addressed in epan/dissectors/packet-dof.c by properly handling generated IID and OID bytes.
Wireshark;2.6.1;True;['CVE-2019-10899'];https://www.prio-n.com/kb/vulnerability/CVE-2019-10899;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the SRVLOC dissector could crash. This was addressed in epan/dissectors/packet-srvloc.c by preventing a heap-based buffer under-read.
Wireshark;2.6.1;True;['CVE-2019-10901'];https://www.prio-n.com/kb/vulnerability/CVE-2019-10901;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the LDSS dissector could crash. This was addressed in epan/dissectors/packet-ldss.c by handling file digests properly.
Wireshark;2.6.1;True;['CVE-2019-10903'];https://www.prio-n.com/kb/vulnerability/CVE-2019-10903;In Wireshark 2.4.0 to 2.4.13, 2.6.0 to 2.6.7, and 3.0.0, the DCERPC SPOOLSS dissector could crash. This was addressed in epan/dissectors/packet-dcerpc-spoolss.c by adding a boundary check.
Wireshark;2.6.1;True;['CVE-2019-12295'];https://www.prio-n.com/kb/vulnerability/CVE-2019-12295;In Wireshark 3.0.0 to 3.0.1, 2.6.0 to 2.6.8, and 2.4.0 to 2.4.14, the dissection engine could crash. This was addressed in epan/packet.c by restricting the number of layers and consequently limiting recursion.
Wireshark;2.6.1;True;['CVE-2019-13619'];https://www.prio-n.com/kb/vulnerability/CVE-2019-13619;In Wireshark 3.0.0 to 3.0.2, 2.6.0 to 2.6.9, and 2.4.0 to 2.4.15, the ASN.1 BER dissector and related dissectors could crash. This was addressed in epan/asn1.c by properly restricting buffer increments.
Wireshark;2.6.1;True;['CVE-2019-16319'];https://www.prio-n.com/kb/vulnerability/CVE-2019-16319;In Wireshark 3.0.0 to 3.0.3 and 2.6.0 to 2.6.10, the Gryphon dissector could go into an infinite loop. This was addressed in plugins/epan/gryphon/packet-gryphon.c by checking for a message length of zero.
Wireshark;2.6.1;True;['CVE-2019-19553'];https://www.prio-n.com/kb/vulnerability/CVE-2019-19553;In Wireshark 3.0.0 to 3.0.6 and 2.6.0 to 2.6.12, the CMS dissector could crash. This was addressed in epan/dissectors/asn1/cms/packet-cms-template.c by ensuring that an object identifier is set to NULL after a ContentInfo dissection.
Wireshark;2.6.1;True;['CVE-2019-5716'];https://www.prio-n.com/kb/vulnerability/CVE-2019-5716;In Wireshark 2.6.0 to 2.6.5, the 6LoWPAN dissector could crash. This was addressed in epan/dissectors/packet-6lowpan.c by avoiding use of a TVB before its creation.
Wireshark;2.6.1;True;['CVE-2019-5717'];https://www.prio-n.com/kb/vulnerability/CVE-2019-5717;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the P_MUL dissector could crash. This was addressed in epan/dissectors/packet-p_mul.c by rejecting the invalid sequence number of zero.
Wireshark;2.6.1;True;['CVE-2019-5718'];https://www.prio-n.com/kb/vulnerability/CVE-2019-5718;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the RTSE dissector and other ASN.1 dissectors could crash. This was addressed in epan/charsets.c by adding a get_t61_string length check.
Wireshark;2.6.1;True;['CVE-2019-5719'];https://www.prio-n.com/kb/vulnerability/CVE-2019-5719;In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the ISAKMP dissector could crash. This was addressed in epan/dissectors/packet-isakmp.c by properly handling the case of a missing decryption data block.
Wireshark;2.6.1;True;['CVE-2019-9208'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9208;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the TCAP dissector could crash. This was addressed in epan/dissectors/asn1/tcap/tcap.cnf by avoiding NULL pointer dereferences.
Wireshark;2.6.1;True;['CVE-2019-9209'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9209;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the ASN.1 BER and related dissectors could crash. This was addressed in epan/dissectors/packet-ber.c by preventing a buffer overflow associated with excessive digits in time values.
Wireshark;2.6.1;True;['CVE-2019-9214'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9214;In Wireshark 2.4.0 to 2.4.12 and 2.6.0 to 2.6.6, the RPCAP dissector could crash. This was addressed in epan/dissectors/packet-rpcap.c by avoiding an attempted dereference of a NULL conversation.
Wireshark;2.6.1;True;['CVE-2020-11647'];https://www.prio-n.com/kb/vulnerability/CVE-2020-11647;In Wireshark 3.2.0 to 3.2.2, 3.0.0 to 3.0.9, and 2.6.0 to 2.6.15, the BACapp dissector could crash. This was addressed in epan/dissectors/packet-bacapp.c by limiting the amount of recursion.
Wireshark;2.6.1;True;['CVE-2020-13164'];https://www.prio-n.com/kb/vulnerability/CVE-2020-13164;In Wireshark 3.2.0 to 3.2.3, 3.0.0 to 3.0.10, and 2.6.0 to 2.6.16, the NFS dissector could crash. This was addressed in epan/dissectors/packet-nfs.c by preventing excessive recursion, such as for a cycle in the directory graph on a filesystem.
Wireshark;2.6.1;True;['CVE-2020-25862'];https://www.prio-n.com/kb/vulnerability/CVE-2020-25862;In Wireshark 3.2.0 to 3.2.6, 3.0.0 to 3.0.13, and 2.6.0 to 2.6.20, the TCP dissector could crash. This was addressed in epan/dissectors/packet-tcp.c by changing the handling of the invalid 0xFFFF checksum.
Wireshark;2.6.1;True;['CVE-2020-25863'];https://www.prio-n.com/kb/vulnerability/CVE-2020-25863;In Wireshark 3.2.0 to 3.2.6, 3.0.0 to 3.0.13, and 2.6.0 to 2.6.20, the MIME Multipart dissector could crash. This was addressed in epan/dissectors/packet-multipart.c by correcting the deallocation of invalid MIME parts.
Wireshark;2.6.1;True;['CVE-2020-9428'];https://www.prio-n.com/kb/vulnerability/CVE-2020-9428;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the EAP dissector could crash. This was addressed in epan/dissectors/packet-eap.c by using more careful sscanf parsing.
Wireshark;2.6.1;True;['CVE-2020-9430'];https://www.prio-n.com/kb/vulnerability/CVE-2020-9430;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the WiMax DLMAP dissector could crash. This was addressed in plugins/epan/wimax/msg_dlmap.c by validating a length field.
Wireshark;2.6.1;True;['CVE-2020-9431'];https://www.prio-n.com/kb/vulnerability/CVE-2020-9431;In Wireshark 3.2.0 to 3.2.1, 3.0.0 to 3.0.8, and 2.6.0 to 2.6.14, the LTE RRC dissector could leak memory. This was addressed in epan/dissectors/packet-lte-rrc.c by adjusting certain append operations.
Notepad++;7.5.6;False;;;
Google Chrome;68.0.3440.106;True;['CVE-2023-3079'];;"Exploit for CVE-2023-3079
=====================
- Shoutout to ..."
Google Chrome;68.0.3440.106;True;['CVE-2019-5789'];https://0day.today/exploit/description/32384;
Google Chrome;68.0.3440.106;True;['CVE-2019-5788'];https://0day.today/exploit/description/32385;
Google Chrome;68.0.3440.106;True;['CVE-2020-6404'];https://0day.today/exploit/description/34124;
Google Chrome;68.0.3440.106;True;['CVE-2023-4352'];https://0day.today/exploit/description/39068;
Google Chrome;68.0.3440.106;True;['CVE-2023-4357'];;"# CVE-2023-4357-APT-Style-exploitation
..."
Google Chrome;68.0.3440.106;True;['CVE-2023-5217'];;"README - 23 March 2015

Welcome to the WebM VP8/VP9 Codec SDK!

..."
Google Chrome;68.0.3440.106;True;['CVE-2023-4357'];;"## Â∑•ÂÖ∑ÁÆÄ‰ªã

- ÂÖ®ÁêÉÈ¶ñÊ¨æÂçïÊñá‰ª∂Âà©Áî® CVE-2023-4357 Chrome XXE ÊºèÊ¥û EXPÔºåÂÆûÁé∞ÂØπËÆøÂÆ¢ËÄÖÊú¨Âú∞Êñá‰ª∂Á™É..."
Google Chrome;68.0.3440.106;True;['CVE-2023-4863'];;"[‰∏≠Êñá](README_ZH.md) | EN

# CVE-2023-4863 libwebp dependency chec..."
Google Chrome;68.0.3440.106;True;['CVE-2023-5217'];;"# CVE-2023-5217: libvpx VP8 Encoding Heap Overflow PoC

CVE-2023..."
Google Chrome;68.0.3440.106;True;['CVE-2023-2033'];;"# CVE-2023-2033-Analysis

The full bug report has been published..."
Google Chrome;68.0.3440.106;True;['CVE-2019-13764'];;"# CVE-2019-13764

## A full exploit written by Haboob Research T..."
Google Chrome;68.0.3440.106;True;['CVE-2023-5217'];;"README - 31 January 2019

Welcome to the WebM VP8/VP9 Codec SDK!..."
Google Chrome;68.0.3440.106;True;['CVE-2023-4357'];;[„ÄêCVE-2023-4357„ÄëChrome-XXE ‰ªªÊÑèÊñá‰ª∂ËØªÂèñÊºèÊ¥ûÂ§çÁé∞...
Google Chrome;68.0.3440.106;True;['CVE-2023-4350'];;# cve-2023-435...
Google Chrome;68.0.3440.106;True;['CVE-2019-13705'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13705;Insufficient policy enforcement in extensions in Google Chrome prior to 78.0.3904.70 allowed an attacker who convinced a user to install a malicious extension to leak cross-origin data via a crafted Chrome Extension.
Google Chrome;68.0.3440.106;True;['CVE-2019-13707'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13707;Insufficient validation of untrusted input in intents in Google Chrome on Android prior to 78.0.3904.70 allowed a local attacker to leak files via a crafted application.
Google Chrome;68.0.3440.106;True;['CVE-2019-13711'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13711;Insufficient policy enforcement in JavaScript in Google Chrome prior to 78.0.3904.70 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-13713'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13713;Insufficient policy enforcement in JavaScript in Google Chrome prior to 78.0.3904.70 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-13723'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13723;Use after free in WebBluetooth in Google Chrome prior to 78.0.3904.108 allowed a remote attacker who had compromised the renderer process to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-13730'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13730;Type confusion in JavaScript in Google Chrome prior to 79.0.3945.79 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-13734'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13734;Out of bounds write in SQLite in Google Chrome prior to 79.0.3945.79 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-13745'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13745;Insufficient policy enforcement in audio in Google Chrome prior to 79.0.3945.79 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-13764'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-13764;Type confusion in JavaScript in Google Chrome prior to 79.0.3945.79 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5787'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5787;Use-after-garbage-collection in Blink in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5788'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5788;An integer overflow that leads to a use-after-free in Blink Storage in Google Chrome on Linux prior to 73.0.3683.75 allowed a remote attacker who had compromised the renderer process to execute arbitrary code via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5789'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5789;An integer overflow that leads to a use-after-free in WebMIDI in Google Chrome on Windows prior to 73.0.3683.75 allowed a remote attacker who had compromised the renderer process to execute arbitrary code via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5790'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5790;An integer overflow leading to an incorrect capacity of a buffer in JavaScript in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5791'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5791;Inappropriate optimization in V8 in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5792'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5792;Integer overflow in PDFium in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to potentially perform out of bounds memory access via a crafted PDF file.
Google Chrome;68.0.3440.106;True;['CVE-2019-5793'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5793;Insufficient policy enforcement in extensions in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to initiate the extensions installation user interface via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5795'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5795;Integer overflow in PDFium in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to potentially perform out of bounds memory access via a crafted PDF file.
Google Chrome;68.0.3440.106;True;['CVE-2019-5798'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5798;Lack of correct bounds checking in Skia in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5799'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5799;Incorrect inheritance of a new document's policy in Content Security Policy in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to bypass content security policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5800'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5800;Insufficient policy enforcement in Blink in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to bypass content security policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5803'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5803;Insufficient policy enforcement in Content Security Policy in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to bypass content security policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5805'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5805;Use-after-free in PDFium in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.
Google Chrome;68.0.3440.106;True;['CVE-2019-5807'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5807;Object lifetime issue in V8 in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5808'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5808;Use after free in Blink in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5809'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5809;Use after free in file chooser in Google Chrome prior to 74.0.3729.108 allowed a remote attacker who had compromised the renderer process to perform privilege escalation via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5810'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5810;Information leak in autofill in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5811'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5811;Incorrect handling of CORS in ServiceWorker in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to bypass same origin policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5813'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5813;Use after free in V8 in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5814'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5814;Insufficient policy enforcement in Blink in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5818'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5818;Uninitialized data in media in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted video file.
Google Chrome;68.0.3440.106;True;['CVE-2019-5820'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5820;Integer overflow in PDFium in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.
Google Chrome;68.0.3440.106;True;['CVE-2019-5821'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5821;Integer overflow in PDFium in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.
Google Chrome;68.0.3440.106;True;['CVE-2019-5822'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5822;Inappropriate implementation in Blink in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to bypass same origin policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5823'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5823;Insufficient policy enforcement in service workers in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5824'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5824;Parameter passing error in media in Google Chrome prior to 74.0.3729.131 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5827'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5827;Integer overflow in SQLite via WebSQL in Google Chrome prior to 74.0.3729.131 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5828'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5828;Object lifecycle issue in ServiceWorker in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5829'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5829;Integer overflow in download manager in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5830'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5830;Insufficient policy enforcement in CORS in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5831'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5831;Object lifecycle issue in V8 in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5832'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5832;Insufficient policy enforcement in XMLHttpRequest in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5834'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5834;Insufficient data validation in Blink in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to perform domain spoofing via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5835'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5835;Object lifecycle issue in SwiftShader in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5836'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5836;Heap buffer overflow in ANGLE in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5837'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5837;Resource size information leakage in Blink in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2019-5838'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5838;Insufficient policy enforcement in extensions API in Google Chrome prior to 75.0.3770.80 allowed an attacker who convinced a user to install a malicious extension to bypass restrictions on file URIs via a crafted Chrome Extension.
Google Chrome;68.0.3440.106;True;['CVE-2019-5839'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-5839;Excessive data validation in URL parser in Google Chrome prior to 75.0.3770.80 allowed a remote attacker who convinced a user to input a URL to bypass website URL validation via a crafted URL.
Google Chrome;68.0.3440.106;True;['CVE-2020-6382'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6382;Type confusion in JavaScript in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6385'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6385;Insufficient policy enforcement in storage in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to bypass site isolation via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6390'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6390;Out of bounds memory access in streams in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6391'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6391;Insufficient validation of untrusted input in Blink in Google Chrome prior to 80.0.3987.87 allowed a local attacker to bypass content security policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6392'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6392;Insufficient policy enforcement in extensions in Google Chrome prior to 80.0.3987.87 allowed an attacker who convinced a user to install a malicious extension to bypass navigation restrictions via a crafted Chrome Extension.
Google Chrome;68.0.3440.106;True;['CVE-2020-6393'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6393;Insufficient policy enforcement in Blink in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6394'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6394;Insufficient policy enforcement in Blink in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to bypass content security policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6396'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6396;Inappropriate implementation in Skia in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6397'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6397;Inappropriate implementation in sharing in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to spoof security UI via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6398'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6398;Use of uninitialized data in PDFium in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.
Google Chrome;68.0.3440.106;True;['CVE-2020-6400'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6400;Inappropriate implementation in CORS in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6404'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6404;Inappropriate implementation in Blink in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6406'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6406;Use after free in audio in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6408'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6408;Insufficient policy enforcement in CORS in Google Chrome prior to 80.0.3987.87 allowed a local attacker to obtain potentially sensitive information via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6415'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6415;Inappropriate implementation in JavaScript in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6416'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6416;Insufficient data validation in streams in Google Chrome prior to 80.0.3987.87 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6425'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6425;Insufficient policy enforcement in extensions in Google Chrome prior to 80.0.3987.149 allowed an attacker who convinced a user to install a malicious extension to bypass site isolation via a crafted Chrome Extension.
Google Chrome;68.0.3440.106;True;['CVE-2020-6431'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6431;Insufficient policy enforcement in full screen in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to spoof security UI via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6432'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6432;Insufficient policy enforcement in navigations in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6433'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6433;Insufficient policy enforcement in extensions in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6435'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6435;Insufficient policy enforcement in extensions in Google Chrome prior to 81.0.4044.92 allowed a remote attacker who had compromised the renderer process to bypass navigation restrictions via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6437'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6437;Inappropriate implementation in WebView in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to spoof security UI via a crafted application.
Google Chrome;68.0.3440.106;True;['CVE-2020-6439'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6439;Insufficient policy enforcement in navigations in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to bypass security UI via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6440'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6440;Inappropriate implementation in extensions in Google Chrome prior to 81.0.4044.92 allowed an attacker who convinced a user to install a malicious extension to obtain potentially sensitive information via a crafted Chrome Extension.
Google Chrome;68.0.3440.106;True;['CVE-2020-6441'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6441;Insufficient policy enforcement in omnibox in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to bypass security UI via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6442'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6442;Inappropriate implementation in cache in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6443'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6443;Insufficient data validation in developer tools in Google Chrome prior to 81.0.4044.92 allowed a remote attacker who had convinced the user to use devtools to execute arbitrary code via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6445'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6445;Insufficient policy enforcement in trusted types in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to bypass content security policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6446'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6446;Insufficient policy enforcement in trusted types in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to bypass content security policy via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6452'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6452;Heap buffer overflow in media in Google Chrome prior to 80.0.3987.162 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6455'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6455;Out of bounds read in WebSQL in Google Chrome prior to 81.0.4044.92 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6456'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6456;Insufficient validation of untrusted input in clipboard in Google Chrome prior to 81.0.4044.92 allowed a local attacker to bypass site isolation via crafted clipboard contents.
Google Chrome;68.0.3440.106;True;['CVE-2020-6493'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6493;Use after free in WebAuthentication in Google Chrome prior to 83.0.4103.97 allowed a remote attacker who had compromised the renderer process to potentially perform a sandbox escape via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2020-6495'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-6495;Insufficient policy enforcement in developer tools in Google Chrome prior to 83.0.4103.97 allowed an attacker who convinced a user to install a malicious extension to potentially perform a sandbox escape via a crafted Chrome Extension.
Google Chrome;68.0.3440.106;True;['CVE-2022-2294'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-2294;Heap buffer overflow in WebRTC in Google Chrome prior to 103.0.5060.114 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.
Google Chrome;68.0.3440.106;True;['CVE-2022-2743'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2022-2743;Integer overflow in Window Manager in Google Chrome on Chrome OS and Lacros prior to 104.0.5112.79 allowed a remote attacker who convinced a user to engage in specific UI interactions to perform an out of bounds memory write via crafted UI interactions. (Chrome security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0222'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0222;Use after free in ANGLE in Google Chrome prior to 120.0.6099.199 allowed a remote attacker who had compromised the renderer process to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0223'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0223;Heap buffer overflow in ANGLE in Google Chrome prior to 120.0.6099.199 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0224'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0224;Use after free in WebAudio in Google Chrome prior to 120.0.6099.199 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0225'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0225;Use after free in WebGPU in Google Chrome prior to 120.0.6099.199 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0333'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0333;Insufficient data validation in Extensions in Google Chrome prior to 120.0.6099.216 allowed an attacker in a privileged network position to install a malicious extension via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0517'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0517;Out of bounds write in V8 in Google Chrome prior to 120.0.6099.224 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0518'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0518;Type confusion in V8 in Google Chrome prior to 120.0.6099.224 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0519'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0519;Out of bounds memory access in V8 in Google Chrome prior to 120.0.6099.224 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0804'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0804;Insufficient policy enforcement in iOS Security UI in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to leak cross-origin data via a crafted HTML page. (Chromium security severity: Medium)
Google Chrome;68.0.3440.106;True;['CVE-2024-0805'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0805;Inappropriate implementation in Downloads in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to perform domain spoofing via a crafted domain name. (Chromium security severity: Medium)
Google Chrome;68.0.3440.106;True;['CVE-2024-0806'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0806;Use after free in Passwords in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to potentially exploit heap corruption via specific UI interaction. (Chromium security severity: Medium)
Google Chrome;68.0.3440.106;True;['CVE-2024-0807'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0807;Use after free in Web Audio in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0808'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0808;Integer underflow in WebUI in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to potentially exploit heap corruption via a malicious file. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0809'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0809;Inappropriate implementation in Autofill in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to bypass Autofill restrictions via a crafted HTML page. (Chromium security severity: Low)
Google Chrome;68.0.3440.106;True;['CVE-2024-0810'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0810;Insufficient policy enforcement in DevTools in Google Chrome prior to 121.0.6167.85 allowed an attacker who convinced a user to install a malicious extension to leak cross-origin data via a crafted Chrome Extension. (Chromium security severity: Medium)
Google Chrome;68.0.3440.106;True;['CVE-2024-0811'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0811;Inappropriate implementation in Extensions API in Google Chrome prior to 121.0.6167.85 allowed an attacker who convinced a user to install a malicious extension to leak cross-origin data via a crafted Chrome Extension. (Chromium security severity: Low)
Google Chrome;68.0.3440.106;True;['CVE-2024-0812'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0812;Inappropriate implementation in Accessibility in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to potentially exploit object corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-0813'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0813;Use after free in Reading Mode in Google Chrome prior to 121.0.6167.85 allowed an attacker who convinced a user to install a malicious extension to potentially exploit heap corruption via specific UI interaction. (Chromium security severity: Medium)
Google Chrome;68.0.3440.106;True;['CVE-2024-0814'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0814;Incorrect security UI in Payments in Google Chrome prior to 121.0.6167.85 allowed a remote attacker to potentially spoof security UI via a crafted HTML page. (Chromium security severity: Medium)
Google Chrome;68.0.3440.106;True;['CVE-2024-1059'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-1059;Use after free in Peer Connection in Google Chrome prior to 121.0.6167.139 allowed a remote attacker to potentially exploit stack corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-1060'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-1060;Use after free in Canvas in Google Chrome prior to 121.0.6167.139 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-1077'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-1077;Use after free in Network in Google Chrome prior to 121.0.6167.139 allowed a remote attacker to potentially exploit heap corruption via a malicious file. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-1283'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-1283;Heap buffer overflow in Skia in Google Chrome prior to 121.0.6167.160 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2024-1284'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-1284;Use after free in Mojo in Google Chrome prior to 121.0.6167.160 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Google Chrome;68.0.3440.106;True;['CVE-2023-4863'];;"# CVE-2023-4863
```bash
  # checkout webp
git clone https://chro..."
Google Chrome;68.0.3440.106;True;['CVE-2024-0519'];;"# CVE-2024-0519-Chrome-exploit
Execute arbitrary code on the vic..."
Google Chrome;68.0.3440.106;True;['CVE-2023-4357'];;"# CVE-2023-4357-APT-Style-exploitation
..."
Google Chrome;68.0.3440.106;True;['CVE-2020-6404'];https://www.exploit-db.com/exploits/48237;
Google Chrome;68.0.3440.106;True;['CVE-2020-6404'];;"
Google Chrome 80.0.3987.87 - Heap-Corruption Remote Denial of Service (PoC)"
Google Chrome;68.0.3440.106;True;['CVE-2023-4863'];;"# CVE-2023-4863
Triggerin..."
Google Chrome;68.0.3440.106;True;['CVE-2023-4863'];;"# libwebp CVE-2023-4863

- [A Vulnerability to..."
Google Chrome;68.0.3440.106;True;['CVE-2023-4357'];;"## Â∑•ÂÖ∑ÁÆÄ‰ªã

- ÂÖ®ÁêÉÈ¶ñÊ¨æÂçïÊñá‰ª∂Âà©Áî® CVE-2023-4357 Chrome XXE ÊºèÊ¥û EXPÔºåÂÆûÁé∞ÂØπËÆøÂÆ¢ËÄÖÊú¨Âú∞Êñá‰ª∂Á™É..."
Google Chrome;68.0.3440.106;True;['CVE-2023-3727', 'CVE-2023-3728', 'CVE-2023-3730', 'CVE-2023-3732', 'CVE-2023-3733', 'CVE-2023-3734', 'CVE-2023-3735', 'CVE-2023-3736', 'CVE-2023-3737', 'CVE-2023-3738', 'CVE-2023-3740'];https://chromereleases.googleblog.com/2023/07/stable-channel-update-for-desktop.html;"The Chrome team is delighted to announce the promotion of Chrome 115 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.


Chrome 115.0.5790.98 (Linux and Mac), 115.0.5790.98/99( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/114.0.5735.199..115.0.5790.99?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 115.




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [20](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M115>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$7000][[1454086](<https://crbug.com/1454086>)] High CVE-2023-3727: Use after free in WebRTC. Reported by Cassidy Kim(@cassidy6564) on 2023-06-12

[$7000][[1457421](<https://crbug.com/1457421>)] High CVE-2023-3728: Use after free in WebRTC. Reported by Zhenghang Xiao (@Kipreyyy) on 2023-06-23

[$2000][[1453465](<https://crbug.com/1453465>)] High CVE-2023-3730: Use after free in Tab Groups. Reported by @ginggilBesel on 2023-06-09

[$NA][[1450899](<https://crbug.com/1450899>)] High CVE-2023-3732: Out of bounds memory access in Mojo. Reported by Mark Brand of Google Project Zero on 2023-06-02

[$5000][[1450203](<https://crbug.com/1450203>)] Medium CVE-2023-3733: Inappropriate implementation in WebApp Installs. Reported by Luan Herrera (@lbherrera_) on 2022-10-09

[$5000][[1450376](<https://crbug.com/1450376>)] Medium CVE-2023-3734: Inappropriate implementation in Picture In Picture. Reported by Thomas Orlita on 2023-06-01

[$2000][[1394410](<https://crbug.com/1394410>)] Medium CVE-2023-3735: Inappropriate implementation in Web API Permission Prompts. Reported by Ahmed ElMasry on 2022-11-29

[$2000][[1434438](<https://crbug.com/1434438>)] Medium CVE-2023-3736: Inappropriate implementation in Custom Tabs. Reported by Philipp Beer (TU Wien) on 2023-04-19

[$2000][[1446754](<https://crbug.com/1446754>)] Medium CVE-2023-3737: Inappropriate implementation in Notifications. Reported by Narendra Bhati of Suma Soft Pvt. Ltd. Pune (India)  on 2023-05-19

[$1000][[1434330](<https://crbug.com/1434330>)] Medium CVE-2023-3738: Inappropriate implementation in Autofill. Reported by Hafiizh on 2023-04-18

[$1000][[1405223](<https://crbug.com/1405223>)] Low CVE-2023-3740: Insufficient validation of untrusted input in Themes. Reported by Fardeen Siddiqui on 2023-01-06




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1465718](<https://crbug.com/1465718>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).








Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Prudhvikumar Bommana  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-1669', 'CVE-2024-1670', 'CVE-2024-1671', 'CVE-2024-1672', 'CVE-2024-1673', 'CVE-2024-1674', 'CVE-2024-1675', 'CVE-2024-1676'];https://chromereleases.googleblog.com/2024/02/stable-channel-update-for-desktop_20.html;"The Chrome team is delighted to announce the promotion of Chrome 122 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.


Chrome 122.0.6261.57 (Linux and Mac), 122.0.6261.57/.58( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/121.0.6167.185..122.0.6261.58?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 122.




The Extended Stable channel has been updated to 122.0.6261.57 for Windows and 122.0.6261.57 for Mac, which will roll out over the coming days/weeks.




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [12](<https://issues.chromium.org/issues?q=customfield1223088:0-M122>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$7000][[41495060](<https://issues.chromium.org/issues/41495060>)] High CVE-2024-1669: Out of bounds memory access in Blink. Reported by Anonymous on 2024-01-26

[$5000][[41481374](<https://issues.chromium.org/issues/41481374>)] High CVE-2024-1670: Use after free in Mojo. Reported by Cassidy Kim(@cassidy6564) on 2023-12-06

[$8000][[41487933](<https://issues.chromium.org/issues/41487933>)] Medium CVE-2024-1671: Inappropriate implementation in Site Isolation. Reported by Harry Chen on 2024-01-03

[$3000][[41485789](<https://issues.chromium.org/issues/41485789>)] Medium CVE-2024-1672: Inappropriate implementation in Content Security Policy. Reported by Georg Felber (TU Wien) &amp; Marco Squarcina (TU Wien) on 2023-12-19

[$2000][[41490491](<https://issues.chromium.org/issues/41490491>)] Medium CVE-2024-1673: Use after free in Accessibility. Reported by Weipeng Jiang (@Krace) of VRI on 2024-01-11

[$1000][[40095183](<https://issues.chromium.org/issues/40095183>)] Medium CVE-2024-1674: Inappropriate implementation in Navigation. Reported by David Erceg on 2019-05-27

[$1000][[41486208](<https://issues.chromium.org/issues/41486208>)] Medium CVE-2024-1675: Insufficient policy enforcement in Download. Reported by Bart≈Çomiej Wacko on 2023-12-21

[$1000][[40944847](<https://issues.chromium.org/issues/40944847>)] Low CVE-2024-1676: Inappropriate implementation in Navigation. Reported by Khalil Zhani on 2023-11-21




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[326063910](<https://issues.chromium.org/issues/326063910>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).













Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Prudhvikumar Bommana  

Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-0222', 'CVE-2024-0223', 'CVE-2024-0224', 'CVE-2024-0225'];https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop.html;"The Stable channel has been updated to 120.0.6099.199 for Mac,Linux and 120.0.6099.199/200 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [Log](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.130..120.0.6099.200?pretty=fuller&n=10000>).



The Extended Stable channel has been updated to 120.0.6099.199 for Mac and 120.0.6099.200 for Windows which will roll out over the coming days/weeks.  





Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  




This update includes [6](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-3-M120>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[$15000][[1501798](<https://crbug.com/1501798>)] High CVE-2024-0222: Use after free in ANGLE. Reported by Toan (suto) Pham of Qrious Secure on 2023-11-13  

[$15000][[1505009](<https://crbug.com/1505009>)] High CVE-2024-0223: Heap buffer overflow in ANGLE. Reported by Toan (suto) Pham and Tri Dang of Qrious Secure on 2023-11-24  

[$10000][[1505086](<https://crbug.com/1505086>)] High CVE-2024-0224: Use after free in WebAudio. Reported by Huang Xilin of Ant Group Light-Year Security Lab on 2023-11-25  

[$TBD][[1506923](<https://crbug.com/1506923>)] High CVE-2024-0225: Use after free in WebGPU. Reported by Anonymous on 2023-12-01  




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[1515353](<https://crbug.com/1515353>)] Various fixes from internal audits, fuzzing and other initiatives  

Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [Memor](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>)[ySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).






Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  




Srinivas Sista




Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-1213', 'CVE-2023-1214', 'CVE-2023-1215', 'CVE-2023-1216', 'CVE-2023-1217', 'CVE-2023-1218', 'CVE-2023-1219', 'CVE-2023-1220', 'CVE-2023-1221', 'CVE-2023-1222', 'CVE-2023-1223', 'CVE-2023-1224', 'CVE-2023-1225', 'CVE-2023-1226', 'CVE-2023-1227', 'CVE-2023-1228', 'CVE-2023-1229', 'CVE-2023-1230', 'CVE-2023-1231', 'CVE-2023-1232', 'CVE-2023-1233', 'CVE-2023-1234', 'CVE-2023-1235', 'CVE-2023-1236', 'CVE-2023-2314'];https://chromereleases.googleblog.com/2023/03/stable-channel-update-for-desktop.html;"The Chrome team is delighted to announce the promotion of Chrome 111 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.



Chrome 111.0.5563.64 (Linux and Mac), 111.0.5563.64/.65( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/110.0.5481.178..111.0.5563.65?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 111.




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [41](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M111>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$15000][[1411210](<https://crbug.com/1411210>)] High CVE-2023-1213: Use after free in Swiftshader. Reported by Jaehun Jeong(@n3sk) of Theori on 2023-01-30

[$10000][[1412487](<https://crbug.com/1412487>)] High CVE-2023-1214: Type Confusion in V8. Reported by Man Yue Mo of GitHub Security Lab on 2023-02-03

[$7000][[1417176](<https://crbug.com/1417176>)] High CVE-2023-1215: Type Confusion in CSS. Reported by Anonymous on 2023-02-17

[$4000][[1417649](<https://crbug.com/1417649>)] High CVE-2023-1216: Use after free in DevTools. Reported by Ganjiang Zhou(@refrain_areu) of ChaMd5-H1 team on 2023-02-21

[$3000][[1412658](<https://crbug.com/1412658>)] High CVE-2023-1217: Stack buffer overflow in Crash reporting. Reported by sunburst of Ant Group Tianqiong Security Lab on 2023-02-03

[$3000][[1413628](<https://crbug.com/1413628>)] High CVE-2023-1218: Use after free in WebRTC. Reported by Anonymous on 2023-02-07

[$TBD][[1415328](<https://crbug.com/1415328>)] High CVE-2023-1219: Heap buffer overflow in Metrics. Reported by Sergei Glazunov of Google Project Zero on 2023-02-13

[$TBD][[1417185](<https://crbug.com/1417185>)] High CVE-2023-1220: Heap buffer overflow in UMA. Reported by Sergei Glazunov of Google Project Zero on 2023-02-17

[$10000][[1385343](<https://crbug.com/1385343>)] Medium CVE-2023-1221: Insufficient policy enforcement in Extensions API. Reported by Ahmed ElMasry on 2022-11-16

[$7000][[1403515](<https://crbug.com/1403515>)] Medium CVE-2023-1222: Heap buffer overflow in Web Audio API. Reported by Cassidy Kim(@cassidy6564) on 2022-12-24

[$5000][[1398579](<https://crbug.com/1398579>)] Medium CVE-2023-1223: Insufficient policy enforcement in Autofill. Reported by Ahmed ElMasry on 2022-12-07

[$5000][[1403539](<https://crbug.com/1403539>)] Medium CVE-2023-1224: Insufficient policy enforcement in Web Payments API. Reported by Thomas Orlita on 2022-12-25

[$5000][[1408799](<https://crbug.com/1408799>)] Medium CVE-2023-1225: Insufficient policy enforcement in Navigation. Reported by Roberto Ffrench-Davis @Lihaft on 2023-01-20

[$3000][[1013080](<https://crbug.com/1013080>)] Medium CVE-2023-1226: Insufficient policy enforcement in Web Payments API. Reported by Anonymous on 2019-10-10

[$3000][[1348791](<https://crbug.com/1348791>)] Medium CVE-2023-1227: Use after free in Core. Reported by @ginggilBesel on 2022-07-31

[$3000][[1365100](<https://crbug.com/1365100>)] Medium CVE-2023-1228: Insufficient policy enforcement in Intents. Reported by Axel Chong on 2022-09-18

[$2000][[1160485](<https://crbug.com/1160485>)] Medium CVE-2023-1229: Inappropriate implementation in Permission prompts. Reported by Thomas Orlita on 2020-12-20

[$2000][[1404230](<https://crbug.com/1404230>)] Medium CVE-2023-1230: Inappropriate implementation in WebApp Installs. Reported by Axel Chong on 2022-12-30

[$NA][[1274887](<https://crbug.com/1274887>)] Medium CVE-2023-1231: Inappropriate implementation in Autofill. Reported by Kirtikumar Anandrao Ramchandani via Yan Zhu of Brave on 2021-11-30

[$3000][[813542](<https://crbug.com/813542>)] Low CVE-2023-2314: Insufficient data validation in DevTools. _Reported by Rob Wu on 2018-02-19_

[$2000][[1346924](<https://crbug.com/1346924>)] Low CVE-2023-1232: Insufficient policy enforcement in Resource Timing. Reported by Sohom Datta on 2022-07-24

[$1000][[1045681](<https://crbug.com/1045681>)] Low CVE-2023-1233: Insufficient policy enforcement in Resource Timing. Reported by Soroush Karami on 2020-01-25

[$1000][[1404621](<https://crbug.com/1404621>)] Low CVE-2023-1234: Inappropriate implementation in Intents. Reported by Axel Chong on 2023-01-03

[$1000][[1404704](<https://crbug.com/1404704>)] Low CVE-2023-1235: Type Confusion in DevTools. Reported by raven at KunLun lab on 2023-01-03

[$TBD][[1374518](<https://crbug.com/1374518>)] Low CVE-2023-1236: Inappropriate implementation in Internals. Reported by Alesandro Ortiz on 2022-10-14




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1422099](<https://crbug.com/1422099>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.








Prudhvikumar Bommana

Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-5480', 'CVE-2023-5482', 'CVE-2023-5849', 'CVE-2023-5850', 'CVE-2023-5851', 'CVE-2023-5852', 'CVE-2023-5853', 'CVE-2023-5854', 'CVE-2023-5855', 'CVE-2023-5856', 'CVE-2023-5857', 'CVE-2023-5858', 'CVE-2023-5859'];https://chromereleases.googleblog.com/2023/10/stable-channel-update-for-desktop_31.html;"The Chrome team is delighted to announce the promotion of Chrome 119 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.


Chrome 119.0.6045.105 (Linux and Mac), 119.0.6045.105/.106( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/118.0.5993.116..119.0.6045.105?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 119.




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [15](<https://bugs.chromium.org/p/chromium/issues/list?q=type%3Abug-security%20os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%20label%3ARelease-0-M119&can=1>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$16000][[1492698](<https://crbug.com/1492698>)] High CVE-2023-5480: Inappropriate implementation in Payments. Reported by Vsevolod Kokorin (Slonser) of Solidlab on 2023-10-14

[$11000][[1492381](<https://crbug.com/1492381>)] High CVE-2023-5482: Insufficient data validation in USB. Reported by DarkNavy on 2023-10-13

[$TBD][[1492384](<https://crbug.com/1492384>)] High CVE-2023-5849: Integer overflow in USB. Reported by DarkNavy on 2023-10-13

[$3000][[1281972](<https://crbug.com/1281972>)] Medium CVE-2023-5850: Incorrect security UI in Downloads. Reported by Mohit Raj (shadow2639)  on 2021-12-22

[$3000][[1473957](<https://crbug.com/1473957>)] Medium CVE-2023-5851: Inappropriate implementation in Downloads. Reported by Shaheen Fazim on 2023-08-18

[$2000][[1480852](<https://crbug.com/1480852>)] Medium CVE-2023-5852: Use after free in Printing. Reported by [pwn2car] on 2023-09-10

[$1000][[1456876](<https://crbug.com/1456876>)] Medium CVE-2023-5853: Incorrect security UI in Downloads. Reported by Hafiizh on 2023-06-22

[$1000][[1488267](<https://crbug.com/1488267>)] Medium CVE-2023-5854: Use after free in Profiles. Reported by Minchin Park of SSD-Disclosure Labs on 2023-10-01

[$TBD][[1492396](<https://crbug.com/1492396>)] Medium CVE-2023-5855: Use after free in Reading Mode. Reported by ChaobinZhang on 2023-10-13

[$TBD][[1493380](<https://crbug.com/1493380>)] Medium CVE-2023-5856: Use after free in Side Panel. Reported by Weipeng Jiang (@Krace) of VRI on 2023-10-17

[N/A][[1493435](<https://crbug.com/1493435>)] Medium CVE-2023-5857: Inappropriate implementation in Downloads. Reported by Will Dormann on 2023-10-18

[$3000][[1457704](<https://crbug.com/1457704>)] Low CVE-2023-5858: Inappropriate implementation in WebApp Provider. Reported by Axel Chong on 2023-06-24

[$500][[1482045](<https://crbug.com/1482045>)] Low CVE-2023-5859: Incorrect security UI in Picture In Picture. Reported by Junsung Lee on 2023-09-13




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1497743](<http://crbug/1497743>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).







Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Prudhvikumar Bommana  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-1938', 'CVE-2024-1939'];https://chromereleases.googleblog.com/2024/02/stable-channel-update-for-desktop_27.html;"The Stable channel has been updated to 122.0.6261.94 for Mac,Linux and 122.0.6261.94/.95 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [Log](<https://chromium.googlesource.com/chromium/src/+log/122.0.6261.70..122.0.6261.94?pretty=fuller&n=10000>).



The Extended Stable channel has been updated to 122.0.6261.94 for Mac and 122.0.6261.95 for Windows which will roll out over the coming days/weeks.




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [4](<https://issues.chromium.org/issues?q=customfield1223088:1-M122>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$7000][[324596281](<https://issues.chromium.org/issues/324596281>)] High CVE-2024-1938: Type Confusion in V8. Reported by 5f46f4ee2e17957ba7b39897fb376be8 on 2024-02-11

[$7000][[323694592](<https://issues.chromium.org/issues/323694592>)] High CVE-2024-1939: Type Confusion in V8. Reported by Bohan Liu (@P4nda20371774) of Tencent Security Xuanwu Lab on 2024-02-05




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[326980493](<https://issues.chromium.org/issues/326980493>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Prudhvikumar Bommana  

Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-3079'];https://chromereleases.googleblog.com/2023/06/stable-channel-update-for-desktop.html;"The Stable and extended stable channels has been updated to 114.0.5735.106 for Mac and Linux and 114.0.5735.110 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/114.0.5735.90..114.0.5735.110?pretty=fuller&n=10000>).



Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  




This update includes [2](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M114>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[$NA][[1450481](<https://crbug.com/1450481>)] High CVE-2023-3079: Type Confusion in V8. Reported by Cl√©ment Lecigne of Google's Threat Analysis Group on 2023-06-01  




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  




Google is aware that an exploit for CVE-2023-3079 exists in the wild.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[1451018](<https://crbug.com/1451018>)] Various fixes from internal audits, fuzzing and other initiatives  




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  



Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.







Srinivas Sista  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-4863'];https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_11.html;"The Stable and Extended stable channels has been updated to 116.0.5845.187 for Mac and Linux and 116.0.5845.187/.188 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/116.0.5845.179..116.0.5845.188?pretty=fuller&n=10000>).

The Extended Stable channel has been updated to 116.0.5845.188 for Windows and 116.0.5845.187 for Mac, which will roll out over the coming days/weeks. 




Security Fixes and Rewards




Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [1](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-4-M116>) security fix. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$NA][[1479274](<https://crbug.com/1479274>)] Critical CVE-2023-4863: Heap buffer overflow in WebP. Reported by Apple Security Engineering and Architecture (SEAR) and The Citizen Lab at The University of Toronto ºs Munk School on 2023-09-06




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

Google is aware that an exploit for CVE-2023-4863 exists in the wild.




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>)







Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.




Srinivas Sista  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-1283', 'CVE-2024-1284'];https://chromereleases.googleblog.com/2024/02/stable-channel-update-for-desktop.html;"The Stable channel has been updated to 121.0.6167.160 for Mac and Linux and 121.0.6167.160/161 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [l](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.225..121.0.6167.86?pretty=fuller&n=10000>)[og](<https://chromium.googlesource.com/chromium/src/+log/121.0.6167.139..121.0.6167.161?pretty=fuller&n=10000>).

Security Fixes and Rewards





_Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed_  


This update includes [3](<https://issues.chromium.org/issues?q=customfield1223088:2-M121>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  


[$5000][[41494539](<https://issues.chromium.org/issues/41494539>)] High CVE-2024-1284: Use after free in Mojo. Reported by Anonymous on 2024-01-25  

[$TBD][[41494860](<https://issues.chromium.org/issues/41494860>)] High CVE-2024-1283: Heap buffer overflow in Skia. Reported by Jorge Buzeti (@r3tr074) on 2024-01-25  


We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[324073667](<https://issues.chromium.org/issues/324073667>)] Various fixes from internal audits, fuzzing and other initiatives  


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  

Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.





Srinivas Sista  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-2312', 'CVE-2023-4349', 'CVE-2023-4350', 'CVE-2023-4351', 'CVE-2023-4352', 'CVE-2023-4353', 'CVE-2023-4354', 'CVE-2023-4355', 'CVE-2023-4356', 'CVE-2023-4357', 'CVE-2023-4358', 'CVE-2023-4359', 'CVE-2023-4360', 'CVE-2023-4361', 'CVE-2023-4362', 'CVE-2023-4363', 'CVE-2023-4364', 'CVE-2023-4365', 'CVE-2023-4366', 'CVE-2023-4367', 'CVE-2023-4368'];https://chromereleases.googleblog.com/2023/08/stable-channel-update-for-desktop_15.html;"The Stable and Extended stable channels has been updated to 116.0.5845.96 for Mac and Linux and 116.0.5845.96/.97 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/115.0.5790.170..116.0.5845.97?pretty=fuller&n=10000>).




**Security Fixes and Rewards**

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [26](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M116>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$30000][[1448548](<https://crbug.com/1448548>)] High CVE-2023-2312: Use after free in Offline. Reported by avaue at S.S.L. on 2023-05-24

[$5000][[1458303](<https://crbug.com/1458303>)] High CVE-2023-4349: Use after free in Device Trust Connectors. Reported by Weipeng Jiang (@Krace) of VRI on 2023-06-27

[$3000][[1454817](<https://crbug.com/1454817>)] High CVE-2023-4350: Inappropriate implementation in Fullscreen. Reported by Khiem Tran (@duckhiem) on 2023-06-14

[$2000][[1465833](<https://crbug.com/1465833>)] High CVE-2023-4351: Use after free in Network. Reported by Guang and Weipeng Jiang of VRI on 2023-07-18

[$NA][[1452076](<https://crbug.com/1452076>)] High CVE-2023-4352: Type Confusion in V8. Reported by Sergei Glazunov of Google Project Zero on 2023-06-07

[$NA][[1458046](<https://crbug.com/1458046>)] High CVE-2023-4353: Heap buffer overflow in ANGLE. Reported by Christoph Diehl / Microsoft Vulnerability Research on 2023-06-27

[$NA][[1464215](<https://crbug.com/1464215>)] High CVE-2023-4354: Heap buffer overflow in Skia. Reported by Mark Brand of Google Project Zero on 2023-07-12

[$NA][[1468943](<https://crbug.com/1468943>)] High CVE-2023-4355: Out of bounds memory access in V8. Reported by Sergei Glazunov of Google Project Zero on 2023-07-31

[$5000][[1449929](<https://crbug.com/1449929>)] Medium CVE-2023-4356: Use after free in Audio. Reported by Zhenghang Xiao (@Kipreyyy) on 2023-05-30

[$3000][[1458911](<https://crbug.com/1458911>)] Medium CVE-2023-4357: Insufficient validation of untrusted input in XML. Reported by Igor Sak-Sakovskii on 2023-06-28

[$3000][[1466415](<https://crbug.com/1466415>)] Medium CVE-2023-4358: Use after free in DNS. Reported by Weipeng Jiang (@Krace) of VRI on 2023-07-20

[$2000][[1443722](<https://crbug.com/1443722>)] Medium CVE-2023-4359: Inappropriate implementation in App Launcher. Reported by @retsew0x01 on 2023-05-09

[$2000][[1462723](<https://crbug.com/1462723>)] Medium CVE-2023-4360: Inappropriate implementation in Color. Reported by Axel Chong on 2023-07-07

[$2000][[1465230](<https://crbug.com/1465230>)] Medium CVE-2023-4361: Inappropriate implementation in Autofill. Reported by Thomas Orlita on 2023-07-17

[$1000][[1316379](<https://crbug.com/1316379>)] Medium CVE-2023-4362: Heap buffer overflow in Mojom IDL. Reported by Zhao Hai of NanJing Cyberpeace TianYu Lab on 2022-04-14

[$1000][[1367085](<https://crbug.com/1367085>)] Medium CVE-2023-4363: Inappropriate implementation in WebShare. Reported by Alesandro Ortiz on 2022-09-23

[$1000][[1406922](<https://crbug.com/1406922>)] Medium CVE-2023-4364: Inappropriate implementation in Permission Prompts. Reported by Jasper Rebane on 2023-01-13

[$1000][[1431043](<https://crbug.com/1431043>)] Medium CVE-2023-4365: Inappropriate implementation in Fullscreen. Reported by Hafiizh on 2023-04-06

[$1000][[1450784](<https://crbug.com/1450784>)] Medium CVE-2023-4366: Use after free in Extensions. Reported by asnine on 2023-06-02

[$500][[1467743](<https://crbug.com/1467743>)] Medium CVE-2023-4367: Insufficient policy enforcement in Extensions API. Reported by Axel Chong on 2023-07-26

[$500][[1467751](<https://crbug.com/1467751>)] Medium CVE-2023-4368: Insufficient policy enforcement in Extensions API. Reported by Axel Chong on 2023-07-26




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  





As usual, our ongoing internal security work was responsible for a wide range of fixes:  


  * [[1472910](<https://crbug.com/1472910>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).


Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  





Daniel Yip  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-7024'];https://chromereleases.googleblog.com/2023/12/stable-channel-update-for-desktop_20.html;"The Stable channel has been updated to 120.0.6099.129 for Mac,Linux and 120.0.6099.129/130 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [null](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.110..120.0.6099.130?pretty=fuller&n=10000>)[log](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.71..120.0.6099.109?pretty=fuller&n=10000>).   

The Extended Stable channel has been updated to 120.0.6099.129 for Mac and 120.0.6099.130 for Windows which will roll out over the coming days/weeks.  

Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  



This update includes [1](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-2-M120>) security fix. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[$NA][[1513170](<https://crbug.com/1513170>)] High CVE-2023-7024: Heap buffer overflow in WebRTC. Reported by Cl√©ment Lecigne and Vlad Stolyarov of Google's Threat Analysis Group on 2023-12-19  




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

Google is aware that an exploit for CVE-2023-7024 exists in the wild.   




Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  




Srinivas Sista




Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-0804', 'CVE-2024-0805', 'CVE-2024-0806', 'CVE-2024-0807', 'CVE-2024-0808', 'CVE-2024-0809', 'CVE-2024-0810', 'CVE-2024-0811', 'CVE-2024-0812', 'CVE-2024-0813', 'CVE-2024-0814'];https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_23.html;"The Stable channel has been updated to 121.0.6167.85 for Mac and Linux and 121.0.6167.85/.86 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [l](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.225..121.0.6167.86?pretty=fuller&n=10000>)[og](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.225..121.0.6167.86?pretty=fuller&n=10000>).




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [17](<https://bugs.chromium.org/p/chromium/issues/list?q=type%3Abug-security%20os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%20label%3ARelease-0-M121&can=1>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$11000][[1505080](<https://crbug.com/1505080>)] High CVE-2024-0807: Use after free in WebAudio. Reported by Huang Xilin of Ant Group Light-Year Security Lab on 2023-11-25

[$9000][[1484394](<https://crbug.com/1484394>)] High CVE-2024-0812: Inappropriate implementation in Accessibility. Reported by Anonymous on 2023-09-19

[$6000][[1504936](<https://crbug.com/1504936>)] High CVE-2024-0808: Integer underflow in WebUI. Reported by Lyra Rebane (rebane2001) on 2023-11-24

[$2000][[1496250](<https://crbug.com/1496250>)] Medium CVE-2024-0810: Insufficient policy enforcement in DevTools. Reported by Shaheen Fazim on 2023-10-26

[$1000][[1463935](<https://crbug.com/1463935>)] Medium CVE-2024-0814: Incorrect security UI in Payments. Reported by Muneaki Nishimura (nishimunea) on 2023-07-11

[$1000][[1477151](<https://crbug.com/1477151>)] Medium CVE-2024-0813: Use after free in Reading Mode. Reported by @retsew0x01 on 2023-08-30

[$1000][[1505176](<https://crbug.com/1505176>)] Medium CVE-2024-0806: Use after free in Passwords. Reported by 18Ê•ºÊ¢¶ÊÉ≥ÊîπÈÄ†ÂÆ∂ on 2023-11-25

[TBD][[1514925](<https://crbug.com/1514925>)] Medium CVE-2024-0805: Inappropriate implementation in Downloads. Reported by Om Apip on 2024-01-01

[TBD][[1515137](<https://crbug.com/1515137>)] Medium CVE-2024-0804: Insufficient policy enforcement in iOS Security UI. Reported by Narendra Bhati of Suma Soft Pvt. Ltd. Pune (India)  on 2024-01-03

[N/A][[1494490](<https://crbug.com/1494490>)] Low CVE-2024-0811: Inappropriate implementation in Extensions API. Reported by Jann Horn of Google Project Zero on 2023-10-21

[TBD][[1497985](<https://crbug.com/1497985>)] Low CVE-2024-0809: Inappropriate implementation in Autofill. Reported by Ahmed ElMasry on 2023-10-31




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1520680](<https://crbug.com/1520680>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).










Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Daniel Yip  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-0333'];https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_9.html;"The Stable channel has been updated to 120.0.6099.216 for Mac,Linux and 120.0.6099.216/217 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [Log](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.200..120.0.6099.217?pretty=fuller&n=10000>).



The Extended Stable channel has been updated to 120.0.6099.216 for Mac and 120.0.6099.217 for Windows which will roll out over the coming days/weeks.



Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  




This update includes [1](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-4-M120>) security fix. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[$TBD][[1513379](<https://crbug.com/1513379>)] High CVE-2024-0333: Insufficient data validation in Extensions. Reported by Malcolm Stagg (@malcolmst) of SODIUM-24, LLC on 2023-12-20  




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.

**  
**

Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).










Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  




Srinivas Sista




Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-3420', 'CVE-2023-3421', 'CVE-2023-3422'];https://chromereleases.googleblog.com/2023/06/stable-channel-update-for-desktop_26.html;"The Stable and extended stable channels has been updated to 114.0.5735.198 for Mac and Linux and 114.0.5735.198/199 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/114.0.5735.133..114.0.5735.199?pretty=fuller&n=10000>).




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [4](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-3-M114>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$20000][[1452137](<https://crbug.com/1452137>)] High CVE-2023-3420: Type Confusion in V8. Reported by Man Yue Mo of GitHub Security Lab on 2023-06-07

[$10000][[1447568](<https://crbug.com/1447568>)] High CVE-2023-3421: Use after free in Media. Reported by Piotr Bania of Cisco Talos on 2023-05-22

[$5000][[1450397](<https://crbug.com/1450397>)] High CVE-2023-3422: Use after free in Guest View. Reported by asnine on 2023-06-01




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1458017](<https://crbug.com/1458017>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>)



Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.

Prudhvikumar Bommana




Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-2133', 'CVE-2023-2134', 'CVE-2023-2135', 'CVE-2023-2136', 'CVE-2023-2137'];https://chromereleases.googleblog.com/2023/04/stable-channel-update-for-desktop_18.html;"The Stable and extended stable channel has been updated to 112.0.5615.137/138 for Windows and 112.0.5615.137 for Mac and 112.0.5615.165 for Linux which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/112.0.5615.121..112.0.5615.138?pretty=fuller&n=10000>)



Stable Channel Update for Desktop - 112.0.5615.137   

Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  




This update includes [8](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-2-M112>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[$8000][[1429197](<https://crbug.com/1429197>)] High CVE-2023-2133: Out of bounds memory access in Service Worker API. Reported by Rong Jian of VRI on 2023-03-30  

[$8000][[1429201](<https://crbug.com/1429201>)] High CVE-2023-2134: Out of bounds memory access in Service Worker API. Reported by Rong Jian of VRI on 2023-03-30  

[$3000][[1424337](<https://crbug.com/1424337>)] High CVE-2023-2135: Use after free in DevTools. Reported by Cassidy Kim(@cassidy6564) on 2023-03-14  

[$NA][[1432603](<https://crbug.com/1432603>)] High CVE-2023-2136: Integer overflow in Skia. Reported by Cl√©ment Lecigne of Google's Threat Analysis Group on 2023-04-12  

[$1000][[1430644](<https://crbug.com/1430644>)] Medium CVE-2023-2137: Heap buffer overflow in sqlite. Reported by Nan Wang(@eternalsakura13) and Guang Gong of 360 Vulnerability Research Institute on 2023-04-05  




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  




Google is aware that an exploit for CVE-2023-2136 exists in the wild.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[1434139](<https://crbug.com/1434139>)] Various fixes from internal audits, fuzzing and other initiatives  




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.

Srinivas Sista  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-6702', 'CVE-2023-6703', 'CVE-2023-6704', 'CVE-2023-6705', 'CVE-2023-6706', 'CVE-2023-6707'];https://chromereleases.googleblog.com/2023/12/stable-channel-update-for-desktop_12.html;"The Stable channel has been updated to 120.0.6099.109 for Mac,Linux and 120.0.6099.109/110 to Windows  which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.71..120.0.6099.109?pretty=fuller&n=10000>). 

The Extended Stable channel has been updated to 120.0.6099.109 for Mac and 120.0.6099.110 for Windows which will roll out over the coming days/weeks.

Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.

**  
**

This update includes [9](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M120>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.

**  
**

[$16000][[1501326](<https://crbug.com/1501326>)] High CVE-2023-6702: Type Confusion in V8. Reported by Zhiyi Zhang and Zhunki from Codesafe Team of Legendsec at Qi'anxin Group on 2023-11-10

[$7000][[1502102](<https://crbug.com/1502102>)] High CVE-2023-6703: Use after free in Blink. Reported by Cassidy Kim(@cassidy6564) on 2023-11-14

[$7000][[1504792](<https://crbug.com/1504792>)] High CVE-2023-6704: Use after free in libavif. Reported by Fudan University on 2023-11-23

[$7000][[1505708](<https://crbug.com/1505708>)] High CVE-2023-6705: Use after free in WebRTC. Reported by Cassidy Kim(@cassidy6564) on 2023-11-28

[$6000][[1500921](<https://crbug.com/1500921>)] High CVE-2023-6706: Use after free in FedCM. Reported by anonymous on 2023-11-09

[$7000][[1504036](<https://crbug.com/1504036>)] Medium CVE-2023-6707: Use after free in CSS. Reported by @ginggilBesel on 2023-11-21

**  
**

We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1510677](<https://crbug.com/1510677>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Srinivas Sista  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-1528', 'CVE-2023-1529', 'CVE-2023-1530', 'CVE-2023-1531', 'CVE-2023-1532', 'CVE-2023-1533', 'CVE-2023-1534'];https://chromereleases.googleblog.com/2023/03/stable-channel-update-for-desktop_21.html;"The Stable channel has been updated to 111.0.5563.110 for Mac and Linux and 111.0.5563.110/.111 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/111.0.5563.64..111.0.5563.111?pretty=fuller&n=10000>).

Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [8](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M111>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$10000][[1421773](<https://crbug.com/1421773>)] High CVE-2023-1528: Use after free in Passwords. Reported by Wan Choi of Seoul National University on 2023-03-07

[$8000][[1419718](<https://crbug.com/1419718>)] High CVE-2023-1529: Out of bounds memory access in WebHID. Reported by anonymous on 2023-02-27

[$7000][[1419831](<https://crbug.com/1419831>)] High CVE-2023-1530: Use after free in PDF. Reported by The UK's National Cyber Security Centre (NCSC) on 2023-02-27

[$TBD][[1415330](<https://crbug.com/1415330>)] High CVE-2023-1531: Use after free in ANGLE. Reported by Piotr Bania of Cisco Talos on 2023-02-13

[$NA][[1421268](<https://crbug.com/1421268>)] High CVE-2023-1532: Out of bounds read in GPU Video. Reported by Mark Brand of Google Project Zero on 2023-03-03

[$TBD][[1422183](<https://crbug.com/1422183>)] High CVE-2023-1533: Use after free in WebProtect. Reported by Weipeng Jiang (@Krace) of VRI on 2023-03-07

[$NA][[1422594](<https://crbug.com/1422594>)] High CVE-2023-1534: Out of bounds read in ANGLE. Reported by Jann Horn and Mark Brand of Google Project Zero on 2023-03-08




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1426294](<https://crbug.com/1426294>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).

Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.







Prudhvikumar Bommana  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-1059', 'CVE-2024-1060', 'CVE-2024-1077'];https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_30.html;"The Stable channel has been updated to 121.0.6167.139 for Mac and Linux and 121.0.6167.139/140 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [l](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.225..121.0.6167.86?pretty=fuller&n=10000>)[og](<https://chromium.googlesource.com/chromium/src/+log/121.0.6167.86..121.0.6167.140?pretty=fuller&n=10000>).




Security Fixes and Rewards



_Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  

_  
This update includes [4](<https://bugs.chromium.org/p/chromium/issues/list?q=type%3Abug-security%20os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%20label%3ARelease-1-M121&can=1>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[$5000][[1511567](<https://crbug.com/1511567>)] High CVE-2024-1060: Use after free in Canvas. Reported by Anonymous on 2023-12-14  

[$3000][[1514777](<https://crbug.com/1514777>)] High CVE-2024-1059: Use after free in WebRTC. Reported by Cassidy Kim(@cassidy6564) on 2023-12-29  

[N/A][[1511085](<https://crbug.com/1511085>)] High CVE-2024-1077: Use after free in Network. Reported by Microsoft Security Research Center on 2023-12-13  




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[1523290](<https://crbug.com/1523290>)] Various fixes from internal audits, fuzzing and other initiatives

**  
**

Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).







Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Srinivas Sista  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-2459', 'CVE-2023-2460', 'CVE-2023-2461', 'CVE-2023-2462', 'CVE-2023-2463', 'CVE-2023-2464', 'CVE-2023-2465', 'CVE-2023-2466', 'CVE-2023-2467', 'CVE-2023-2468'];https://chromereleases.googleblog.com/2023/05/stable-channel-update-for-desktop.html;"The Chrome team is delighted to announce the promotion of Chrome 113 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.

Chrome 113.0.5672.63 (Linux and Mac), 113.0.5672.63/.64( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/112.0.5615.137..113.0.5672.63?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 113.




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [15](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M113>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$7500][[1423304](<https://crbug.com/1423304>)] Medium CVE-2023-2459: Inappropriate implementation in Prompts. Reported by Rong Jian of VRI on 2023-03-10

[$5000][[1419732](<https://crbug.com/1419732>)] Medium CVE-2023-2460: Insufficient validation of untrusted input in Extensions. Reported by Martin Bajanik, Fingerprint[.]com on 2023-02-27

[$4000][[1350561](<https://crbug.com/1350561>)] Medium CVE-2023-2461: Use after free in OS Inputs. Reported by @ginggilBesel on 2022-08-06

[$3000][[1375133](<https://crbug.com/1375133>)] Medium CVE-2023-2462: Inappropriate implementation in Prompts. Reported by Alesandro Ortiz on 2022-10-17

[$2000][[1406120](<https://crbug.com/1406120>)] Medium CVE-2023-2463: Inappropriate implementation in Full Screen Mode. Reported by Irvan Kurniawan (sourc7) on 2023-01-10

[$2000][[1418549](<https://crbug.com/1418549>)] Medium CVE-2023-2464: Inappropriate implementation in PictureInPicture. Reported by Thomas Orlita on 2023-02-23

[$1000][[1399862](<https://crbug.com/1399862>)] Medium CVE-2023-2465: Inappropriate implementation in CORS. Reported by @kunte_ctf on 2022-12-10

[$3000][[1385714](<https://crbug.com/1385714>)] Low CVE-2023-2466: Inappropriate implementation in Prompts. Reported by Jasper Rebane (popstonia) on 2022-11-17

[$2000][[1413586](<https://crbug.com/1413586>)] Low CVE-2023-2467: Inappropriate implementation in Prompts. Reported by Thomas Orlita on 2023-02-07

[$1000][[1416380](<https://crbug.com/1416380>)] Low CVE-2023-2468: Inappropriate implementation in PictureInPicture. Reported by Alesandro Ortiz on 2023-02-15




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1441714](<https://crbug.com/1441714>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).










Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  

Prudhvikumar Bommana  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-4068', 'CVE-2023-4069', 'CVE-2023-4070', 'CVE-2023-4071', 'CVE-2023-4072', 'CVE-2023-4073', 'CVE-2023-4074', 'CVE-2023-4075', 'CVE-2023-4076', 'CVE-2023-4077', 'CVE-2023-4078'];https://chromereleases.googleblog.com/2023/08/stable-channel-update-for-desktop.html;"The Stable channel has been updated to 115.0.5790.170 for Mac and Linux and 115.0.5790.170/.171 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/115.0.5790.110..115.0.5790.170?pretty=fuller&n=10000>).




## **Security Fixes and Rewards**

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [17](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M115>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$23000][[1466183](<https://crbug.com/1466183>)] High CVE-2023-4068: Type Confusion in V8. Reported by Jerry on 2023-07-20

[$21000][[1465326](<https://crbug.com/1465326>)] High CVE-2023-4069: Type Confusion in V8. Reported by Man Yue Mo of GitHub Security Lab on 2023-07-17

[$20000][[1462951](<https://crbug.com/1462951>)] High CVE-2023-4070: Type Confusion in V8. Reported by Jerry on 2023-07-07

[$17000][[1458819](<https://crbug.com/1458819>)] High CVE-2023-4071: Heap buffer overflow in Visuals. Reported by Guang and Weipeng Jiang of VRI on 2023-06-28

[$15000][[1464038](<https://crbug.com/1464038>)] High CVE-2023-4072: Out of bounds read and write in WebGL. Reported by Apple Security Engineering and Architecture (SEAR) on 2023-07-12

[$10000][[1456243](<https://crbug.com/1456243>)] High CVE-2023-4073: Out of bounds memory access in ANGLE. Reported by Jaehun Jeong(@n3sk) of Theori on 2023-06-20

[$8000][[1464113](<https://crbug.com/1464113>)] High CVE-2023-4074: Use after free in Blink Task Scheduling. Reported by Anonymous on 2023-07-12

[$5000][[1457757](<https://crbug.com/1457757>)] High CVE-2023-4075: Use after free in Cast. Reported by Cassidy Kim(@cassidy6564) on 2023-06-25

[$NA][[1459124](<https://crbug.com/1459124>)] High CVE-2023-4076: Use after free in WebRTC. Reported by Natalie Silvanovich of Google Project Zero on 2023-06-29

[$3000][[1451146](<https://crbug.com/1451146>)] Medium CVE-2023-4077: Insufficient data validation in Extensions. Reported by Derin Eryilmaz on 2023-06-04

[$1000][[1461895](<https://crbug.com/1461895>)] Medium CVE-2023-4078: Inappropriate implementation in Extensions. Reported by Derin Eryilmaz on 2023-07-04




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1469476](<https://crbug.com/1469476>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).







Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.







Prudhvikumar Bommana  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-3214', 'CVE-2023-3215', 'CVE-2023-3216', 'CVE-2023-3217'];https://chromereleases.googleblog.com/2023/06/stable-channel-update-for-desktop_13.html;"The Stable and extended stable channels has been updated to 114.0.5735.133 for Mac and Linux and 114.0.5735.133/134 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/114.0.5735.110..114.0.5735.134?pretty=fuller&n=10000>).



Security Fixes and Rewards  



Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [5](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-2-M114>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$TBD][[1450568](<https://crbug.com/1450568>)] Critical CVE-2023-3214: Use after free in Autofill payments. Reported by Rong Jian of VRI on 2023-06-01

[$3000][[1446274](<https://crbug.com/1446274>)] High CVE-2023-3215: Use after free in WebRTC. Reported by asnine on 2023-05-17

[$TBD][[1450114](<https://crbug.com/1450114>)] High CVE-2023-3216: Type Confusion in V8. Reported by 5n1p3r0010 on 2023-05-31

[$NA][[1450601](<https://crbug.com/1450601>)] High CVE-2023-3217: Use after free in WebXR. Reported by Sergei Glazunov of Google Project Zero on 2023-06-01




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1454307](<https://crbug.com/1454307>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).





Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.







Srinivas Sista  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-4427', 'CVE-2023-4428', 'CVE-2023-4429', 'CVE-2023-4430', 'CVE-2023-4431'];https://chromereleases.googleblog.com/2023/08/chrome-desktop-stable-update.html;"The Stable and Extended stable channels has been updated to 116.0.5845.110 for Mac and Linux and 116.0.5845.110/.111 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/116.0.5845.96..116.0.5845.110?pretty=fuller&n=10000>).




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [5](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M116>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$10000][[1469542](<https://crbug.com/1469542>)] High CVE-2023-4430: Use after free in Vulkan. Reported by Cassidy Kim(@cassidy6564) on 2023-08-02

[$3000][[1469754](<https://crbug.com/1469754>)] High CVE-2023-4429: Use after free in Loader. Reported by Anonymous on 2023-08-03

[$2000][[1470477](<https://crbug.com/1470477>)] High CVE-2023-4428: Out of bounds memory access in CSS. Reported by Francisco Alonso (@revskills) on 2023-08-06

[$NA][[1470668](<https://crbug.com/1470668>)] High CVE-2023-4427: Out of bounds memory access in V8. Reported by Sergei Glazunov of Google Project Zero on 2023-08-07

[$NA][[1469348](<https://crbug.com/1469348>)] Medium CVE-2023-4431: Out of bounds memory access in Fonts. Reported by Microsoft Security Researcher on 2023-08-01




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).

Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.







Daniel Yip  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-5997', 'CVE-2023-6112'];https://chromereleases.googleblog.com/2023/11/stable-channel-update-for-desktop_14.html;"The Stable channel has been updated to 119.0.6045.159 for Mac and Linux and 119.0.6045.159/.160 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/119.0.6045.123..119.0.6045.159?pretty=fuller&n=10000>).




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [4](<https://bugs.chromium.org/p/chromium/issues/list?q=type%3Abug-security%20os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%20label%3ARelease-2-M119&can=1>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$10000][[1497997](<https://crbug.com/1497997>)] High CVE-2023-5997: Use after free in Garbage Collection. Reported by Anonymous on 2023-10-31

[N/A][[1499298](<https://crbug.com/1499298>)] High CVE-2023-6112: Use after free in Navigation. Reported by Sergei Glazunov of Google Project Zero on 2023-11-04




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1501958](<http://crbug/1501958>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).








Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Prudhvikumar Bommana  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-5346'];https://chromereleases.googleblog.com/2023/10/stable-channel-update-for-desktop.html;"The Stable channel has been updated to 117.0.5938.149 for Mac and Linux and 117.0.5938.149/.150 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/117.0.5938.132..117.0.5938.150?pretty=fuller&n=10000>).




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [1](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-2-M117>) security fix. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$8000][[1485829](<https://crbug.com/1485829>)] High CVE-2023-5346: Type Confusion in V8. Reported by Amit Kumar on 2023-09-22




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).


Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  





Prudhvikumar Bommana  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-5218', 'CVE-2023-5473', 'CVE-2023-5474', 'CVE-2023-5475', 'CVE-2023-5476', 'CVE-2023-5477', 'CVE-2023-5478', 'CVE-2023-5479', 'CVE-2023-5481', 'CVE-2023-5483', 'CVE-2023-5484', 'CVE-2023-5485', 'CVE-2023-5486', 'CVE-2023-5487'];https://chromereleases.googleblog.com/2023/10/stable-channel-update-for-desktop_10.html;"The Stable channel has been updated to 118.0.5993.70 for Mac and Linux and 118.0.5993.70/.71 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/117.0.5938.149..118.0.5993.71?pretty=fuller&n=10000>).

The Extended Stable channel has been updated to 118.0.5993.71 for Windows and 118.0.5993.70 for Mac, which will roll out over the coming days/weeks. 




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes _20_ security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[TBD][[1487110](<https://crbug.com/1487110>)] Critical CVE-2023-5218: Use after free in Site Isolation. Reported by @18Ê•ºÊ¢¶ÊÉ≥ÊîπÈÄ†ÂÆ∂ on 2023-09-27

[$5000][[1062251](<https://crbug.com/1062251>)] Medium CVE-2023-5487: Inappropriate implementation in Fullscreen. Reported by Anonymous on 2020-03-17

[$5000][[1414936](<https://crbug.com/1414936>)] Medium CVE-2023-5484: Inappropriate implementation in Navigation. Reported by Thomas Orlita on 2023-02-11

[$2000][[1476952](<https://crbug.com/1476952>)] Medium CVE-2023-5475: Inappropriate implementation in DevTools. Reported by Axel Chong on 2023-08-30

[$1000][[1425355](<https://crbug.com/1425355>)] Medium CVE-2023-5483: Inappropriate implementation in Intents. Reported by Axel Chong on 2023-03-17

[$1000][[1458934](<https://crbug.com/1458934>)] Medium CVE-2023-5481: Inappropriate implementation in Downloads. Reported by Om Apip on 2023-06-28

[$1000][[1474253](<https://crbug.com/1474253>)] Medium CVE-2023-5476: Use after free in Blink History. Reported by Yunqin Sun on 2023-08-20

[$1000][[1483194](<https://crbug.com/1483194>)] Medium CVE-2023-5474: Heap buffer overflow in PDF. Reported by [pwn2car] on 2023-09-15

[$500][[1471253](<https://crbug.com/1471253>)] Medium CVE-2023-5479: Inappropriate implementation in Extensions API. Reported by Axel Chong on 2023-08-09

[$6000][[1395164](<https://crbug.com/1395164>)] Low CVE-2023-5485: Inappropriate implementation in Autofill. Reported by Ahmed ElMasry on 2022-12-02

[$2000][[1472404](<https://crbug.com/1472404>)] Low CVE-2023-5478: Inappropriate implementation in Autofill. Reported by Shaheen Fazim on 2023-06-15

[$3000][[1472558](<https://crbug.com/1472558>)] Low CVE-2023-5477: Inappropriate implementation in Installer. Reported by Bahaa Naamneh of Crosspoint Labs on 2023-08-13

[$1000][[1357442](<https://crbug.com/1357442>)] Low CVE-2023-5486: Inappropriate implementation in Input. Reported by Hafiizh on 2022-08-29

[$1000][[1484000](<https://crbug.com/1484000>)] Low CVE-2023-5473: Use after free in Cast. Reported by DarkNavy on 2023-09-18




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1491268](<https://crbug.com/1491268>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).


Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  





Daniel Yip  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-2173', 'CVE-2024-2174', 'CVE-2024-2176'];https://chromereleases.googleblog.com/2024/03/stable-channel-update-for-desktop.html;"The Stable channel has been updated to 122.0.6261.111/.112 for Windows and Mac and 122.0.6261.111 to Linux which will roll out over the coming days/weeks. A full list of changes in this build is available in the [Log](<https://chromium.googlesource.com/chromium/src/+log/122.0.6261.94..122.0.6261.112?pretty=fuller&n=10000>).



The Extended Stable channel has been updated to 122.0.6261.112 for Windows and Mac which will roll out over the coming days/weeks.




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [3](<https://issues.chromium.org/issues?q=customfield1223088:2-M122>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$12000][[325893559](<https://issues.chromium.org/issues/325893559>)] High CVE-2024-2173: Out of bounds memory access in V8. Reported by 5fceb6172bbf7e2c5a948183b53565b9 on 2024-02-19

[$7000][[325866363](<https://issues.chromium.org/issues/325866363>)] High CVE-2024-2174: Inappropriate implementation in V8. Reported by 5f46f4ee2e17957ba7b39897fb376be8 on 2024-02-19

[$6000][[325936438](<https://issues.chromium.org/issues/325936438>)] High CVE-2024-2176: Use after free in FedCM. Reported by Anonymous on 2024-02-20




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).






Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Prudhvikumar Bommana  

Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-0517', 'CVE-2024-0518', 'CVE-2024-0519'];https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_16.html;"The Stable channel has been updated to 120.0.6099.234 for Mac and 120.0.6099.224 for Linux and 120.0.6099.224/225 to Windows which will roll out over the coming days/weeks. A full list of changes in this build is available in the [Log](<https://chromium.googlesource.com/chromium/src/+log/120.0.6099.216..120.0.6099.225?pretty=fuller&n=10000>).  


The Extended Stable channel has been updated to 120.0.6099.234 for Mac and 120.0.6099.225 for Windows which will roll out over the coming days/weeks.  


Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  


This update includes [4](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-5-M120>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  


[$16000][[1515930](<https://crbug.com/1515930>)] High CVE-2024-0517: Out of bounds write in V8. Reported by Toan (suto) Pham of Qrious Secure on 2024-01-06  

[$1000][[1507412](<https://crbug.com/1507412>)] High CVE-2024-0518: Type Confusion in V8. Reported by Ganjiang Zhou(@refrain_areu) of ChaMd5-H1 team on 2023-12-03  

[$TBD][[1517354](<https://crbug.com/1517354>)] High CVE-2024-0519: Out of bounds memory access in V8. Reported by Anonymous on 2024-01-11  


We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  


Google is aware of reports that an exploit for CVE-2024-0519 exists in the wild.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[1518006](<https://crbug.com/1518006>)] Various fixes from internal audits, fuzzing and other initiatives  


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  




Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  




Srinivas Sista  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-5472'];https://chromereleases.googleblog.com/2023/10/stable-channel-update-for-desktop_24.html;"The Stable channel has been updated to 118.0.5993.117 for Mac and Linux and 118.0.5993.117/.118 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/118.0.5993.88..118.0.5993.118?pretty=fuller&n=10000>).

The Extended Stable channel has been updated to 118.0.5993.117 for Mac and 118.0.5993.118 for Windows, which will roll out over the coming days/weeks. 




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [2](<https://bugs.chromium.org/p/chromium/issues/list?q=type%3Abug-security%20os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%20label%3ARelease-2-M118&can=1>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$3000][[1491296](<https://crbug.com/1491296>)] High CVE-2023-5472: Use after free in Profiles. Reported by @18Ê•ºÊ¢¶ÊÉ≥ÊîπÈÄ†ÂÆ∂ on 2023-10-10




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1495429](<http://crbug/1495429>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Daniel Yip  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-2033'];https://chromereleases.googleblog.com/2023/04/stable-channel-update-for-desktop_14.html;"The Stable and extended stable channel has been updated to 112.0.5615.121 for Windows Mac and Linux  which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/112.0.5615.86..112.0.5615.121?pretty=fuller&n=10000>).





M112 Stable Update for Desktop - v112.0.5615.121  

Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  


This update includes [2](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M112>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  


[$NA][[1432210](<https://crbug.com/1432210>)] High CVE-2023-2033: Type Confusion in V8. Reported by Cl√©ment Lecigne of Google's Threat Analysis Group on 2023-04-11  


We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  


Google is aware that an exploit for CVE-2023-2033 exists in the wild.   


As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[1433131](<https://crbug.com/1433131>)] Various fixes from internal audits, fuzzing and other initiatives  




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  









Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.

Srinivas Sista  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-1810', 'CVE-2023-1811', 'CVE-2023-1812', 'CVE-2023-1813', 'CVE-2023-1814', 'CVE-2023-1815', 'CVE-2023-1816', 'CVE-2023-1817', 'CVE-2023-1818', 'CVE-2023-1819', 'CVE-2023-1820', 'CVE-2023-1821', 'CVE-2023-1822', 'CVE-2023-1823', 'CVE-2023-2311', 'CVE-2023-2313'];https://chromereleases.googleblog.com/2023/04/stable-channel-update-for-desktop.html;"The Chrome team is delighted to announce the promotion of Chrome 112 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.  



Chrome 112.0.5615.49 (Linux and Mac), 112.0.5615.49/50( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/111.0.5563.148..112.0.5615.50?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 112.  

Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  




This update includes [18](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M112>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[$5000][[1414018](<https://crbug.com/1414018>)] High CVE-2023-1810: Heap buffer overflow in Visuals. Reported by Weipeng Jiang (@Krace) of VRI on 2023-02-08  

[$3000][[1420510](<https://crbug.com/1420510>)] High CVE-2023-1811: Use after free in Frames. Reported by Thomas Orlita on 2023-03-01




[$TBD][[1335974](<https://crbug.com/1335974>)] High CVE-2023-2313: Inappropriate implementation in Sandbox. Reported by Anonymous on 2022-06-14  

[$5000][[1418224](<https://crbug.com/1418224>)] Medium CVE-2023-1812: Out of bounds memory access in DOM Bindings. Reported by Shijiang Yu on 2023-02-22  

[$5000][[1423258](<https://crbug.com/1423258>)] Medium CVE-2023-1813: Inappropriate implementation in Extensions. Reported by Axel Chong on 2023-03-10  

[$3000][[1417325](<https://crbug.com/1417325>)] Medium CVE-2023-1814: Insufficient validation of untrusted input in Safe Browsing. Reported by Young Min Kim (@ylemkimon), CompSec Lab at Seoul National University on 2023-02-18  

[$2000][[1278708](<https://crbug.com/1278708>)] Medium CVE-2023-1815: Use after free in Networking APIs. Reported by DDV_UA on 2021-12-10  

[$1000][[1413919](<https://crbug.com/1413919>)] Medium CVE-2023-1816: Incorrect security UI in Picture In Picture. Reported by NDevTK on 2023-02-08  

[$1000][[1418061](<https://crbug.com/1418061>)] Medium CVE-2023-1817: Insufficient policy enforcement in Intents. Reported by Axel Chong on 2023-02-22




[$1000][[1354505](<https://crbug.com/1354505>)] Medium CVE-2023-2311: Insufficient policy enforcement in File System API. Reported by Axel Chong on 2022-08-19  

[$NA][[1223346](<https://crbug.com/1223346>)] Medium CVE-2023-1818: Use after free in Vulkan. Reported by Abdulrahman Alqabandi, Microsoft Browser Vulnerability Research, Eric Lawrence, Microsoft, Patrick Walker (@HomeSen), and Kirtikumar Anandrao Ramchandani on 2021-06-24  

[$NA][[1406588](<https://crbug.com/1406588>)] Medium CVE-2023-1819: Out of bounds read in Accessibility. Reported by Microsoft Edge Team on 2023-01-12  

[$TBD][[1408120](<https://crbug.com/1408120>)] Medium CVE-2023-1820: Heap buffer overflow in Browser History. Reported by raven at KunLun lab on 2023-01-17  

[$1000][[1413618](<https://crbug.com/1413618>)] Low CVE-2023-1821: Inappropriate implementation in WebShare. Reported by Axel Chong on 2023-02-07  

[$500][[1066555](<https://crbug.com/1066555>)] Low CVE-2023-1822: Incorrect security UI in Navigation. Reported by Í∞ïÏö∞ÏßÑ on 2020-04-01  

[$TBD][[1406900](<https://crbug.com/1406900>)] Low CVE-2023-1823: Inappropriate implementation in FedCM. Reported by Jasper Rebane (popstonia) on 2023-01-13  




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:  

[[1430254](<https://crbug.com/1430254>)] Various fixes from internal audits, fuzzing and other initiatives  




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  




Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Srinivas Sista  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-5186', 'CVE-2023-5187', 'CVE-2023-5217'];https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_27.html;"The Stable channel has been updated to 117.0.5938.132 for Windows, Mac and Linux, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/117.0.5938.92..117.0.5938.132?pretty=fuller&n=10000>).  


_  
Security Fixes and Rewards_  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  

This update includes [10](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M117>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  


[$NA][[1486441](<https://crbug.com/1486441>)] High CVE-2023-5217: Heap buffer overflow in vp8 encoding in libvpx. Reported by Cl√©ment Lecigne of Google's Threat Analysis Group on 2023-09-25  

[$TBD][[1478889](<https://crbug.com/1478889>)] High CVE-2023-5186: Use after free in Passwords. Reported by [pwn2car] on 2023-09-05  

[$2000][[1475798](<https://crbug.com/1475798>)] High CVE-2023-5187: Use after free in Extensions. Reported by Thomas Orlita on 2023-08-25  

We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  


Google is aware that an exploit for CVE-2023-5217 exists in the wild.  


As usual, our ongoing internal security work was responsible for a wide range of fixes:  
Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


[[1486724](<https://crbug.com/1486724>)] Various fixes from internal audits, fuzzing and other initiatives  

Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  


Srinivas Sista  

Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-4863', 'CVE-2023-4900', 'CVE-2023-4901', 'CVE-2023-4902', 'CVE-2023-4903', 'CVE-2023-4904', 'CVE-2023-4905', 'CVE-2023-4906', 'CVE-2023-4907', 'CVE-2023-4908', 'CVE-2023-4909'];https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_12.html;"The Chrome team is delighted to announce the promotion of Chrome 117 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.


Chrome 117.0.5938.62 (Linux and Mac), 117.0.5938.62/.63( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/116.0.5845.187..117.0.5938.63?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 117.




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [16](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M117>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$NA][[1479274](<https://crbug.com/1479274>)] Critical CVE-2023-4863: Heap buffer overflow in WebP. Reported by Apple Security Engineering and Architecture (SEAR) and The Citizen Lab at The University of Toronto ºs Munk School on 2023-09-06

[$3000][[1430867](<https://crbug.com/1430867>)] Medium CVE-2023-4900: Inappropriate implementation in Custom Tabs. Reported by Levit Nudi from Kenya on 2023-04-06

[$3000][[1459281](<https://crbug.com/1459281>)] Medium CVE-2023-4901: Inappropriate implementation in Prompts. Reported by Kang Ali on 2023-06-29

[$2000][[1454515](<https://crbug.com/1454515>)] Medium CVE-2023-4902: Inappropriate implementation in Input. Reported by Axel Chong on 2023-06-14

[$1000][[1446709](<https://crbug.com/1446709>)] Medium CVE-2023-4903: Inappropriate implementation in Custom Mobile Tabs. Reported by Ahmed ElMasry on 2023-05-18

[$1000][[1453501](<https://crbug.com/1453501>)] Medium CVE-2023-4904: Insufficient policy enforcement in Downloads. Reported by Tudor Enache @tudorhacks on 2023-06-09

[$500][[1441228](<https://crbug.com/1441228>)] Medium CVE-2023-4905: Inappropriate implementation in Prompts. Reported by Hafiizh on 2023-04-29

[$6000][[1449874](<https://crbug.com/1449874>)] Low CVE-2023-4906: Insufficient policy enforcement in Autofill. Reported by Ahmed ElMasry on 2023-05-30

[$2000][[1462104](<https://crbug.com/1462104>)] Low CVE-2023-4907: Inappropriate implementation in Intents. Reported by Mohit Raj (shadow2639)  on 2023-07-04

[$TBD][[1451543](<https://crbug.com/1451543>)] Low CVE-2023-4908: Inappropriate implementation in Picture in Picture. Reported by Axel Chong on 2023-06-06

[$TBD][[1463293](<https://crbug.com/1463293>)] Low CVE-2023-4909: Inappropriate implementation in Interstitials. Reported by Axel Chong on 2023-07-09




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.

Google is aware that an exploit for CVE-2023-4863 exists in the wild.


As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1481336](<https://crbug.com/1481336>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  








Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Prudhvikumar Bommana  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-4572'];https://chromereleases.googleblog.com/2023/08/stable-channel-update-for-desktop_29.html;"The Stable and Extended stable channels has been updated to 116.0.5845.140 for Mac and Linux and 116.0.5845.140/.141 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/116.0.5845.96..116.0.5845.141?pretty=fuller&n=10000>).




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.







This update includes [1](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-2-M116>) security fix. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.







[$TBD][[1472492](<https://crbug.com/1472492>)] High CVE-2023-4572: Use after free in MediaStream. Reported by fwnfwn(@_fwnfwn) on 2023-08-12







We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.





Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>). 







Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.







Daniel Yip  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-2929', 'CVE-2023-2930', 'CVE-2023-2931', 'CVE-2023-2932', 'CVE-2023-2933', 'CVE-2023-2934', 'CVE-2023-2935', 'CVE-2023-2936', 'CVE-2023-2937', 'CVE-2023-2938', 'CVE-2023-2939', 'CVE-2023-2940', 'CVE-2023-2941', 'CVE-2023-3598'];https://chromereleases.googleblog.com/2023/05/stable-channel-update-for-desktop_30.html;"The Chrome team is delighted to announce the promotion of Chrome 114 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.


Chrome 114.0.5735.90 (Linux and Mac), 114.0.5735.90/91( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/113.0.5672.127..114.0.5735.90?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 114.




Extended Stable channel has been updated to 114.0.5735.90 (Mac) and 114.0.5735.91 ( Windows. This will roll over over the coming days/weeks  











Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [23](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M114>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$15000][[1410191](<https://crbug.com/1410191>)] High CVE-2023-2929: Out of bounds write in Swiftshader. Reported by Jaehun Jeong(@n3sk) of Theori on 2023-01-25

[$10000][[1443401](<https://crbug.com/1443401>)] High CVE-2023-2930: Use after free in Extensions. Reported by asnine on 2023-05-08

[$10000][[1427865](<https://crbug.com/1427865>)] **High** CVE-2023-3598: Out of bounds read and write in ANGLE. _Discovered by a member of Apple Security Engineering and Architecture (SEAR) and reported by sisu from CTF team HXP on 2023-03-26_

[$9000][[1444238](<https://crbug.com/1444238>)] High CVE-2023-2931: Use after free in PDF. Reported by Huyna at Viettel Cyber Security on 2023-05-10

[$9000][[1444581](<https://crbug.com/1444581>)] High CVE-2023-2932: Use after free in PDF. Reported by Huyna at Viettel Cyber Security on 2023-05-11

[$9000][[1445426](<https://crbug.com/1445426>)] High CVE-2023-2933: Use after free in PDF. Reported by Quang Nguy·ªÖn (@quangnh89) of Viettel Cyber Security and Nguyen Phuong  on 2023-05-15

[$NA][[1429720](<https://crbug.com/1429720>)] High CVE-2023-2934: Out of bounds memory access in Mojo. Reported by Mark Brand of Google Project Zero on 2023-04-01

[$NA][[1440695](<https://crbug.com/1440695>)] High CVE-2023-2935: Type Confusion in V8. Reported by Sergei Glazunov of Google Project Zero on 2023-04-27

[$NA][[1443452](<https://crbug.com/1443452>)] High CVE-2023-2936: Type Confusion in V8. Reported by Sergei Glazunov of Google Project Zero on 2023-05-08

[$4000][[1413813](<https://crbug.com/1413813>)] Medium CVE-2023-2937: Inappropriate implementation in Picture In Picture. Reported by NDevTK on 2023-02-08

[$4000][[1416350](<https://crbug.com/1416350>)] Medium CVE-2023-2938: Inappropriate implementation in Picture In Picture. Reported by Alesandro Ortiz on 2023-02-15

[$3000][[1427431](<https://crbug.com/1427431>)] Medium CVE-2023-2939: Insufficient data validation in Installer. Reported by ycdxsb from VARAS@IIE on 2023-03-24

[$2000][[1426807](<https://crbug.com/1426807>)] Medium CVE-2023-2940: Inappropriate implementation in Downloads. Reported by Axel Chong on 2023-03-22

[$500][[1430269](<https://crbug.com/1430269>)] Low CVE-2023-2941: Inappropriate implementation in Extensions API. Reported by Jasper Rebane on 2023-04-04




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1449493](<https://crbug.com/1449493>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).













Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).  




Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Srinivas Sista  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-4761', 'CVE-2023-4762', 'CVE-2023-4763', 'CVE-2023-4764'];https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop.html;"The Stable and Extended stable channels has been updated to 116.0.5845.179 for Mac and Linux and 116.0.5845.179/.180 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/116.0.5845.140..116.0.5845.180?pretty=fuller&n=10000>).

The Extended Stable channel has been updated to 116.0.5845.180 for Windows and 116.0.5845.179 for Mac, which will roll out over the coming days/weeks. 




Security Fixes and Rewards







Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.







This update includes [4](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-3-M116>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.







[$TBD][[1476403](<https://crbug.com/1476403>)] High CVE-2023-4761: Out of bounds memory access in FedCM. Reported by DarkNavy on 2023-08-28

[$TBD][[1473247](<https://crbug.com/1473247>)] High CVE-2023-4762: Type Confusion in V8. Reported by anonymous on 2023-08-16

[$TBD][[1469928](<https://crbug.com/1469928>)] High CVE-2023-4763: Use after free in Networks. Reported by anonymous on 2023-08-03

[$TBD][[1447237](<https://crbug.com/1447237>)] High CVE-2023-4764: Incorrect security UI in BFCache. Reported by Irvan Kurniawan (sourc7) on 2023-05-20







We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  








Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.




Daniel Yip  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2024-2400'];https://chromereleases.googleblog.com/2024/03/stable-channel-update-for-desktop_12.html;"The Stable channel has been updated to 122.0.6261.128/.129 for Windows and Mac and 122.0.6261.128 to Linux which will roll out over the coming days/weeks. A full list of changes in this build is available in the [Log](<https://chromium.googlesource.com/chromium/src/+log/122.0.6261.112..122.0.6261.128?pretty=fuller&n=10000>).



The Extended Stable channel has been updated to 122.0.6261.129 for Windows and Mac which will roll out over the coming days/weeks.




Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.

**  
**

This update includes [3](<https://issues.chromium.org/issues?q=customfield1223088:3-M122>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.

**  
**

[TBD][[327696052](<https://issues.chromium.org/issues/327696052>)] High CVE-2024-2400: Use after free in Performance Manager. Reported by zh1x1an1221 of Ant Group Tianqiong Security Lab on 2024-03-01

**  
**

We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[329224653](<https://issues.chromium.org/issues/329224653>)] Various fixes from internal audits, fuzzing and other initiatives


Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Daniel Yip  

Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-6345', 'CVE-2023-6346', 'CVE-2023-6347', 'CVE-2023-6348', 'CVE-2023-6350', 'CVE-2023-6351'];https://chromereleases.googleblog.com/2023/11/stable-channel-update-for-desktop_28.html;"The Stable channel has been updated to 119.0.6045.199 for Mac and Linux and 119.0.6045.199/.200 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/119.0.6045.159..119.0.6045.200?pretty=fuller&n=10000>). 



Security Fixes and Rewards  

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.  




This update includes [7](<https://bugs.chromium.org/p/chromium/issues/list?q=type%3Abug-security%20os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%20label%3ARelease-3-M119&can=1>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.  




[N/A][[1491459](<https://crbug.com/1491459>)] High CVE-2023-6348: Type Confusion in Spellcheck. Reported by Mark Brand of Google Project Zero on 2023-10-10  

[$31000][[1494461](<https://crbug.com/1494461>)] High CVE-2023-6347: Use after free in Mojo. Reported by Leecraso and Guang Gong of 360 Vulnerability Research Institute on 2023-10-21  

[$10000][[1500856](<https://crbug.com/1500856>)] High CVE-2023-6346: Use after free in WebAudio. Reported by Huang Xilin of Ant Group Light-Year Security Lab on 2023-11-09  

[$7000][[1501766](<https://crbug.com/1501766>)] High CVE-2023-6350: Out of bounds memory access in libavif. Reported by Fudan University on 2023-11-13  

[$7000][[1501770](<https://crbug.com/1501770>)] High CVE-2023-6351: Use after free in libavif. Reported by Fudan University on 2023-11-13  

[N/A][[1505053](<https://crbug.com/1505053>)] High CVE-2023-6345: Integer overflow in Skia. Reported by Beno√Æt Sevens and Cl√©ment Lecigne of Google's Threat Analysis Group on 2023-11-24  



We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.


As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1505618](<https://crbug.com/1505618>)] Various fixes from internal audits, fuzzing and other initiatives

**  
**

Google is aware that an exploit for CVE-2023-6345 exists in the wild.




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  


Srinivas Sista  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-6508', 'CVE-2023-6509', 'CVE-2023-6510', 'CVE-2023-6511', 'CVE-2023-6512'];https://chromereleases.googleblog.com/2023/12/stable-channel-update-for-desktop.html;"The Chrome team is delighted to announce the promotion of Chrome 120 to the stable channel for Windows, Mac and Linux. This will roll out over the coming days/weeks.


Chrome 120.0.6099.62 (Linux and Mac), 120.0.6099.62/.63( Windows) contains a number of fixes and improvements -- a list of changes is available in the[ log](<https://chromium.googlesource.com/chromium/src/+log/119.0.6045.200..120.0.6099.63?pretty=fuller&n=10000>). Watch out for upcoming[ ](<https://chrome.blogspot.com/>)[Chrome](<https://chrome.blogspot.com/>) and[ Chromium](<https://blog.chromium.org/>) blog posts about new features and big efforts delivered in 120.




The Extended Stable channel has been updated to 120.0.6099.63 for Windows and 120.0.6099.62 for Mac, which will roll out over the coming days/weeks.  





Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [10](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-0-M120>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$10000][[1497984](<https://crbug.com/1497984>)] High CVE-2023-6508: Use after free in Media Stream. Reported by Cassidy Kim(@cassidy6564) on 2023-10-31

[$1000][[1494565](<https://crbug.com/1494565>)] High CVE-2023-6509: Use after free in Side Panel Search. Reported by Khalil Zhani on 2023-10-21

[$1000][[1480152](<https://crbug.com/1480152>)] Medium CVE-2023-6510: Use after free in Media Capture. Reported by [pwn2car] on 2023-09-08

[$2000][[1478613](<https://crbug.com/1478613>)] Low CVE-2023-6511: Inappropriate implementation in Autofill. Reported by Ahmed ElMasry on 2023-09-04

[$1000][[1350028](<https://crbug.com/1350028>)] Low CVE-2023-6512: Inappropriate implementation in Web Browser UI. Reported by Axel Chong on 2022-08-03


We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  





As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1508151](<https://crbug.com/1508151>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).







Interested in switching release channels? Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.  



Srinivas Sista  
Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-5996'];https://chromereleases.googleblog.com/2023/11/stable-channel-update-for-desktop.html;"The Stable channel has been updated to 119.0.6045.123 for Mac and Linux and 119.0.6045.123/.124 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/119.0.6045.105..119.0.6045.123?pretty=fuller&n=10000>).




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [1](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M119>) security fix. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[N/A][[1497859](<https://crbug.com/1497859>)] High CVE-2023-5996: Use after free in WebAudio. Reported by Huang Xilin of Ant Group Light-Year Security Lab via Tianfu Cup 2023 on 2023-10-30




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  



Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.




Prudhvikumar Bommana  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2023-2721', 'CVE-2023-2722', 'CVE-2023-2723', 'CVE-2023-2724', 'CVE-2023-2725', 'CVE-2023-2726'];https://chromereleases.googleblog.com/2023/05/stable-channel-update-for-desktop_16.html;"The Stable channel has been updated to 113.0.5672.126 for Mac and Linux and 113.0.5672.126/.127 for Windows, which will roll out over the coming days/weeks. A full list of changes in this build is available in the [log](<https://chromium.googlesource.com/chromium/src/+log/113.0.5672.92..113.0.5672.126?pretty=fuller&n=10000>).




 Security Fixes and Rewards

Note: Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven&#x27;t yet fixed.




This update includes [12](<https://bugs.chromium.org/p/chromium/issues/list?can=1&q=type%3Abug-security+os%3DAndroid%2Cios%2Clinux%2Cmac%2Cwindows%2Call%2Cchrome+label%3ARelease-1-M113>) security fixes. Below, we highlight fixes that were contributed by external researchers. Please see the [Chrome Security Page](<https://sites.google.com/a/chromium.org/dev/Home/chromium-security>) for more information.




[$TBD][[1444360](<https://bugs.chromium.org/p/chromium/issues/detail?id=1444360>)] Critical CVE-2023-2721: Use after free in Navigation. Reported by Guang Gong of Alpha Lab, Qihoo 360 on 2023-05-10

[$7000][[1400905](<https://bugs.chromium.org/p/chromium/issues/detail?id=1400905>)] High CVE-2023-2722: Use after free in Autofill UI. Reported by Rong Jian of VRI on 2022-12-14

[$3000][[1435166](<https://crbug.com/1435166>)] High CVE-2023-2723: Use after free in DevTools. Reported by asnine on 2023-04-21

[$NA][[1433211](<https://crbug.com/1433211>)] High CVE-2023-2724: Type Confusion in V8. Reported by Sergei Glazunov of Google Project Zero on 2023-04-14

[$TBD][[1442516](<https://crbug.com/1442516>)] High CVE-2023-2725: Use after free in Guest View. Reported by asnine on 2023-05-04

[$1000][[1442018](<https://crbug.com/1442018>)] Medium CVE-2023-2726: Inappropriate implementation in WebApp Installs. Reported by Axel Chong on 2022-12-27




We would also like to thank all security researchers that worked with us during the development cycle to prevent security bugs from ever reaching the stable channel.  

As usual, our ongoing internal security work was responsible for a wide range of fixes:

  * [[1445755](<https://crbug.com/1445755>)] Various fixes from internal audits, fuzzing and other initiatives




Many of our security bugs are detected using [AddressSanitizer](<https://code.google.com/p/address-sanitizer/wiki/AddressSanitizer>), [MemorySanitizer](<https://code.google.com/p/memory-sanitizer/wiki/MemorySanitizer>), [UndefinedBehaviorSanitizer](<https://www.chromium.org/developers/testing/undefinedbehaviorsanitizer>), [Control Flow Integrity](<https://sites.google.com/a/chromium.org/dev/developers/testing/control-flow-integrity>), [libFuzzer](<https://sites.google.com/a/chromium.org/dev/developers/testing/libfuzzer>), or [AFL](<https://github.com/google/afl>).




Interested in switching release channels?  Find out how [here](<https://www.chromium.org/getting-involved/dev-channel>). If you find a new issue, please let us know by [filing a bug](<https://crbug.com/>). The [community help forum](<https://support.google.com/chrome/community>) is also a great place to reach out for help or learn about common issues.







Prudhvikumar Bommana  


Google Chrome"
Google Chrome;68.0.3440.106;True;['CVE-2020-6404'];https://packetstormsecurity.com/files/156851/Google-Chrome-80.0.3987.87-Denial-Of-Service.html;
Google Chrome;68.0.3440.106;True;['CVE-2023-2724'];https://packetstormsecurity.com/files/173131/Chrome-Internal-JavaScript-Object-Access-Via-Origin-Trials.html;
Google Chrome;68.0.3440.106;True;['CVE-2023-2935'];https://packetstormsecurity.com/files/173196/Chrome-v8-internal-Object-SetPropertyWithAccessor-Type-Confusion.html;
Google Chrome;68.0.3440.106;True;['CVE-2023-2936'];https://packetstormsecurity.com/files/173197/Chrome-V8-Type-Confusion.html;
Google Chrome;68.0.3440.106;True;['CVE-2023-4352'];https://packetstormsecurity.com/files/174669/Chrome-Read-Only-Property-Overwrite.html;
Mozilla Firefox;61.0.1;True;['CVE-2019-9810'];https://0day.today/exploit/description/32423;
Mozilla Firefox;61.0.1;True;['CVE-2019-9791'];https://0day.today/exploit/description/32433;
Mozilla Firefox;61.0.1;True;['CVE-2019-9813'];https://0day.today/exploit/description/32482;
Mozilla Firefox;61.0.1;True;['CVE-2019-9792'];https://0day.today/exploit/description/32814;Spidermonkey IonMonkey can, during a bailout, leak an internal JS_OPTIMIZED_OUT magic value to the running script. This magic value can then be used to achieve memory corruption.
Mozilla Firefox;61.0.1;True;['CVE-2019-9816'];https://0day.today/exploit/description/32815;Spidermonkey IonMonkey suffers from an issue where an unexpected ObjectGroup in the ObjectGroupDispatch operation might lead to potentially unsafe code being executed.
Mozilla Firefox;61.0.1;True;['CVE-2019-17026', 'CVE-2020-0674'];https://0day.today/exploit/description/36241;
Mozilla Firefox;61.0.1;True;['CVE-2019-11707', 'CVE-2019-11708', 'CVE-2019-17026'];https://0day.today/exploit/description/37293;
Mozilla Firefox;61.0.1;True;['CVE-2020-26950'];https://0day.today/exploit/description/37440;This Metasploit modules exploits CVE-2020-26950, a use-after-free exploit in Firefox. The MCallGetProperty opcode can be emitted with unmet assumptions resulting in an exploitable use-after-free condition. This exploit uses a somewhat novel technique of spraying ArgumentsData structures in order to construct primitives. The shellcode is forced into executable memory via the JIT compiler, and executed by writing to the JIT region pointer. This exploit does not contain a sandbox escape, so firefox must be run with the MOZ_DISABLE_CONTENT_SANDBOX environment variable set, in order for the shellcode to run successfully. This vulnerability affects Firefox versions prior to 82.0.3, Firefox ESR versions prior to 78.4.1, and Thunderbird versions prior to 78.4.2, however only Firefox versions up to 79 are supported as a target. Additional work may be needed to support other versions such as Firefox 82.0.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-5217'];;"README - 23 March 2015

Welcome to the WebM VP8/VP9 Codec SDK!

..."
Mozilla Firefox;61.0.1;True;['CVE-2023-4863'];;"[‰∏≠Êñá](README_ZH.md) | EN

# CVE-2023-4863 libwebp dependency chec..."
Mozilla Firefox;61.0.1;True;['CVE-2023-5217'];;"# CVE-2023-5217: libvpx VP8 Encoding Heap Overflow PoC

CVE-2023..."
Mozilla Firefox;61.0.1;True;['CVE-2023-5217'];;"README - 31 January 2019

Welcome to the WebM VP8/VP9 Codec SDK!..."
Mozilla Firefox;61.0.1;True;['CVE-2022-28282'];;"# CVE-2022-28282
**Firefox: heap-use-after-free in DocumentL10n:..."
Mozilla Firefox;61.0.1;True;['CVE-2022-22736'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-17318;Mozilla Firefox is an open source Web browser from the Mozilla Foundation in the U.S. An elevation of privilege vulnerability exists in versions of Mozilla Firefox prior to 96.0. An attacker could exploit this vulnerability to elevate privileges by making the program search for system libraries in the current directory.
Mozilla Firefox;61.0.1;True;['CVE-2022-28285'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-17321;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the U.S. Mozilla Firefox is vulnerable to a resource management error that stems from an AliasSet bug used in JIT Codegen. An attacker could exploit the vulnerability to cause a denial of service with the help of specially crafted requests.
Mozilla Firefox;61.0.1;True;['CVE-2022-36320'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-17324;Mozilla Firefox is an open source Web browser from the Mozilla Foundation. versions prior to Mozilla Firefox 103 contain a remote code execution vulnerability that stems from a boundary error in the processing of HTML content, which could be exploited to create a specially crafted Web site, tricking victims into opening it, triggering a memory corruption and executing arbitrary code on the target system. execute arbitrary code on the target system.
Mozilla Firefox;61.0.1;True;['CVE-2022-36315'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-17325;Mozilla Firefox is an open source Web browser from the Mozilla Foundation. versions prior to Mozilla Firefox 103 are vulnerable to a resource management error that stems from a cache preload error. When loading a script with subresource integrity, an attacker could exploit the vulnerability to trigger reuse of previously cached entries with incorrect, different integrity metadata.
Mozilla Firefox;61.0.1;True;['CVE-2022-29910'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-17326;Mozilla Firefox is an open source Web browser from the Mozilla Foundation in the U.S. A security feature issue vulnerability exists in versions prior to Mozilla Firefox 100.0, which stems from Firefox for Android's inability to properly log and retain HSTS settings. An attacker could exploit the vulnerability to perform a man-in-the-middle attack.
Mozilla Firefox;61.0.1;True;['CVE-2023-34417'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-55349;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. A security vulnerability exists in Mozilla Firefox prior to version 114, which stems from a memory security error that can be exploited by attackers to run arbitrary code.
Mozilla Firefox;61.0.1;True;['CVE-2023-29535'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-55353;Mozilla Firefox ESR is an extended support release of Firefox (web browser) from the Mozilla Foundation in the United States. A denial of service vulnerability exists in Mozilla Firefox ESR prior to version 102.10, which originates from a garbage collector compression where weak maps may be accessed before they are properly tracked, and can be exploited by an attacker to cause memory corruption and a potentially exploitable crash.
Mozilla Firefox;61.0.1;True;['CVE-2023-37211'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-59026;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. A security vulnerability exists in Mozilla Firefox, which can be exploited by a remote attacker to submit a special WEB request that can be tricked into being parsed by the user, which can crash the system, cause a denial-of-service attack, or execute arbitrary code in the context of the application.
Mozilla Firefox;61.0.1;True;['CVE-2022-22760'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-59031;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. An information disclosure vulnerability exists in Mozilla Firefox that originates from a sensitive feature in the display error message in a cross-origin response when the product imports resources using Web Workers. A remote attacker could exploit the vulnerability to obtain sensitive information.
Mozilla Firefox;61.0.1;True;['CVE-2022-29917'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-59954;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. Mozilla Firefox suffers from a buffer overflow vulnerability that originates from a boundary error when processing HTML content. An attacker could exploit the vulnerability by creating a specially crafted web page, tricking a victim into opening it, triggering a memory corruption, and executing arbitrary code on the target system.
Mozilla Firefox;61.0.1;True;['CVE-2022-26384'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-59958;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. Mozilla Firefox suffers from a permissions licensing and access control issue vulnerability that stems from a logic error when handling iframes. The vulnerability can be exploited by an attacker to bypass implemented security restrictions by controlling the content of a sandboxed iframe.
Mozilla Firefox;61.0.1;True;['CVE-2023-4050'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-68210;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the U.S. Mozilla Firefox ESR is Firefox (Enterprise Edition). Mozilla Firefox and Mozilla Firefox ESR suffer from a buffer overflow vulnerability that stems from the fact that, under certain circumstances, untrusted input streams are copied to the stack buffer without checking their size. An attacker could use this vulnerability to cause a potentially exploitable crash that could lead to a sandbox escape.
Mozilla Firefox;61.0.1;True;['CVE-2023-4049'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-68211;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the U.S. Mozilla Firefox ESR is Firefox (Enterprise Edition). Mozilla Firefox and Mozilla Firefox ESR suffer from a Competitive Condition Issue vulnerability that stems from a competitive condition in reference counting code discovered through code inspection. An attacker could exploit the vulnerability to potentially cause a program crash, arbitrary code execution, and more.
Mozilla Firefox;61.0.1;True;['CVE-2023-4046'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-68212;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the U.S. Mozilla Firefox ESR is Firefox (Enterprise Edition). A denial of service vulnerability exists in Mozilla Firefox and Mozilla Firefox ESR that stems from incorrect values used during WASM compilation. An attacker can exploit the vulnerability to cause incorrect compilation and potentially exploitable crashes in the content process.
Mozilla Firefox;61.0.1;True;['CVE-2023-25748'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-68213;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. Mozilla Firefox suffers from a code issue vulnerability that stems from the fact that by displaying a prompt with a long description, a full-screen notification may be hidden, which can be exploited by attackers to cause potential user confusion or spoofing attacks.
Mozilla Firefox;61.0.1;True;['CVE-2022-22756'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-68214;Mozilla Thunderbird is the United States Mozilla Foundation's set of independent from the Mozilla Application Suite e-mail client software. The program supports IMAP, POP mail protocols and HTML mail format. An arbitrary code execution vulnerability exists in Mozilla Thunderbird versions prior to 91.6, Firefox versions prior to 97, and Firefox ESR versions prior to 91.6. The vulnerability can be exploited to cause a user to drag and drop an image to their desktop or folder to run arbitrary code.
Mozilla Firefox;61.0.1;True;['CVE-2022-34482'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-68216;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. The input validation error vulnerability exists in Mozilla Firefox due to a lack of restriction and filtering of extensions in the drag-and-drop image feature. The vulnerability can be exploited to execute malicious code by dragging and dropping a malicious image onto the file system.
Mozilla Firefox;61.0.1;True;['CVE-2023-4573'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-75344;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. Mozilla Firefox suffers from a code issue vulnerability that stems from a potentially exploitable crash that can be exploited by an attacker to cause a use-after-release when receiving rendered data via IPC, when mStream is initialized.
Mozilla Firefox;61.0.1;True;['CVE-2023-4584'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-75345;Mozilla Firefox ESR is an open source web browser from the Mozilla Foundation. Mozilla Firefox ESR suffers from a memory corruption vulnerability that can be exploited by a remote attacker to submit a specially crafted WEB request, which can be tricked into being parsed by the user and can cause the application to crash or execute arbitrary code in the context of the application.
Mozilla Firefox;61.0.1;True;['CVE-2022-46881'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-75347;Mozilla Thunderbird is the United States Mozilla Foundation's set of independent from the Mozilla Application Suite e-mail client software. The program supports IMAP, POP mail protocols and HTML mail format. A denial of service vulnerability exists in WebGL in Mozilla Thunderbird, Firefox, and Firefox ESR. An attacker could exploit the vulnerability to corrupt memory and cause the program to crash.
Mozilla Firefox;61.0.1;True;['CVE-2022-22755'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-75348;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. Mozilla Firefox suffers from a resource mishandling vulnerability that stems from the way the browser handles XSL documents. An attacker could use the vulnerability to trick a victim into loading a specially designed XSL document that could continue to execute JavaScript within the scope of the same-origin policy, even after the browser tab is closed.
Mozilla Firefox;61.0.1;True;['CVE-2022-46878'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-75349;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. A memory corruption vulnerability exists in Mozilla Firefox, which can be exploited by a remote attacker to submit a specially crafted web request that the user can be induced to parse, which can cause the application to crash or execute arbitrary code in the context of the application.
Mozilla Firefox;61.0.1;True;['CVE-2022-34483'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-75350;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. A remote code execution vulnerability exists in Mozilla Firefox due to a lack of restriction and filtering of extensions in the drag-and-drop image feature. The vulnerability can be exploited to execute malicious code by dragging and dropping a malicious image onto the file system.
Mozilla Firefox;61.0.1;True;['CVE-2022-34481'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-75351;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. Mozilla Firefox suffers from an integer overflow vulnerability that stems from improper validation of input data in the application's nsTArray_Impl::ReplaceElementsAt() function, which can be exploited to potentially cause an integer overflow when replacing an element with a replacement that is too large for the container.
Mozilla Firefox;61.0.1;True;['CVE-2022-34468'];https://www.cnvd.org.cn/flaw/show/CNVD-2023-86126;Mozilla Firefox is an open source web browser from the Mozilla Foundation in the United States. Mozilla Firefox has a security signature issue vulnerability that can be exploited by remote attackers to perform privilege escalation.
Mozilla Firefox;61.0.1;True;['CVE-2019-11709'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2019-11709;Mozilla developers and community members reported memory safety bugs present in Firefox 67 and Firefox ESR 60.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-6870'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2023-6870;"Applications which spawn a Toast notification in a background thread may have obscured fullscreen notifications displayed by Firefox. 
*This issue only affects Android versions of Firefox and Firefox Focus.* This vulnerability affects Firefox < 121."
Mozilla Firefox;61.0.1;True;['CVE-2024-0741'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0741;An out of bounds write in ANGLE could have allowed an attacker to corrupt memory leading to a potentially exploitable crash. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0742'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0742;It was possible for certain browser prompts and dialogs to be activated or dismissed unintentionally by the user due to an incorrect timestamp used to prevent input after page load. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0743'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0743;An unchecked return value in TLS handshake code could have caused a potentially exploitable crash. This vulnerability affects Firefox < 122, Firefox ESR < 115.9, and Thunderbird < 115.9.
Mozilla Firefox;61.0.1;True;['CVE-2024-0744'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0744;In some circumstances, JIT compiled code could have dereferenced a wild pointer value. This could have led to an exploitable crash. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0745'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0745;The WebAudio `OscillatorNode` object was susceptible to a stack buffer overflow. This could have led to a potentially exploitable crash. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0746'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0746;A Linux user opening the print preview dialog could have caused the browser to crash. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0747'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0747;When a parent page loaded a child in an iframe with `unsafe-inline`, the parent Content Security Policy could have overridden the child Content Security Policy. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0748'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0748;A compromised content process could have updated the document URI. This could have allowed an attacker to set an arbitrary URI in the address bar or history. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0749'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0749;A phishing site could have repurposed an `about:` dialog to show phishing content with an incorrect origin in the address bar. This vulnerability affects Firefox < 122 and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0750'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0750;A bug in popup notifications delay calculation could have made it possible for an attacker to trick a user into granting permissions. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0751'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0751;A malicious devtools extension could have been used to escalate privileges. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0752'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0752;A use-after-free crash could have occurred on macOS if a Firefox update were being applied on a very busy system. This could have resulted in an exploitable crash. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0753'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0753;In specific HSTS configurations an attacker could have bypassed HSTS on a subdomain. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0754'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0754;Some WASM source files could have caused a crash when loaded in devtools. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0755'];https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2024-0755;Memory safety bugs present in Firefox 121, Firefox ESR 115.6, and Thunderbird 115.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2023-4863'];;"# CVE-2023-4863
```bash
  # checkout webp
git clone https://chro..."
Mozilla Firefox;61.0.1;True;['2019-9791', 'CVE-2019-9791'];https://www.exploit-db.com/exploits/46613;
Mozilla Firefox;61.0.1;True;['2019-9813', 'CVE-2019-9813'];https://www.exploit-db.com/exploits/46646;
Mozilla Firefox;61.0.1;True;['2019-9792', 'CVE-2019-9792'];https://www.exploit-db.com/exploits/46939;
Mozilla Firefox;61.0.1;True;['2019-11708', '2019-9810', 'CVE-2019-11708', 'CVE-2019-9810'];https://www.exploit-db.com/exploits/47752;
Mozilla Firefox;61.0.1;True;['2019-11707', 'CVE-2019-11707', 'CVE-2019-11708', 'CVE-2019-17026'];https://www.exploit-db.com/exploits/50691;
Mozilla Firefox;61.0.1;True;['CVE-2023-4863'];;"# CVE-2023-4863
Triggerin..."
Mozilla Firefox;61.0.1;True;['CVE-2023-4863'];;"# libwebp CVE-2023-4863

- [A Vulnerability to..."
Mozilla Firefox;61.0.1;True;['CVE-2023-25748', 'CVE-2023-25749', 'CVE-2023-25750', 'CVE-2023-25751', 'CVE-2023-25752', 'CVE-2023-28159', 'CVE-2023-28160', 'CVE-2023-28161', 'CVE-2023-28162', 'CVE-2023-28163', 'CVE-2023-28164', 'CVE-2023-28176', 'CVE-2023-28177'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-09/;"The fullscreen notification could have been hidden on Firefox for Android by using download popups, resulting in potential user confusion or spoofing attacks. This bug only affects Firefox for Android. Other operating systems are unaffected.
By displaying a prompt with a long description, the fullscreen notification could have been hidden, resulting in potential user confusion or spoofing attacks. This bug only affects Firefox for Android. Other operating systems are unaffected.
Android applications with unpatched vulnerabilities can be launched from a browser using Intents, exposing users to these vulnerabilities. Firefox will now confirm with users that they want to launch an external application before doing so. This bug only affects Firefox for Android. Other versions of Firefox are unaffected.
Under certain circumstances, a ServiceWorker's offline cache may have leaked to the file system when using private browsing mode.
Sometimes, when invalidating JIT code while following an iterator, the newly generated code could be overwritten incorrectly. This could lead to a potentially exploitable crash.
When following a redirect to a publicly accessible web extension file, the URL may have been translated to the actual local path, leaking potentially sensitive information.
Dragging a URL from a cross-origin iframe that was removed during the drag could have led to user confusion and website spoofing attacks.
If temporary ""one-time"" permissions, such as the ability to use the Camera, were granted to a document loaded using a file: URL, that permission persisted in that tab for all other documents loaded from a file: URL. This is potentially dangerous if the local files came from different sources, such as in a download directory.
While implementing AudioWorklets, some code may have casted one type to another, invalid, dynamic type. This could have led to a potentially exploitable crash.
When accessing throttled streams, the count of available bytes needed to be checked in the calling function to be within bounds. This may have lead future code to be incorrect and vulnerable.
When downloading files through the Save As dialog on Windows with suggested filenames containing environment variable names, Windows would have resolved those in the context of the current user. This bug only affects Firefox on Windows. Other versions of Firefox are unaffected.
Mozilla developers Timothy Nikkel, Andrew McCreight, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 110 and Firefox ESR 102.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Mozilla developers and community members Calixte Denizet, Gabriele Svelto, Andrew McCreight, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 110. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-1999', 'CVE-2023-28163', 'CVE-2023-29531', 'CVE-2023-29532', 'CVE-2023-29533', 'CVE-2023-29534', 'CVE-2023-29535', 'CVE-2023-29536', 'CVE-2023-29537', 'CVE-2023-29538', 'CVE-2023-29539', 'CVE-2023-29540', 'CVE-2023-29541', 'CVE-2023-29542', 'CVE-2023-29543', 'CVE-2023-29544', 'CVE-2023-29545', 'CVE-2023-29546', 'CVE-2023-29547', 'CVE-2023-29548', 'CVE-2023-29549', 'CVE-2023-29550', 'CVE-2023-29551'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-13/;"An attacker could have caused an out of bounds memory access using WebGL APIs, leading to memory corruption and a potentially exploitable crash.This bug only affects Firefox for macOS. Other operating systems are unaffected.
A local attacker can trick the Mozilla Maintenance Service into applying an unsigned update file by pointing the service at an update file on a malicious SMB server. The update file can be replaced after the signature check, before the use, because the write-lock requested by the service does not work on a SMB server.Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.
A website could have obscured the fullscreen notification by using a combination of window.open, fullscreen requests, window.name assignments, and setInterval calls. This could have led to user confusion and possible spoofing attacks.
Different techniques existed to obscure the fullscreen notification in Firefox and Focus for Android. These could have led to potential user confusion and spoofing attacks.This bug only affects Firefox and Focus for Android. Other versions of Firefox are unaffected.
A double-free in libwebp could have led to memory corruption and a potentially exploitable crash.
Following a Garbage Collector compaction, weak maps may have been accessed before they were correctly traced. This resulted in memory corruption and a potentially exploitable crash.
An attacker could cause the memory manager to incorrectly free a pointer that addresses attacker-controlled memory, resulting in an assertion, memory corruption, or a potentially exploitable crash.
Multiple race conditions in the font initialization could have led to memory corruption and execution of attacker-controlled code.
Under specific circumstances a WebExtension may have received a jar:file:/// URI instead of a moz-extension:/// URI during a load request. This leaked directory paths on the user's machine.
When handling the filename directive in the Content-Disposition header, the filename would be truncated if the filename contained a NULL character. This could have led to reflected file download attacks potentially tricking users to install malware.
Using a redirect embedded into sourceMappingUrls could allow for navigation to external protocol links in sandboxed iframes without allow-top-navigation-to-custom-protocols.
Firefox did not properly handle downloads of files ending in .desktop, which can be interpreted to run attacker-controlled commands. This bug only affects Firefox for Linux on certain Distributions. Other operating systems are unaffected, and Mozilla is unable to enumerate all affected Linux Distributions.
A newline in a filename could have been used to bypass the file extension security mechanisms that replace malicious file extensions such as .lnk with .download. This could have led to accidental execution of malicious code.This bug only affects Firefox on Windows. Other versions of Firefox are unaffected.
An attacker could have caused memory corruption and a potentially exploitable use-after-free of a pointer in a global object's debugger vector.
If multiple instances of resource exhaustion occurred at the incorrect time, the garbage collector could have caused memory corruption and a potentially exploitable crash.
Similar to CVE-2023-28163, this time when choosing 'Save Link As', suggested filenames containing environment variable names would have resolved those in the context of the current user. This bug only affects Firefox on Windows. Other versions of Firefox are unaffected.
When recording the screen while in Private Browsing on Firefox for Android the address bar and keyboard were not hidden, potentially leaking sensitive information. This bug only affects Firefox for Android. Other operating systems are unaffected.
When a secure cookie existed in the Firefox cookie jar an insecure cookie for the same domain could have been created, when it should have silently failed. This could have led to a desynchronization in expected results when reading from the secure cookie.
A wrong lowering instruction in the ARM64 Ion compiler resulted in a wrong optimization result.
Under certain circumstances, a call to the bind function may have resulted in the incorrect realm. This may have created a vulnerability relating to JavaScript-implemented sandboxes such as SES.
Mozilla developers Randell Jesup, Andrew Osmond, Sebastian Hengst, Andrew McCreight, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 111 and Firefox ESR 102.9. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Mozilla developers Randell Jesup, Andrew McCreight, Gabriele Svelto, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 111. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-32205', 'CVE-2023-32206', 'CVE-2023-32207', 'CVE-2023-32208', 'CVE-2023-32209', 'CVE-2023-32210', 'CVE-2023-32211', 'CVE-2023-32212', 'CVE-2023-32213', 'CVE-2023-32214', 'CVE-2023-32215', 'CVE-2023-32216'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-16/;"In multiple cases browser prompts could have been obscured by popups controlled by content. These could have led to potential user confusion and spoofing attacks.
An out-of-bound read could have led to a crash in the RLBox Expat driver.
A missing delay in popup notifications could have made it possible for an attacker to trick a user into granting permissions.
Service workers could reveal script base URL due to dynamic import().
A maliciously crafted favicon could have led to an out of memory crash.
Documents were incorrectly assuming an ordering of principal objects when ensuring we were loading an appropriately privileged principal. In certain circumstances it might have been possible to cause a document to be loaded with a higher privileged principal than intended.
A type checking bug would have led to invalid code being compiled.
An attacker could have positioned a datalist element to obscure the address bar.
When reading a file, an uninitialized value could have been used as read limit.
A race condition during dav1d decoding could have led to an out-of-bounds memory access, potentially leading to memory corruption and execution of malicious code.
Protocol handlers ms-cxh and ms-cxh-full could have been leveraged to trigger a denial of service.Note: This attack only affects Windows. Other operating systems are not affected.
Mozilla developers and community members Gabriele Svelto, Andrew Osmond, Emily McDonough, Sebastian Hengst, Andrew McCreight and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 112 and Firefox ESR 102.10. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Mozilla developers and community members Ronald Crane, Andrew McCreight, Randell Jesup and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 112. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-34414', 'CVE-2023-34415', 'CVE-2023-34416', 'CVE-2023-34417'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-20/;"The error page for sites with invalid TLS certificates was missing the activation-delay Firefox uses to protect prompts and permission dialogs from attacks that exploit human response time delays. If a malicious page elicited user clicks in precise locations immediately before navigating to a site with a certificate error and made the renderer extremely busy at the same time, it could create a gap between when the error page was loaded and when the display actually refreshed. With the right timing the elicited clicks could land in that gap and activate the button that overrides the certificate error for that site.
When choosing a site-isolated process for a document loaded from a data: URL that was the result of a redirect, Firefox would load that document in the same process as the site that issued the redirect. This bypassed the site-isolation protections against Spectre-like attacks on sites that host an ""open redirect"". Firefox no longer follows HTTP redirects to data: URLs.
Mozilla developers and community members Gabriele Svelto, Andrew McCreight, the Mozilla Fuzzing Team, Sean Feng, and Sebastian Hengst reported memory safety bugs present in Firefox 113 and Firefox ESR 102.11. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Mozilla developers and community members Andrew McCreight, Randell Jesup, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 113. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-3482', 'CVE-2023-37201', 'CVE-2023-37202', 'CVE-2023-37203', 'CVE-2023-37204', 'CVE-2023-37205', 'CVE-2023-37206', 'CVE-2023-37207', 'CVE-2023-37208', 'CVE-2023-37209', 'CVE-2023-37210', 'CVE-2023-37211', 'CVE-2023-37212'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-22/;"When Firefox is configured to block storage of all cookies, it was still possible to store data in localstorage by using an iframe with a source of 'about:blank'. This could have led to malicious websites storing tracking data without permission.
An attacker could have triggered a use-after-free condition when creating a WebRTC connection over HTTPS.
Cross-compartment wrappers wrapping a scripted proxy could have caused objects from other compartments to be stored in the main compartment resulting in a use-after-free.
Insufficient validation in the Drag and Drop API in conjunction with social engineering, may have allowed an attacker to trick end-users into creating a shortcut to local system files. This could have been leveraged to execute arbitrary code.
A website could have obscured the fullscreen notification by using an option element by introducing lag via an expensive computational function. This could have led to user confusion and possible spoofing attacks.
The use of RTL Arabic characters in the address bar may have allowed for URL spoofing.
Uploading files which contain symlinks may have allowed an attacker to trick a user into submitting sensitive data to a malicious website.
A website could have obscured the fullscreen notification by using a URL with a scheme handled by an external program, such as a mailto URL. This could have led to user confusion and possible spoofing attacks.
When opening Diagcab files, Firefox did not warn the user that these files may contain malicious code.
A use-after-free condition existed in NotifyOnHistoryReload where a LoadingSessionHistoryEntry object was freed and a reference to that object remained. This resulted in a potentially exploitable condition when the reference to that object was later reused.
A website could prevent a user from exiting full-screen mode via alert and prompt calls. This could lead to user confusion and possible spoofing attacks.
Memory safety bugs present in Firefox 114, Firefox ESR 102.12, and Thunderbird 102.12. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 114. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-3600'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-26/;"During the worker lifecycle, a use-after-free condition could have occured, which could have led to a potentially exploitable crash.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-4045', 'CVE-2023-4046', 'CVE-2023-4047', 'CVE-2023-4048', 'CVE-2023-4049', 'CVE-2023-4050', 'CVE-2023-4051', 'CVE-2023-4052', 'CVE-2023-4053', 'CVE-2023-4054', 'CVE-2023-4055', 'CVE-2023-4056', 'CVE-2023-4057', 'CVE-2023-4058'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-29/;"Offscreen Canvas did not properly track cross-origin tainting, which could have been used to access image data from another site in violation of same-origin policy.
In some circumstances, a stale value could have been used for a global variable in WASM JIT analysis. This resulted in incorrect compilation and a potentially exploitable crash in the content process.
A bug in popup notifications delay calculation could have made it possible for an attacker to trick a user into granting permissions.
An out-of-bounds read could have led to an exploitable crash when parsing HTML with DOMParser in low memory situations.
Race conditions in reference counting code were found through code inspection. These could have resulted in potentially exploitable use-after-free vulnerabilities.
In some cases, an untrusted input stream was copied to a stack buffer without checking its size. This resulted in a potentially exploitable crash which could have led to a sandbox escape.
A website could have obscured the full screen notification by using the file open dialog. This could have led to user confusion and possible spoofing attacks.
The Firefox updater created a directory writable by non-privileged users. When uninstalling Firefox, any files in that directory would be recursively deleted with the permissions of the uninstalling user account. This could be combined with creation of a junction (a form of symbolic link) to allow arbitrary file deletion controlled by the non-privileged user. This bug only affects Firefox on Windows. Other operating systems are unaffected.
A website could have obscured the full screen notification by using a URL with a scheme handled by an external program, such as a mailto URL. This could have led to user confusion and possible spoofing attacks.
When opening appref-ms files, Firefox did not warn the user that these files may contain malicious code. This bug only affects Firefox on Windows. Other operating systems are unaffected.
When the number of cookies per domain was exceeded in document.cookie, the actual cookie jar sent to the host was no longer consistent with expected cookie jar state. This could have caused requests to be sent with some cookies missing.
Memory safety bugs present in Firefox 115, Firefox ESR 115.0, Firefox ESR 102.13, Thunderbird 115.0, and Thunderbird 102.13. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 115, Firefox ESR 115.0, and Thunderbird 115.0. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 115. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-4573', 'CVE-2023-4574', 'CVE-2023-4575', 'CVE-2023-4576', 'CVE-2023-4577', 'CVE-2023-4578', 'CVE-2023-4579', 'CVE-2023-4580', 'CVE-2023-4581', 'CVE-2023-4582', 'CVE-2023-4583', 'CVE-2023-4584', 'CVE-2023-4585', 'CVE-2023-5732'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-34/;"When receiving rendering data over IPC mStream could have been destroyed when initialized, which could have led to a use-after-free causing a potentially exploitable crash.
When creating a callback over IPC for showing the Color Picker window, multiple of the same callbacks could have been created at a time and eventually all simultaneously destroyed as soon as one of the callbacks finished. This could have led to a use-after-free causing a potentially exploitable crash.
When creating a callback over IPC for showing the File Picker window, multiple of the same callbacks could have been created at a time and eventually all simultaneously destroyed as soon as one of the callbacks finished. This could have led to a use-after-free causing a potentially exploitable crash.
On Windows, an integer overflow could occur in RecordedSourceSurfaceCreation which resulted in a heap buffer overflow potentially leaking sensitive data that could have led to a sandbox escape.This bug only affects Firefox on Windows. Other operating systems are unaffected.
When UpdateRegExpStatics attempted to access initialStringHeap it could already have been garbage collected prior to entering the function, which could potentially have led to an exploitable crash.
An attacker could have created a malicious link using bidirectional characters to spoof the location in the address bar when visited.
When calling JS::CheckRegExpSyntax a Syntax Error could have been set which would end in calling convertToRuntimeErrorAndClear. A path in the function could attempt to allocate memory when none is available which would have caused a newly created Out of Memory exception to be mishandled as a Syntax Error.
Search queries in the default search engine could appear to have been the currently navigated URL if the search query itself was a well formed URL. This could have led to a site spoofing another if it had been maliciously set as the default search engine.
Push notifications stored on disk in private browsing mode were not being encrypted potentially allowing the leak of sensitive information.
Excel .xll add-in files did not have a blocklist entry in Firefox's executable blocklist which allowed them to be downloaded without any warning of their potential harm.
Due to large allocation checks in Angle for glsl shaders being too lenient a buffer overflow could have occured when allocating too much private shader memory on mac OS. This bug only affects Firefox on macOS. Other operating systems are unaffected.
When checking if the Browsing Context had been discarded in HttpBaseChannel, if the load group was not available then it was assumed to have already been discarded which was not always the case for private channels after the private session had ended.
Memory safety bugs present in Firefox 116, Firefox ESR 102.14, Firefox ESR 115.1, Thunderbird 102.14, and Thunderbird 115.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 116, Firefox ESR 115.1, and Thunderbird 115.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-4863', 'CVE-2023-5129'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-40/;"Opening a malicious WebP image could lead to a heap buffer overflow in the content process. We are aware of this issue being exploited in other products in the wild. Note: This advisory was previously also tracked as CVE-2023-5129.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-5168', 'CVE-2023-5169', 'CVE-2023-5170', 'CVE-2023-5171', 'CVE-2023-5172', 'CVE-2023-5173', 'CVE-2023-5174', 'CVE-2023-5175', 'CVE-2023-5176'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-41/;"A compromised content process could have provided malicious data to FilterNodeD2D1 resulting in an out-of-bounds write, leading to a potentially exploitable crash in a privileged process.This bug only affects Firefox on Windows. Other operating systems are unaffected.
A compromised content process could have provided malicious data in a PathRecording resulting in an out-of-bounds write, leading to a potentially exploitable crash in a privileged process.
In canvas rendering, a compromised content process could have caused a surface to change unexpectedly, leading to a memory leak of a privileged process. This memory leak could be used to effect a sandbox escape if the correct data was leaked.
During Ion compilation, a Garbage Collection could have resulted in a use-after-free condition, allowing an attacker to write two NUL bytes, and cause a potentially exploitable crash.
A hashtable in the Ion Engine could have been mutated while there was a live interior reference, leading to a potential use-after-free and exploitable crash.
In a non-standard configuration of Firefox, an integer overflow could have occurred based on network traffic (possibly under influence of a local unprivileged webpage), leading to an out-of-bounds write to privileged process memory. This bug only affects Firefox if a non-standard preference allowing non-HTTPS Alternate Services (network.http.altsvc.oe) is enabled.
If Windows failed to duplicate a handle during process creation, the sandbox code may have inadvertently freed a pointer twice, resulting in a use-after-free and a potentially exploitable crash.This bug only affects Firefox on Windows when run in non-standard configurations (such as using runas). Other operating systems are unaffected.
During process shutdown, it was possible that an ImageBitmap was created that would later be used after being freed from a different codepath, leading to a potentially exploitable crash.
Memory safety bugs present in Firefox 117, Firefox ESR 115.2, and Thunderbird 115.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-5217'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-44/;"Specific handling of an attacker-controlled VP8 media stream could lead to a heap buffer overflow in the content process. We are aware of this issue being exploited in other products in the wild.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-5721', 'CVE-2023-5722', 'CVE-2023-5723', 'CVE-2023-5724', 'CVE-2023-5725', 'CVE-2023-5726', 'CVE-2023-5727', 'CVE-2023-5728', 'CVE-2023-5729', 'CVE-2023-5730', 'CVE-2023-5731'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-45/;"It was possible for certain browser prompts and dialogs to be activated or dismissed unintentionally by the user due to an insufficient activation-delay.
Using iterative requests an attacker was able to learn the size of an opaque response, as well as the contents of a server-supplied Vary header.
An attacker with temporary script access to a site could have set a cookie containing invalid characters using document.cookie that could have led to unknown errors.
Drivers are not always robust to extremely large draw calls and in some cases this scenario could have led to a crash.
A malicious installed WebExtension could open arbitrary URLs, which under the right circumstance could be leveraged to collect sensitive user data.
A website could have obscured the full screen notification by using the file open dialog. This could have led to user confusion and possible spoofing attacks. Note: This issue only affected macOS operating systems. Other operating systems are unaffected.
The executable file warning was not presented when downloading .msix, .msixbundle, .appx, and .appxbundle files, which can run commands on a user's computer. Note: This issue only affected Windows operating systems. Other operating systems are unaffected.
During garbage collection extra operations were performed on a object that should not be. This could have led to a potentially exploitable crash.
A malicious web site can enter fullscreen mode while simultaneously triggering a WebAuthn prompt. This could have obscured the fullscreen notification and could have been leveraged in a spoofing attack.
Memory safety bugs present in Firefox 118, Firefox ESR 115.3, and Thunderbird 115.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 118. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-6204', 'CVE-2023-6205', 'CVE-2023-6206', 'CVE-2023-6207', 'CVE-2023-6208', 'CVE-2023-6209', 'CVE-2023-6210', 'CVE-2023-6211', 'CVE-2023-6212', 'CVE-2023-6213'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-49/;"On some systems‚Äîdepending on the graphics settings and drivers‚Äîit was possible to force an out-of-bounds read and leak memory data into the images created on the canvas element.
It was possible to cause the use of a MessagePort after it had already been freed, which could potentially have led to an exploitable crash.
The black fade animation when exiting fullscreen is roughly the length of the anti-clickjacking delay on permission prompts. It was possible to use this fact to surprise users by luring them to click where the permission grant button would be about to appear.
Ownership mismanagement led to a use-after-free in ReadableByteStreams
When using X11, text selected by the page using the Selection API was erroneously copied into the primary selection, a temporary storage not unlike the clipboard.This bug only affects Firefox on X11. Other systems are unaffected.
Relative URLs starting with three slashes were incorrectly parsed, and a path-traversal ""/../"" part in the path could be used to override the specified host. This could contribute to security problems in web sites.
When an https: web page created a pop-up from a ""javascript:"" URL, that pop-up was incorrectly allowed to load blockable content such as iframes from insecure http: URLs
If an attacker needed a user to load an insecure http: page and knew that user had enabled HTTPS-only mode, the attacker could have tricked the user into clicking to grant an HTTPS-only exception if they could get the user to participate in a clicking game.
Memory safety bugs present in Firefox 119, Firefox ESR 115.4, and Thunderbird 115.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 119. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-6135', 'CVE-2023-6856', 'CVE-2023-6857', 'CVE-2023-6858', 'CVE-2023-6859', 'CVE-2023-6860', 'CVE-2023-6861', 'CVE-2023-6863', 'CVE-2023-6864', 'CVE-2023-6865', 'CVE-2023-6866', 'CVE-2023-6867', 'CVE-2023-6868', 'CVE-2023-6869', 'CVE-2023-6870', 'CVE-2023-6871', 'CVE-2023-6872', 'CVE-2023-6873'];https://www.mozilla.org/en-US/security/advisories/mfsa2023-56/;"The WebGL DrawElementsInstanced method was susceptible to a heap buffer overflow when used on systems with the Mesa VM driver. This issue could allow an attacker to perform remote code execution and sandbox escape.
Multiple NSS NIST curves were susceptible to a side-channel attack known as ""Minerva"". This attack could potentially allow an attacker to recover the private key.
EncryptingOutputStream was susceptible to exposing uninitialized data. This issue could only be abused in order to write data to a local disk which may have implications for private browsing mode.
When resolving a symlink, a race may occur where the buffer passed to readlink may actually be smaller than necessary. This bug only affects Firefox on Unix-based operating systems (Android, Linux, MacOS). Windows is unaffected.
Firefox was susceptible to a heap buffer overflow in nsTextFragment due to insufficient OOM handling.
A use-after-free condition affected TLS socket creation when under memory pressure.
TypedArrays can be fallible and lacked proper exception handling. This could lead to abuse in other APIs which expect TypedArrays to always succeed.
The VideoBridge allowed any content process to use textures produced by remote decoders. This could be abused to escape the sandbox.
The timing of a button click causing a popup to disappear was approximately the same length as the anti-clickjacking delay on permission prompts. It was possible to use this fact to surprise users by luring them to click where the permission grant button would be about to appear.
The nsWindow::PickerOpen(void) method was susceptible to a heap buffer overflow when running in headless mode.
In some instances, the user-agent would allow push requests which lacked a valid VAPID even though the push manager subscription defined one. This could allow empty messages to be sent from unauthorized parties.This bug only affects Firefox on Android.
A  element could have been manipulated to paint content outside of a sandboxed iframe. This could allow untrusted content to display under the guise of trusted content.
Applications which spawn a Toast notification in a background thread may have obscured fullscreen notifications displayed by Firefox. This issue only affects Android versions of Firefox and Firefox Focus.
Under certain conditions, Firefox did not display a warning when a user attempted to navigate to a new protocol handler.
Browser tab titles were being leaked by GNOME to system logs. This could potentially expose the browsing habits of users running in a private tab.
The ShutdownObserver() was susceptible to potentially undefined behavior due to its reliance on a dynamic type that lacked a virtual destructor.
Memory safety bugs present in Firefox 120, Firefox ESR 115.5, and Thunderbird 115.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 120. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2024-0741', 'CVE-2024-0742', 'CVE-2024-0743', 'CVE-2024-0744', 'CVE-2024-0745', 'CVE-2024-0746', 'CVE-2024-0747', 'CVE-2024-0748', 'CVE-2024-0749', 'CVE-2024-0750', 'CVE-2024-0751', 'CVE-2024-0752', 'CVE-2024-0753', 'CVE-2024-0754', 'CVE-2024-0755'];https://www.mozilla.org/en-US/security/advisories/mfsa2024-01/;"An out of bounds write in ANGLE could have allowed an attacker to corrupt memory leading to a potentially exploitable crash.
It was possible for certain browser prompts and dialogs to be activated or dismissed unintentionally by the user due to an incorrect timestamp used to prevent input after page load.
An unchecked return value in TLS handshake code could have caused a potentially exploitable crash.
In some circumstances, JIT compiled code could have dereferenced a wild pointer value. This could have led to an exploitable crash.
The WebAudio OscillatorNode object was susceptible to a stack buffer overflow. This could have led to a potentially exploitable crash.
A Linux user opening the print preview dialog could have caused the browser to crash.
When a parent page loaded a child in an iframe with unsafe-inline, the parent Content Security Policy could have overridden the child Content Security Policy.
A compromised content process could have updated the document URI. This could have allowed an attacker to set an arbitrary URI in the address bar or history.
A phishing site could have repurposed an about: dialog to show phishing content with an incorrect origin in the address bar.
A bug in popup notifications delay calculation could have made it possible for an attacker to trick a user into granting permissions.
A malicious devtools extension could have been used to escalate privileges.
A use-after-free crash could have occurred on macOS if a Firefox update were being applied on a very busy system. This could have resulted in an exploitable crash.
In specific HSTS configurations an attacker could have bypassed HSTS on a subdomain.
Some WASM source files could have caused a crash when loaded in devtools.
Memory safety bugs present in Firefox 121, Firefox ESR 115.6, and Thunderbird 115.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2024-1546', 'CVE-2024-1547', 'CVE-2024-1548', 'CVE-2024-1549', 'CVE-2024-1550', 'CVE-2024-1551', 'CVE-2024-1552', 'CVE-2024-1553', 'CVE-2024-1554', 'CVE-2024-1555', 'CVE-2024-1556', 'CVE-2024-1557'];https://www.mozilla.org/en-US/security/advisories/mfsa2024-05/;"When storing and re-accessing data on a networking channel, the length of buffers may have been confused, resulting in an out-of-bounds memory read.
Through a series of API calls and redirects, an attacker-controlled alert dialog could have been displayed on another website (with the victim website's URL shown).
The fetch() API and navigation incorrectly shared the same cache, as the cache key did not include the optional headers fetch() may contain. Under the correct circumstances, an attacker may have been able to poison the local browser cache by priming it with a fetch() response controlled by the additional headers. Upon navigation to the same URL, the user would see the cached response instead of the expected response.
A website could have obscured the fullscreen notification by using a dropdown select input element. This could have led to user confusion and possible spoofing attacks.
If a website set a large custom cursor, portions of the cursor could have overlapped with the permission dialog, potentially resulting in user confusion and unexpected granted permissions.
A malicious website could have used a combination of exiting fullscreen mode and requestPointerLock to cause the user's mouse to be re-positioned unexpectedly, which could have led to user confusion and inadvertently granting permissions they did not intend to grant.
Set-Cookie response headers were being incorrectly honored in multipart HTTP responses. If an attacker could control the Content-Type response header, as well as control part of the response body, they could inject Set-Cookie response headers that would have been honored by the browser.
When opening a website using the firefox:// protocol handler, SameSite cookies were not properly respected.
The incorrect object was checked for NULL in the built-in profiler, potentially leading to invalid memory access and undefined behavior. Note: This issue only affects the application when the profiler is running.
Incorrect code generation could have led to unexpected numeric conversions and potential undefined behavior. Note: This issue only affects 32-bit ARM devices.
Memory safety bugs present in Firefox 122, Firefox ESR 115.7, and Thunderbird 115.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 122. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2023-5388', 'CVE-2024-2605', 'CVE-2024-2606', 'CVE-2024-2607', 'CVE-2024-2608', 'CVE-2024-2609', 'CVE-2024-2610', 'CVE-2024-2611', 'CVE-2024-2612', 'CVE-2024-2613', 'CVE-2024-2614', 'CVE-2024-2615'];https://www.mozilla.org/en-US/security/advisories/mfsa2024-12/;"An attacker could have leveraged the Windows Error Reporter to run arbitrary code on the system escaping the sandbox. Note: This issue only affected Windows operating systems. Other operating systems are unaffected.
Passing invalid data could have led to invalid wasm values being created, such as arbitrary integers turning into pointer values.
Return registers were overwritten which could have allowed an attacker to execute arbitrary code. Note: This issue only affected Armv7-A systems. Other operating systems are unaffected.
AppendEncodedAttributeValue(), ExtraSpaceNeededForAttrEncoding() and AppendEncodedCharacters() could have experienced integer overflows, causing underallocation of an output buffer leading to an out of bounds write.
NSS was susceptible to a timing side-channel attack when performing RSA decryption. This attack could potentially allow an attacker to recover the private data.
The permission prompt input delay could have expired while the window is not in focus, which made the prompt vulnerable to clickjacking by malicious websites.
Using a markup injection an attacker could have stolen nonce values. This could have been used to bypass strict content security policies.
A missing delay on when pointer lock was used could have allowed a malicious page to trick a user into granting permissions.
If an attacker could find a way to trigger a particular code path in SafeRefPtr, it could have triggered a crash or potentially be leveraged to achieve code execution.
Data was not properly sanitized when decoding a QUIC ACK frame; this could have led to unrestricted memory consumption and a crash.
Memory safety bugs present in Firefox 123, Firefox ESR 115.8, and Thunderbird 115.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
Memory safety bugs present in Firefox 123. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.
"
Mozilla Firefox;61.0.1;True;['CVE-2020-26950'];https://www.rapid7.com/db/modules/exploit/multi/browser/firefox_jit_use_after_free/;"This modules exploits CVE-2020-26950, a use after free exploit in Firefox. The MCallGetProperty opcode can be emitted with unmet assumptions resulting in an exploitable use-after-free condition. This exploit uses a somewhat novel technique of spraying ArgumentsData structures in order to construct primitives. The shellcode is forced into executable memory via the JIT compiler, and executed by writing to the JIT region pointer. This exploit does not contain a sandbox escape, so firefox must be run with the MOZ_DISABLE_CONTENT_SANDBOX environment variable set, in order for the shellcode to run successfully. This vulnerability affects Firefox < 82.0.3, Firefox ESR < 78.4.1, and Thunderbird < 78.4.2, however only Firefox <= 79 is supported as a target. Additional work may be needed to support other versions such as Firefox 82.0.1.
"
Mozilla Firefox;61.0.1;True;['CVE-2019-9810'];https://packetstormsecurity.com/files/152251/Firefox-Array.prototype.slice-Buffer-Overflow.html;
Mozilla Firefox;61.0.1;True;['CVE-2019-9791'];https://packetstormsecurity.com/files/152266/SpiderMonkey-IonMonkey-Type-Confusion.html;
Mozilla Firefox;61.0.1;True;['CVE-2019-9813'];https://packetstormsecurity.com/files/152304/SpiderMonkey-IonMonkey-Type-Confusion.html;
Mozilla Firefox;61.0.1;True;['CVE-2019-9792'];https://packetstormsecurity.com/files/153106/Spidermonkey-IonMonkey-JS_OPTIMIZED_OUT-Value-Leak.html;
Mozilla Firefox;61.0.1;True;['CVE-2018-12375'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12375;Memory safety bugs present in Firefox 61. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 62.
Mozilla Firefox;61.0.1;True;['CVE-2018-12376'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12376;Memory safety bugs present in Firefox 61 and Firefox ESR 60.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 62, Firefox ESR < 60.2, and Thunderbird < 60.2.1.
Mozilla Firefox;61.0.1;True;['CVE-2018-12377'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12377;A use-after-free vulnerability can occur when refresh driver timers are refreshed in some circumstances during shutdown when the timer is deleted while still in use. This results in a potentially exploitable crash. This vulnerability affects Firefox < 62, Firefox ESR < 60.2, and Thunderbird < 60.2.1.
Mozilla Firefox;61.0.1;True;['CVE-2018-12378'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12378;A use-after-free vulnerability can occur when an IndexedDB index is deleted while still in use by JavaScript code that is providing payload values to be stored. This results in a potentially exploitable crash. This vulnerability affects Firefox < 62, Firefox ESR < 60.2, and Thunderbird < 60.2.1.
Mozilla Firefox;61.0.1;True;['CVE-2018-12379'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12379;When the Mozilla Updater opens a MAR format file which contains a very long item filename, an out-of-bounds write can be triggered, leading to a potentially exploitable crash. This requires running the Mozilla Updater manually on the local system with the malicious MAR file in order to occur. This vulnerability affects Firefox < 62, Firefox ESR < 60.2, and Thunderbird < 60.2.1.
Mozilla Firefox;61.0.1;True;['CVE-2018-12381'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12381;Manually dragging and dropping an Outlook email message into the browser will trigger a page navigation when the message's mail columns are incorrectly interpreted as a URL. *Note: this issue only affects Windows operating systems with Outlook installed. Other operating systems are not affected.*. This vulnerability affects Firefox ESR < 60.2 and Firefox < 62.
Mozilla Firefox;61.0.1;True;['CVE-2018-12383'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12383;If a user saved passwords before Firefox 58 and then later set a master password, an unencrypted copy of these passwords is still accessible. This is because the older stored password file was not deleted when the data was copied to a new format starting in Firefox 58. The new master password is added only on the new file. This could allow the exposure of stored password data outside of user expectations. This vulnerability affects Firefox < 62, Firefox ESR < 60.2.1, and Thunderbird < 60.2.1.
Mozilla Firefox;61.0.1;True;['CVE-2018-12385'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12385;A potentially exploitable crash in TransportSecurityInfo used for SSL can be triggered by data stored in the local cache in the user profile directory. This issue is only exploitable in combination with another vulnerability allowing an attacker to write data into the local cache or from locally installed malware. This issue also triggers a non-exploitable startup crash for users switching between the Nightly and Release versions of Firefox if the same profile is used. This vulnerability affects Thunderbird < 60.2.1, Firefox ESR < 60.2.1, and Firefox < 62.0.2.
Mozilla Firefox;61.0.1;True;['CVE-2018-12386'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12386;A vulnerability in register allocation in JavaScript can lead to type confusion, allowing for an arbitrary read and write. This leads to remote code execution inside the sandboxed content process when triggered. This vulnerability affects Firefox ESR < 60.2.2 and Firefox < 62.0.3.
Mozilla Firefox;61.0.1;True;['CVE-2018-12387'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12387;A vulnerability where the JavaScript JIT compiler inlines Array.prototype.push with multiple arguments that results in the stack pointer being off by 8 bytes after a bailout. This leaks a memory address to the calling function which can be used as part of an exploit inside the sandboxed content process. This vulnerability affects Firefox ESR < 60.2.2 and Firefox < 62.0.3.
Mozilla Firefox;61.0.1;True;['CVE-2018-12388'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12388;Mozilla developers and community members reported memory safety bugs present in Firefox 62. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12390'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12390;Mozilla developers and community members reported memory safety bugs present in Firefox 62 and Firefox ESR 60.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 63, Firefox ESR < 60.3, and Thunderbird < 60.3.
Mozilla Firefox;61.0.1;True;['CVE-2018-12391'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12391;During HTTP Live Stream playback on Firefox for Android, audio data can be accessed across origins in violation of security policies. Because the problem is in the underlying Android service, this issue is addressed by treating all HLS streams as cross-origin and opaque to access. *Note: this issue only affects Firefox for Android. Desktop versions of Firefox are unaffected.*. This vulnerability affects Firefox < 63, Firefox ESR < 60.3, and Thunderbird < 60.3.
Mozilla Firefox;61.0.1;True;['CVE-2018-12392'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12392;When manipulating user events in nested loops while opening a document through script, it is possible to trigger a potentially exploitable crash due to poor event handling. This vulnerability affects Firefox < 63, Firefox ESR < 60.3, and Thunderbird < 60.3.
Mozilla Firefox;61.0.1;True;['CVE-2018-12393'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12393;A potential vulnerability was found in 32-bit builds where an integer overflow during the conversion of scripts to an internal UTF-16 representation could result in allocating a buffer too small for the conversion. This leads to a possible out-of-bounds write. *Note: 64-bit builds are not vulnerable to this issue.*. This vulnerability affects Firefox < 63, Firefox ESR < 60.3, and Thunderbird < 60.3.
Mozilla Firefox;61.0.1;True;['CVE-2018-12395'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12395;By rewriting the Host: request headers using the webRequest API, a WebExtension can bypass domain restrictions through domain fronting. This would allow access to domains that share a host that are otherwise restricted. This vulnerability affects Firefox ESR < 60.3 and Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12396'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12396;A vulnerability where a WebExtension can run content scripts in disallowed contexts following navigation or other events. This allows for potential privilege escalation by the WebExtension on sites where content scripts should not be run. This vulnerability affects Firefox ESR < 60.3 and Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12397'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12397;"A WebExtension can request access to local files without the warning prompt stating that the extension will ""Access your data for all websites"" being displayed to the user. This allows extensions to run content scripts in local pages without permission warnings when a local file is opened. This vulnerability affects Firefox ESR < 60.3 and Firefox < 63."
Mozilla Firefox;61.0.1;True;['CVE-2018-12398'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12398;By using the reflected URL in some special resource URIs, such as chrome:, it is possible to inject stylesheets and bypass Content Security Policy (CSP). This vulnerability affects Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12399'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12399;When a new protocol handler is registered, the API accepts a title argument which can be used to mislead users about which domain is registering the new protocol. This may result in the user approving a protocol handler that they otherwise would not have. This vulnerability affects Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12400'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12400;In private browsing mode on Firefox for Android, favicons are cached in the cache/icons folder as they are in non-private mode. This allows information leakage of sites visited during private browsing sessions. *Note: this issue only affects Firefox for Android. Desktop versions of Firefox are unaffected.*. This vulnerability affects Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12401'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12401;Some special resource URIs will cause a non-exploitable crash if loaded with optional parameters following a '?' in the parsed string. This could lead to denial of service (DOS) attacks. This vulnerability affects Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12402'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12402;"The internal WebBrowserPersist code does not use correct origin context for a resource being saved. This manifests when sub-resources are loaded as part of ""Save Page As..."" functionality. For example, a malicious page could recover a visitor's Windows username and NTLM hash by including resources otherwise unreachable to the malicious page, if they can convince the visitor to save the complete web page. Similarly, SameSite cookies are sent on cross-origin requests when the ""Save Page As..."" menu item is selected to save a page, which can result in saving the wrong version of resources based on those cookies. This vulnerability affects Firefox < 63."
Mozilla Firefox;61.0.1;True;['CVE-2018-12403'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12403;If a site is loaded over a HTTPS connection but loads a favicon resource over HTTP, the mixed content warning is not displayed to users. This vulnerability affects Firefox < 63.
Mozilla Firefox;61.0.1;True;['CVE-2018-12405'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12405;Mozilla developers and community members reported memory safety bugs present in Firefox 63 and Firefox ESR 60.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Thunderbird < 60.4, Firefox ESR < 60.4, and Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-12406'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12406;Mozilla developers and community members reported memory safety bugs present in Firefox 63. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-12407'];https://www.prio-n.com/kb/vulnerability/CVE-2018-12407;A buffer overflow occurs when drawing and validating elements with the ANGLE graphics library, used for WebGL content, when working with the VertexBuffer11 module. This results in a potentially exploitable crash. This vulnerability affects Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18492'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18492;A use-after-free vulnerability can occur after deleting a selection element due to a weak reference to the select element in the options collection. This results in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.4, Firefox ESR < 60.4, and Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18493'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18493;A buffer overflow can occur in the Skia library during buffer offset calculations with hardware accelerated canvas 2D actions due to the use of 32-bit calculations instead of 64-bit. This results in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.4, Firefox ESR < 60.4, and Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18494'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18494;A same-origin policy violation allowing the theft of cross-origin URL entries when using the Javascript location property to cause a redirection to another site using performance.getEntries(). This is a same-origin policy violation and could allow for data theft. This vulnerability affects Thunderbird < 60.4, Firefox ESR < 60.4, and Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18495'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18495;WebExtension content scripts can be loaded into about: pages in some circumstances, in violation of the permissions granted to extensions. This could allow an extension to interfere with the loading and usage of these pages and use capabilities that were intended to be restricted from extensions. This vulnerability affects Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18496'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18496;When the RSS Feed preview about:feeds page is framed within another page, it can be used in concert with scripted content for a clickjacking attack that confuses users into downloading and executing an executable file from a temporary directory. *Note: This issue only affects Windows operating systems. Other operating systems are not affected.*. This vulnerability affects Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18497'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18497;Limitations on the URIs allowed to WebExtensions by the browser.windows.create API can be bypassed when a pipe in the URL field is used within the extension to load multiple pages as a single argument. This could allow a malicious WebExtension to open privileged about: or file: locations. This vulnerability affects Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18498'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18498;A potential vulnerability leading to an integer overflow can occur during buffer size calculations for images when a raw value is used instead of the checked value. This leads to a possible out-of-bounds write. This vulnerability affects Thunderbird < 60.4, Firefox ESR < 60.4, and Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2018-18499'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18499;"A same-origin policy violation allowing the theft of cross-origin URL entries when using a meta http-equiv=""refresh"" on a page to cause a redirection to another site using performance.getEntries(). This is a same-origin policy violation and could allow for data theft. This vulnerability affects Firefox < 62, Firefox ESR < 60.2, and Thunderbird < 60.2.1."
Mozilla Firefox;61.0.1;True;['CVE-2018-18500'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18500;A use-after-free vulnerability can occur while parsing an HTML5 stream in concert with custom HTML elements. This results in the stream parser object being freed while still in use, leading to a potentially exploitable crash. This vulnerability affects Thunderbird < 60.5, Firefox ESR < 60.5, and Firefox < 65.
Mozilla Firefox;61.0.1;True;['CVE-2018-18501'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18501;Mozilla developers and community members reported memory safety bugs present in Firefox 64 and Firefox ESR 60.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Thunderbird < 60.5, Firefox ESR < 60.5, and Firefox < 65.
Mozilla Firefox;61.0.1;True;['CVE-2018-18502'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18502;Mozilla developers and community members reported memory safety bugs present in Firefox 64. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 65.
Mozilla Firefox;61.0.1;True;['CVE-2018-18503'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18503;When JavaScript is used to create and manipulate an audio buffer, a potentially exploitable crash may occur because of a compartment mismatch in some situations. This vulnerability affects Firefox < 65.
Mozilla Firefox;61.0.1;True;['CVE-2018-18504'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18504;A crash and out-of-bounds read can occur when the buffer of a texture client is freed while it is still in use during graphic operations. This results is a potentially exploitable crash and the possibility of reading from the memory of the freed buffers. This vulnerability affects Firefox < 65.
Mozilla Firefox;61.0.1;True;['CVE-2011-3079', 'CVE-2018-18505'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18505;An earlier fix for an Inter-process Communication (IPC) vulnerability, CVE-2011-3079, added authentication to communication between IPC endpoints and server parents during IPC process creation. This authentication is insufficient for channels created after the IPC process is started, leading to the authentication not being correctly applied to later channels. This could allow for a sandbox escape through IPC channels due to lack of message validation in the listener process. This vulnerability affects Thunderbird < 60.5, Firefox ESR < 60.5, and Firefox < 65.
Mozilla Firefox;61.0.1;True;['CVE-2018-18506'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18506;When proxy auto-detection is enabled, if a web server serves a Proxy Auto-Configuration (PAC) file or if a PAC file is loaded locally, this PAC file can specify that requests to the localhost are to be sent through the proxy to another server. This behavior is disallowed by default when a proxy is manually configured, but when enabled could allow for attacks on services and tools that bind to the localhost for networked behavior if they are accessed through browsing. This vulnerability affects Firefox < 65.
Mozilla Firefox;61.0.1;True;['CVE-2018-18510'];https://www.prio-n.com/kb/vulnerability/CVE-2018-18510;The about:crashcontent and about:crashparent pages can be triggered by web content. These pages are used to crash the loaded page or the browser for test purposes. This issue allows for a non-persistent denial of service (DOS) attack by a malicious site which links to these pages. This vulnerability affects Firefox < 64.
Mozilla Firefox;61.0.1;True;['CVE-2019-11691'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11691;A use-after-free vulnerability can occur when working with XMLHttpRequest (XHR) in an event loop, causing the XHR main thread to be called after it has been freed. This results in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-11692'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11692;A use-after-free vulnerability can occur when listeners are removed from the event listener manager while still in use, resulting in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-11693'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11693;The bufferdata function in WebGL is vulnerable to a buffer overflow with specific graphics drivers on Linux. This could result in malicious content freezing a tab or triggering a potentially exploitable crash. *Note: this issue only occurs on Linux. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-11694'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11694;A vulnerability exists in the Windows sandbox where an uninitialized value in memory can be leaked to a renderer from a broker when making a call to access an otherwise unavailable file. This results in the potential leaking of information stored at that memory location. *Note: this issue only occurs on Windows. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-11695'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11695;A custom cursor defined by scripting on a site can position itself over the addressbar to spoof the actual cursor when it should not be allowed outside of the primary web content area. This could be used by a malicious site to trick users into clicking on permission prompts, doorhanger notifications, or other buttons inadvertently if the location is spoofed over the user interface. This vulnerability affects Firefox < 67.
Mozilla Firefox;61.0.1;True;['CVE-2019-11696'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11696;"Files with the .JNLP extension used for ""Java web start"" applications are not treated as executable content for download prompts even though they can be executed if Java is installed on the local system. This could allow users to mistakenly launch an executable binary locally. This vulnerability affects Firefox < 67."
Mozilla Firefox;61.0.1;True;['CVE-2019-11697'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11697;"If the ALT and ""a"" keys are pressed when users receive an extension installation prompt, the extension will be installed without the install prompt delay that keeps the prompt visible in order for users to accept or decline the installation. A malicious web page could use this with spoofing on the page to trick users into installing a malicious extension. This vulnerability affects Firefox < 67."
Mozilla Firefox;61.0.1;True;['CVE-2019-11698'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11698;If a crafted hyperlink is dragged and dropped to the bookmark bar or sidebar and the resulting bookmark is subsequently dragged and dropped into the web content area, an arbitrary query of a user's browser history can be run and transmitted to the content page via drop event data. This allows for the theft of browser history by a malicious site. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-11699'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11699;A malicious page can briefly cause the wrong name to be highlighted as the domain name in the addressbar during page navigations. This could result in user confusion of which site is currently loaded for spoofing attacks. This vulnerability affects Firefox < 67.
Mozilla Firefox;61.0.1;True;['CVE-2019-11700'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11700;A hyperlink using the res: protocol can be used to open local files at a known location in Internet Explorer if a user approves execution when prompted. *Note: this issue only occurs on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 67.
Mozilla Firefox;61.0.1;True;['CVE-2019-11701'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11701;The default webcal: protocol handler will load a web site vulnerable to cross-site scripting (XSS) attacks. This default was left in place as a legacy feature and has now been removed. *Note: this issue only affects users with an account on the vulnerable service. Other users are unaffected.*. This vulnerability affects Firefox < 67.
Mozilla Firefox;61.0.1;True;['CVE-2019-11702'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11702;A hyperlink using protocols associated with Internet Explorer, such as IE.HTTP:, can be used to open local files at a known location with Internet Explorer if a user approves execution when prompted. *Note: this issue only occurs on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 67.0.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11708'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11708;Insufficient vetting of parameters passed with the Prompt:Open IPC message between child and parent processes can result in the non-sandboxed parent process opening web content chosen by a compromised child process. When combined with additional vulnerabilities this could result in executing arbitrary code on the user's computer. This vulnerability affects Firefox ESR < 60.7.2, Firefox < 67.0.4, and Thunderbird < 60.7.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11709'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11709;Mozilla developers and community members reported memory safety bugs present in Firefox 67 and Firefox ESR 60.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11710'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11710;Mozilla developers and community members reported memory safety bugs present in Firefox 67. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11711'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11711;When an inner window is reused, it does not consider the use of document.domain for cross-origin protections. If pages on different subdomains ever cooperatively use document.domain, then either page can abuse this to inject script into arbitrary pages on the other subdomain, even those that did not use document.domain to relax their origin security. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11712'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11712;POST requests made by NPAPI plugins, such as Flash, that receive a status 308 redirect response can bypass CORS requirements. This can allow an attacker to perform Cross-Site Request Forgery (CSRF) attacks. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11713'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11713;A use-after-free vulnerability can occur in HTTP/2 when a cached HTTP/2 stream is closed while still in use, resulting in a potentially exploitable crash. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11714'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11714;Necko can access a child on the wrong thread during UDP connections, resulting in a potentially exploitable crash in some instances. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11715'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11715;Due to an error while parsing page content, it is possible for properly sanitized user input to be misinterpreted and lead to XSS hazards on web sites in certain circumstances. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11716'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11716;Until explicitly accessed by script, window.globalThis is not enumerable and, as a result, is not visible to code such as Object.getOwnPropertyNames(window). Sites that deploy a sandboxing that depends on enumerating and freezing access to the window object may miss this, allowing their sandboxes to be bypassed. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11717'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11717;"A vulnerability exists where the caret (""^"") character is improperly escaped constructing some URIs due to it being used as a separator, allowing for possible spoofing of origin attributes. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8."
Mozilla Firefox;61.0.1;True;['CVE-2019-11718'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11718;Activity Stream can display content from sent from the Snippet Service website. This content is written to innerHTML on the Activity Stream page without sanitization, allowing for a potential access to other information available to the Activity Stream, such as browsing history, if the Snipper Service were compromised. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11719'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11719;When importing a curve25519 private key in PKCS#8format with leading 0x00 bytes, it is possible to trigger an out-of-bounds read in the Network Security Services (NSS) library. This could lead to information disclosure. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11720'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11720;Some unicode characters are incorrectly treated as whitespace during the parsing of web content instead of triggering parsing errors. This allows malicious code to then be processed, evading cross-site scripting (XSS) filtering. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11721'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11721;The unicode latin 'kra' character can be used to spoof a standard 'k' character in the addressbar. This allows for domain spoofing attacks as do not display as punycode text, allowing for user confusion. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11723'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11723;"A vulnerability exists during the installation of add-ons where the initial fetch ignored the origin attributes of the browsing context. This could leak cookies in private browsing mode or across different ""containers"" for people who use the Firefox Multi-Account Containers Web Extension. This vulnerability affects Firefox < 68."
Mozilla Firefox;61.0.1;True;['CVE-2019-11724'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11724;Application permissions give additional remote troubleshooting permission to the site input.mozilla.org, which has been retired and now redirects to another site. This additional permission is unnecessary and is a potential vector for malicious attacks. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11725'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11725;When a user navigates to site marked as unsafe by the Safebrowsing API, warning messages are displayed and navigation is interrupted but resources from the same site loaded through websockets are not blocked, leading to the loading of unsafe resources and bypassing safebrowsing protections. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11727'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11727;A vulnerability exists where it possible to force Network Security Services (NSS) to sign CertificateVerify with PKCS#1 v1.5 signatures when those are the only ones advertised by server in CertificateRequest in TLS 1.3. PKCS#1 v1.5 signatures should not be used for TLS 1.3 messages. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11728'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11728;The HTTP Alternative Services header, Alt-Svc, can be used by a malicious site to scan all TCP ports of any host that the accessible to a user when web content is loaded. This vulnerability affects Firefox < 68.
Mozilla Firefox;61.0.1;True;['CVE-2019-11729'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11729;Empty or malformed p256-ECDH public keys may trigger a segmentation fault due values being improperly sanitized before being copied into memory and used. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11730'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11730;A vulnerability exists where if a user opens a locally saved HTML file, this file can use file: URIs to access other files in the same directory or sub-directories if the names are known or guessed. The Fetch API can then be used to read the contents of any files stored in these directories and they may uploaded to a server. It was demonstrated that in combination with a popular Android messaging app, if a malicious HTML attachment is sent to a user and they opened that attachment in Firefox, due to that app's predictable pattern for locally-saved file names, it is possible to read attachments the victim received from other correspondents. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-11733'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11733;When a master password is set, it is required to be entered again before stored passwords can be accessed in the 'Saved Logins' dialog. It was found that locally stored passwords can be copied to the clipboard thorough the 'copy password' context menu item without re-entering the master password if the master password had been previously entered in the same session, allowing for potential theft of stored passwords. This vulnerability affects Firefox < 68.0.2 and Firefox ESR < 68.0.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11734'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11734;Mozilla developers and community members reported memory safety bugs present in Firefox 68. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 69.
Mozilla Firefox;61.0.1;True;['CVE-2019-11735'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11735;Mozilla developers and community members reported memory safety bugs present in Firefox 68 and Firefox ESR 68. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11736'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11736;The Mozilla Maintenance Service does not guard against files being hardlinked to another file in the updates directory, allowing for the replacement of local files, including the Maintenance Service executable, which is run with privileged access. Additionally, there was a race condition during checks for junctions and symbolic links by the Maintenance Service, allowing for potential local file and directory manipulation to be undetected in some circumstances. This allows for potential privilege escalation by a user with unprivileged local access. <br>*Note: These attacks requires local system access and only affects Windows. Other operating systems are not affected.*. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11737'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11737;If a wildcard ('*') is specified for the host in Content Security Policy (CSP) directives, any port or path restriction of the directive will be ignored, leading to CSP directives not being properly applied to content. This vulnerability affects Firefox < 69.
Mozilla Firefox;61.0.1;True;['CVE-2019-11738'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11738;If a Content Security Policy (CSP) directive is defined that uses a hash-based source that takes the empty string as input, execution of any javascript: URIs will be allowed. This could allow for malicious JavaScript content to be run, bypassing CSP permissions. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11740'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11740;Mozilla developers and community members reported memory safety bugs present in Firefox 68, Firefox ESR 68, and Firefox 60.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 69, Thunderbird < 68.1, Thunderbird < 60.9, Firefox ESR < 60.9, and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11741'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11741;A compromised sandboxed content process can perform a Universal Cross-site Scripting (UXSS) attack on content from any site it can cause to be loaded in the same process. Because addons.mozilla.org and accounts.firefox.com have close ties to the Firefox product, malicious manipulation of these sites within the browser can potentially be used to modify a user's Firefox configuration. These two sites will now be isolated into their own process and not allowed to be loaded in a standard content process. This vulnerability affects Firefox < 69.
Mozilla Firefox;61.0.1;True;['CVE-2019-11742'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11742;"A same-origin policy violation occurs allowing the theft of cross-origin images through a combination of SVG filters and a &lt;canvas&gt; element due to an error in how same-origin policy is applied to cached image content. The resulting same-origin policy violation could allow for data theft. This vulnerability affects Firefox < 69, Thunderbird < 68.1, Thunderbird < 60.9, Firefox ESR < 60.9, and Firefox ESR < 68.1."
Mozilla Firefox;61.0.1;True;['CVE-2019-11743'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11743;"Navigation events were not fully adhering to the W3C's ""Navigation-Timing Level 2"" draft specification in some instances for the unload event, which restricts access to detailed timing attributes to only be same-origin. This resulted in potential cross-origin information exposure of history through timing side-channel attacks. This vulnerability affects Firefox < 69, Thunderbird < 68.1, Thunderbird < 60.9, Firefox ESR < 60.9, and Firefox ESR < 68.1."
Mozilla Firefox;61.0.1;True;['CVE-2019-11744'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11744;"Some HTML elements, such as &lt;title&gt; and &lt;textarea&gt;, can contain literal angle brackets without treating them as markup. It is possible to pass a literal closing tag to .innerHTML on these elements, and subsequent content after that will be parsed as if it were outside the tag. This can lead to XSS if a site does not filter user input as strictly for these elements as it does for other elements. This vulnerability affects Firefox < 69, Thunderbird < 68.1, Thunderbird < 60.9, Firefox ESR < 60.9, and Firefox ESR < 68.1."
Mozilla Firefox;61.0.1;True;['CVE-2019-11745'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11745;When encrypting with a block cipher, if a call to NSC_EncryptUpdate was made with data smaller than the block size, a small out of bounds write could occur. This could have caused heap corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-11746'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11746;A use-after-free vulnerability can occur while manipulating video elements if the body is freed while still in use. This results in a potentially exploitable crash. This vulnerability affects Firefox < 69, Thunderbird < 68.1, Thunderbird < 60.9, Firefox ESR < 60.9, and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11747'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11747;"The ""Forget about this site"" feature in the History pane is intended to remove all saved user data that indicates a user has visited a site. This includes removing any HTTP Strict Transport Security (HSTS) settings received from sites that use it. Due to a bug, sites on the pre-load list also have their HSTS setting removed. On the next visit to that site if the user specifies an http: URL rather than secure https: they will not be protected by the pre-loaded HSTS setting. After that visit the site's HSTS setting will be restored. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1."
Mozilla Firefox;61.0.1;True;['CVE-2019-11748'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11748;WebRTC in Firefox will honor persisted permissions given to sites for access to microphone and camera resources even when in a third-party context. In light of recent high profile vulnerabilities in other software, a decision was made to no longer persist these permissions. This avoids the possibility of trusted WebRTC resources being invisibly embedded in web content and abusing permissions previously given by users. Users will now be prompted for permissions on each use. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11749'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11749;A vulnerability exists in WebRTC where malicious web content can use probing techniques on the getUserMedia API using constraints to reveal device properties of cameras on the system without triggering a user prompt or notification. This allows for the potential fingerprinting of users. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11750'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11750;A type confusion vulnerability exists in Spidermonkey, which results in a non-exploitable crash. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11751'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11751;Logging-related command line parameters are not properly sanitized when Firefox is launched by another program, such as when a user clicks on malicious links in a chat application. This can be used to write a log file to an arbitrary location such as the Windows 'Startup' folder. <br>*Note: this issue only affects Firefox on Windows operating systems.*. This vulnerability affects Firefox < 69 and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11752'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11752;It is possible to delete an IndexedDB key value and subsequently try to extract it during conversion. This results in a use-after-free and a potentially exploitable crash. This vulnerability affects Firefox < 69, Thunderbird < 68.1, Thunderbird < 60.9, Firefox ESR < 60.9, and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11753'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11753;The Firefox installer allows Firefox to be installed to a custom user writable location, leaving it unprotected from manipulation by unprivileged users or malware. If the Mozilla Maintenance Service is manipulated to update this unprotected location and the updated maintenance service in the unprotected location has been altered, the altered maintenance service can run with elevated privileges during the update process due to a lack of integrity checks. This allows for privilege escalation if the executable has been replaced locally. <br>*Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.*. This vulnerability affects Firefox < 69, Firefox ESR < 60.9, and Firefox ESR < 68.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11754'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11754;When the pointer lock is enabled by a website though requestPointerLock(), no user notification is given. This could allow a malicious website to hijack the mouse pointer and confuse users. This vulnerability affects Firefox < 69.0.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-11756'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11756;Improper refcounting of soft token session objects could cause a use-after-free and crash (likely limited to a denial of service). This vulnerability affects Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-11757'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11757;When following the value's prototype chain, it was possible to retain a reference to a locale, delete it, and subsequently reference it. This resulted in a use-after-free and a potentially exploitable crash. This vulnerability affects Firefox < 70, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11758'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11758;Mozilla community member Philipp reported a memory safety bug present in Firefox 68 when 360 Total Security was installed. This bug showed evidence of memory corruption in the accessibility engine and we presume that with enough effort that it could be exploited to run arbitrary code. This vulnerability affects Firefox < 69, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11759'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11759;An attacker could have caused 4 bytes of HMAC output to be written past the end of a buffer stored on the stack. This could be used by an attacker to execute arbitrary code or more likely lead to a crash. This vulnerability affects Firefox < 70, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11760'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11760;A fixed-size stack buffer could overflow in nrappkit when doing WebRTC signaling. This resulted in a potentially exploitable crash in some instances. This vulnerability affects Firefox < 70, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11761'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11761;By using a form with a data URI it was possible to gain access to the privileged JSONView object that had been cloned into content. Impact from exposing this object appears to be minimal, however it was a bypass of existing defense in depth mechanisms. This vulnerability affects Firefox < 70, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11762'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11762;If two same-origin documents set document.domain differently to become cross-origin, it was possible for them to call arbitrary DOM methods/getters/setters on the now-cross-origin window. This vulnerability affects Firefox < 70, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11763'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11763;Failure to correctly handle null bytes when processing HTML entities resulted in Firefox incorrectly parsing these entities. This could have led to HTML comment text being treated as HTML which could have led to XSS in a web application under certain conditions. It could have also led to HTML entities being masked from filters - enabling the use of entities to mask the actual characters of interest from filters. This vulnerability affects Firefox < 70, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11764'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11764;Mozilla developers and community members reported memory safety bugs present in Firefox 69 and Firefox ESR 68.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 70, Thunderbird < 68.2, and Firefox ESR < 68.2.
Mozilla Firefox;61.0.1;True;['CVE-2019-11765'];https://www.prio-n.com/kb/vulnerability/CVE-2019-11765;A compromised content process could send a message to the parent process that would cause the 'Click to Play' permission prompt to be shown. However, due to lack of validation from the parent process, if the user accepted the permission request an attacker-controlled permission would be granted rather than the 'Click to Play' permission. This vulnerability affects Firefox < 70.
Mozilla Firefox;61.0.1;True;['CVE-2019-17000'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17000;An object tag with a data URI did not correctly inherit the document's Content Security Policy. This allowed a CSP bypass in a cross-origin frame if the document's policy explicitly allowed data: URIs. This vulnerability affects Firefox < 70.
Mozilla Firefox;61.0.1;True;['CVE-2019-17002'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17002;If upgrade-insecure-requests was specified in the Content Security Policy, and a link was dragged and dropped from that page, the link was not upgraded to https. This vulnerability affects Firefox < 70.
Mozilla Firefox;61.0.1;True;['CVE-2019-17005'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17005;"The plain text serializer used a fixed-size array for the number of <ol> elements it could process; however it was possible to overflow the static-sized array leading to memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71."
Mozilla Firefox;61.0.1;True;['CVE-2019-17008'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17008;When using nested workers, a use-after-free could occur during worker destruction. This resulted in a potentially exploitable crash. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-17009'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17009;"When running, the updater service wrote status and log files to an unrestricted location; potentially allowing an unprivileged process to locate and exploit a vulnerability in file handling in the updater service. *Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.*. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71."
Mozilla Firefox;61.0.1;True;['CVE-2019-17010'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17010;Under certain conditions, when checking the Resist Fingerprinting preference during device orientation checks, a race condition could have caused a use-after-free and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-17011'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17011;Under certain conditions, when retrieving a document from a DocShell in the antitracking code, a race condition could cause a use-after-free condition and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-17012'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17012;Mozilla developers reported memory safety bugs present in Firefox 70 and Firefox ESR 68.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 68.3, Firefox ESR < 68.3, and Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-17013'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17013;Mozilla developers reported memory safety bugs present in Firefox 70. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-17014'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17014;If an image had not loaded correctly (such as when it is not actually an image), it could be dragged and dropped cross-domain, resulting in a cross-origin information leak. This vulnerability affects Firefox < 71.
Mozilla Firefox;61.0.1;True;['CVE-2019-17015'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17015;During the initialization of a new content process, a pointer offset can be manipulated leading to memory corruption and a potentially exploitable crash in the parent process. *Note: this issue only occurs on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 68.4 and Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17016'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17016;"When pasting a &lt;style&gt; tag from the clipboard into a rich text editor, the CSS sanitizer incorrectly rewrites a @namespace rule. This could allow for injection into certain types of websites resulting in data exfiltration. This vulnerability affects Firefox ESR < 68.4 and Firefox < 72."
Mozilla Firefox;61.0.1;True;['CVE-2019-17017'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17017;Due to a missing case handling object types, a type confusion vulnerability could occur, resulting in a crash. We presume that with enough effort that it could be exploited to run arbitrary code. This vulnerability affects Firefox ESR < 68.4 and Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17018'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17018;When in Private Browsing Mode on Windows 10, the Windows keyboard may retain word suggestions to improve the accuracy of the keyboard. This vulnerability affects Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17019'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17019;When Python was installed on Windows, a python file being served with the MIME type of text/plain could be executed by Python instead of being opened as a text file when the Open option was selected upon download. *Note: this issue only occurs on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17020'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17020;If an XML file is served with a Content Security Policy and the XML file includes an XSL stylesheet, the Content Security Policy will not be applied to the contents of the XSL stylesheet. If the XSL sheet e.g. includes JavaScript, it would bypass any of the restrictions of the Content Security Policy applied to the XML document. This vulnerability affects Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17021'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17021;During the initialization of a new content process, a race condition occurs that can allow a content process to disclose heap addresses from the parent process. *Note: this issue only occurs on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 68.4 and Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17022'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17022;"When pasting a &lt;style&gt; tag from the clipboard into a rich text editor, the CSS sanitizer does not escape &lt; and &gt; characters. Because the resulting string is pasted directly into the text node of the element this does not result in a direct injection into the webpage; however, if a webpage subsequently copies the node's innerHTML, assigning it to another innerHTML, this would result in an XSS vulnerability. Two WYSIWYG editors were identified with this behavior, more may exist. This vulnerability affects Firefox ESR < 68.4 and Firefox < 72."
Mozilla Firefox;61.0.1;True;['CVE-2019-17023'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17023;After a HelloRetryRequest has been sent, the client may negotiate a lower protocol that TLS 1.3, resulting in an invalid state transition in the TLS State Machine. If the client gets into this state, incoming Application Data records will be ignored. This vulnerability affects Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17024'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17024;Mozilla developers reported memory safety bugs present in Firefox 71 and Firefox ESR 68.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 68.4 and Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17025'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17025;Mozilla developers reported memory safety bugs present in Firefox 71. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 72.
Mozilla Firefox;61.0.1;True;['CVE-2019-17026'];https://www.prio-n.com/kb/vulnerability/CVE-2019-17026;Incorrect alias information in IonMonkey JIT compiler for setting array elements could lead to a type confusion. We are aware of targeted attacks in the wild abusing this flaw. This vulnerability affects Firefox ESR < 68.4.1, Thunderbird < 68.4.1, and Firefox < 72.0.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-25136'];https://www.prio-n.com/kb/vulnerability/CVE-2019-25136;A compromised child process could have injected XBL Bindings into privileged CSS rules, resulting in arbitrary code execution and a sandbox escape. This vulnerability affects Firefox < 70.
Mozilla Firefox;61.0.1;True;['CVE-2019-9788'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9788;Mozilla developers and community members reported memory safety bugs present in Firefox 65, Firefox ESR 60.5, and Thunderbird 60.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9789'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9789;Mozilla developers and community members reported memory safety bugs present in Firefox 65. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9790'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9790;A use-after-free vulnerability can occur when a raw pointer to a DOM element on a page is obtained using JavaScript and the element is then removed while still in use. This results in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9791'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9791;The type inference system allows the compilation of functions that can cause type confusions between arbitrary objects when compiled through the IonMonkey just-in-time (JIT) compiler and when the constructor function is entered through on-stack replacement (OSR). This allows for possible arbitrary reading and writing of objects during an exploitable crash. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9792'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9792;The IonMonkey just-in-time (JIT) compiler can leak an internal JS_OPTIMIZED_OUT magic value to the running script during a bailout. This magic value can then be used by JavaScript to achieve memory corruption, which results in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9793'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9793;A mechanism was discovered that removes some bounds checking for string, array, or typed array accesses if Spectre mitigations have been disabled. This vulnerability could allow an attacker to create an arbitrary value in compiled JavaScript, for which the range analysis will infer a fully controlled, incorrect range in circumstances where users have explicitly disabled Spectre mitigations. *Note: Spectre mitigations are currently enabled for all users by default settings.*. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9794'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9794;A vulnerability was discovered where specific command line arguments are not properly discarded during Firefox invocation as a shell handler for URLs. This could be used to retrieve and execute files whose location is supplied through these command line arguments if Firefox is configured as the default URI handler for a given URI scheme in third party applications and these applications insufficiently sanitize URL data. *Note: This issue only affects Windows operating systems. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9795'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9795;A vulnerability where type-confusion in the IonMonkey just-in-time (JIT) compiler could potentially be used by malicious JavaScript to trigger a potentially exploitable crash. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9796'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9796;A use-after-free vulnerability can occur when the SMIL animation controller incorrectly registers with the refresh driver twice when only a single registration is expected. When a registration is later freed with the removal of the animation controller element, the refresh driver incorrectly leaves a dangling pointer to the driver's observer array. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9797'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9797;Cross-origin images can be read in violation of the same-origin policy by exporting an image after using createImageBitmap to read the image and then rendering the resulting bitmap image within a canvas element. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9798'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9798;On Android systems, Firefox can load a library from APITRACE_LIB, which is writable by all users and applications. This could allow malicious third party applications to execute a man-in-the-middle attack if a malicious code was written to that location and loaded. *Note: This issue only affects Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9799'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9799;Insufficient bounds checking of data during inter-process communication might allow a compromised content process to be able to read memory from the parent process under certain conditions. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9800'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9800;Mozilla developers and community members reported memory safety bugs present in Firefox 66, Firefox ESR 60.6, and Thunderbird 60.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-9801'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9801;"Firefox will accept any registered Program ID as an external protocol handler and offer to launch this local application when given a matching URL on Windows operating systems. This should only happen if the program has specifically registered itself as a ""URL Handler"" in the Windows registry. *Note: This issue only affects Windows operating systems. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 60.6, Firefox ESR < 60.6, and Firefox < 66."
Mozilla Firefox;61.0.1;True;['CVE-2019-9802'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9802;If a Sandbox content process is compromised, it can initiate an FTP download which will then use a child process to render the downloaded data. The downloaded data can then be passed to the Chrome process with an arbitrary file length supplied by an attacker, bypassing sandbox protections and allow for a potential memory read of adjacent data from the privileged Chrome process, which may include sensitive data. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9803'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9803;The Upgrade-Insecure-Requests (UIR) specification states that if UIR is enabled through Content Security Policy (CSP), navigation to a same-origin URL must be upgraded to HTTPS. Firefox will incorrectly navigate to an HTTP URL rather than perform the security upgrade requested by the CSP in some circumstances, allowing for potential man-in-the-middle attacks on the linked resources. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9804'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9804;In Firefox Developer Tools it is possible that pasting the result of the 'Copy as cURL' command into a command shell on macOS will cause the execution of unintended additional bash script commands if the URL was maliciously crafted. This is the result of an issue with the native version of Bash on macOS. *Note: This issue only affects macOS. Other operating systems are unaffected.*. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9805'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9805;A latent vulnerability exists in the Prio library where data may be read from uninitialized memory for some functions, leading to potential memory corruption. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9806'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9806;A vulnerability exists during authorization prompting for FTP transaction where successive modal prompts are displayed and cannot be immediately dismissed. This allows for a denial of service (DOS) attack. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9807'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9807;When arbitrary text is sent over an FTP connection and a page reload is initiated, it is possible to create a modal alert message with this text as the content. This could potentially be used for social engineering attacks. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9808'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9808;"If WebRTC permission is requested from documents with data: or blob: URLs, the permission notifications do not properly display the originating domain. The notification states ""Unknown origin"" as the requestee, leading to user confusion about which site is asking for this permission. This vulnerability affects Firefox < 66."
Mozilla Firefox;61.0.1;True;['CVE-2019-9809'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9809;If the source for resources on a page is through an FTP connection, it is possible to trigger a series of modal alert messages for these resources through invalid credentials or locations. These messages cannot be immediately dismissed, allowing for a denial of service (DOS) attack. This vulnerability affects Firefox < 66.
Mozilla Firefox;61.0.1;True;['CVE-2019-9810'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9810;Incorrect alias information in IonMonkey JIT compiler for Array.prototype.slice method may lead to missing bounds check and a buffer overflow. This vulnerability affects Firefox < 66.0.1, Firefox ESR < 60.6.1, and Thunderbird < 60.6.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-9811'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9811;As part of a winning Pwn2Own entry, a researcher demonstrated a sandbox escape by installing a malicious language pack and then opening a browser feature that used the compromised translation. This vulnerability affects Firefox ESR < 60.8, Firefox < 68, and Thunderbird < 60.8.
Mozilla Firefox;61.0.1;True;['CVE-2019-9812'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9812;Given a compromised sandboxed content process due to a separate vulnerability, it is possible to escape that sandbox by loading accounts.firefox.com in that process and forcing a log-in to a malicious Firefox Sync account. Preference settings that disable the sandbox are then synchronized to the local machine and the compromised browser would restart without the sandbox if a crash is triggered. This vulnerability affects Firefox ESR < 60.9, Firefox ESR < 68.1, and Firefox < 69.
Mozilla Firefox;61.0.1;True;['CVE-2019-9813'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9813;Incorrect handling of __proto__ mutations may lead to type confusion in IonMonkey JIT code and can be leveraged for arbitrary memory read and write. This vulnerability affects Firefox < 66.0.1, Firefox ESR < 60.6.1, and Thunderbird < 60.6.1.
Mozilla Firefox;61.0.1;True;['CVE-2019-9814'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9814;Mozilla developers and community members reported memory safety bugs present in Firefox 66. Some of these bugs showed evidence of memory corruption and we presume that with enough effort that some of these could be exploited to run arbitrary code. This vulnerability affects Firefox < 67.
Mozilla Firefox;61.0.1;True;['CVE-2019-9815'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9815;If hyperthreading is not disabled, a timing attack vulnerability exists, similar to previous Spectre attacks. Apple has shipped macOS 10.14.5 with an option to disable hyperthreading in applications running untrusted code in a thread through a new sysctl. Firefox now makes use of it on the main thread and any worker threads. *Note: users need to update to macOS 10.14.5 in order to take advantage of this change.*. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-9816'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9816;A possible vulnerability exists where type confusion can occur when manipulating JavaScript objects in object groups, allowing for the bypassing of security checks within these groups. *Note: this vulnerability has only been demonstrated with UnboxedObjects, which are disabled by default on all supported releases.*. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-9817'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9817;Images from a different domain can be read using a canvas object in some circumstances. This could be used to steal image data from a different site in violation of same-origin policy. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-9818'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9818;A race condition is present in the crash generation server used to generate data for the crash reporter. This issue can lead to a use-after-free in the main process, resulting in a potentially exploitable crash and a sandbox escape. *Note: this vulnerability only affects Windows. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-9819'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9819;A vulnerability where a JavaScript compartment mismatch can occur while working with the fetch API, resulting in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-9820'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9820;A use-after-free vulnerability can occur in the chrome event handler when it is freed while still in use. This results in a potentially exploitable crash. This vulnerability affects Thunderbird < 60.7, Firefox < 67, and Firefox ESR < 60.7.
Mozilla Firefox;61.0.1;True;['CVE-2019-9821'];https://www.prio-n.com/kb/vulnerability/CVE-2019-9821;A use-after-free vulnerability can occur in AssertWorkerThread due to a race condition with shared workers. This results in a potentially exploitable crash. This vulnerability affects Firefox < 67.
Mozilla Firefox;61.0.1;True;['CVE-2020-12387'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12387;A race condition when running shutdown code for Web Worker led to a use-after-free vulnerability. This resulted in a potentially exploitable crash. This vulnerability affects Firefox ESR < 68.8, Firefox < 76, and Thunderbird < 68.8.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12388'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12388;The Firefox content processes did not sufficiently lockdown access control which could result in a sandbox escape. *Note: this issue only affects Firefox on Windows operating systems.*. This vulnerability affects Firefox ESR < 68.8 and Firefox < 76.
Mozilla Firefox;61.0.1;True;['CVE-2020-12389'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12389;The Firefox content processes did not sufficiently lockdown access control which could result in a sandbox escape. *Note: this issue only affects Firefox on Windows operating systems.*. This vulnerability affects Firefox ESR < 68.8 and Firefox < 76.
Mozilla Firefox;61.0.1;True;['CVE-2020-12390'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12390;Incorrect origin serialization of URLs with IPv6 addresses could lead to incorrect security checks. This vulnerability affects Firefox < 76.
Mozilla Firefox;61.0.1;True;['CVE-2020-12391'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12391;Documents formed using data: URLs in an OBJECT element failed to inherit the CSP of the creating context. This allowed the execution of scripts that should have been blocked, albeit with a unique opaque origin. This vulnerability affects Firefox < 76.
Mozilla Firefox;61.0.1;True;['CVE-2020-12392'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12392;The 'Copy as cURL' feature of Devtools' network tab did not properly escape the HTTP POST data of a request, which can be controlled by the website. If a user used the 'Copy as cURL' feature and pasted the command into a terminal, it could have resulted in the disclosure of local files. This vulnerability affects Firefox ESR < 68.8, Firefox < 76, and Thunderbird < 68.8.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12393'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12393;The 'Copy as cURL' feature of Devtools' network tab did not properly escape the HTTP method of a request, which can be controlled by the website. If a user used the 'Copy as cURL' feature and pasted the command into a terminal, it could have resulted in command injection and arbitrary command execution. *Note: this issue only affects Firefox on Windows operating systems.*. This vulnerability affects Firefox ESR < 68.8, Firefox < 76, and Thunderbird < 68.8.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12394'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12394;A logic flaw in our location bar implementation could have allowed a local attacker to spoof the current location by selecting a different origin and removing focus from the input element. This vulnerability affects Firefox < 76.
Mozilla Firefox;61.0.1;True;['CVE-2020-12395'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12395;Mozilla developers and community members reported memory safety bugs present in Firefox 75 and Firefox ESR 68.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 68.8, Firefox < 76, and Thunderbird < 68.8.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12396'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12396;Mozilla developers and community members reported memory safety bugs present in Firefox 75. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 76.
Mozilla Firefox;61.0.1;True;['CVE-2020-12399'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12399;NSS has shown timing differences when performing DSA signatures, which was exploitable and could eventually leak private keys. This vulnerability affects Thunderbird < 68.9.0, Firefox < 77, and Firefox ESR < 68.9.
Mozilla Firefox;61.0.1;True;['CVE-2020-12400'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12400;When converting coordinates from projective to affine, the modular inversion was not performed in constant time, resulting in a possible timing-based side channel attack. This vulnerability affects Firefox < 80 and Firefox for Android < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-12401'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12401;During ECDSA signature generation, padding applied in the nonce designed to ensure constant-time scalar multiplication was removed, resulting in variable-time execution dependent on secret data. This vulnerability affects Firefox < 80 and Firefox for Android < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-12402'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12402;During RSA key generation, bignum implementations used a variation of the Binary Extended Euclidean Algorithm which entailed significantly input-dependent flow. This allowed an attacker able to perform electromagnetic-based side channel attacks to record traces leading to the recovery of the secret primes. *Note:* An unmodified Firefox browser does not generate RSA keys in normal operation and is not affected, but products built on top of it might. This vulnerability affects Firefox < 78.
Mozilla Firefox;61.0.1;True;['CVE-2020-12405'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12405;When browsing a malicious page, a race condition in our SharedWorkerService could occur and lead to a potentially exploitable crash. This vulnerability affects Thunderbird < 68.9.0, Firefox < 77, and Firefox ESR < 68.9.
Mozilla Firefox;61.0.1;True;['CVE-2020-12406'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12406;Mozilla Developer Iain Ireland discovered a missing type check during unboxed objects removal, resulting in a crash. We presume that with enough effort that it could be exploited to run arbitrary code. This vulnerability affects Thunderbird < 68.9.0, Firefox < 77, and Firefox ESR < 68.9.
Mozilla Firefox;61.0.1;True;['CVE-2020-12407'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12407;Mozilla Developer Nicolas Silva found that when using WebRender, Firefox would under certain conditions leak arbitrary GPU memory to the visible screen. The leaked memory content was visible to the user, but not observable from web content. This vulnerability affects Firefox < 77.
Mozilla Firefox;61.0.1;True;['CVE-2020-12408'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12408;When browsing a document hosted on an IP address, an attacker could insert certain characters to flip domain and path information in the address bar. This vulnerability affects Firefox < 77.
Mozilla Firefox;61.0.1;True;['CVE-2020-12409'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12409;When using certain blank characters in a URL, they where incorrectly rendered as spaces instead of an encoded URL. This vulnerability affects Firefox < 77.
Mozilla Firefox;61.0.1;True;['CVE-2020-12410'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12410;Mozilla developers reported memory safety bugs present in Firefox 76 and Firefox ESR 68.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 68.9.0, Firefox < 77, and Firefox ESR < 68.9.
Mozilla Firefox;61.0.1;True;['CVE-2020-12411'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12411;Mozilla developers reported memory safety bugs present in Firefox 76. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 77.
Mozilla Firefox;61.0.1;True;['CVE-2020-12412'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12412;By navigating a tab using the history API, an attacker could cause the address bar to display the incorrect domain (with the https:// scheme, a blocked port number such as '1', and without a lock icon) while controlling the page contents. This vulnerability affects Firefox < 70.
Mozilla Firefox;61.0.1;True;['CVE-2020-12413'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12413;The Raccoon attack is a timing attack on DHE ciphersuites inherit in the TLS specification. To mitigate this vulnerability, Firefox disabled support for DHE ciphersuites.
Mozilla Firefox;61.0.1;True;['CVE-2020-12415'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12415;"When ""%2F"" was present in a manifest URL, Firefox's AppCache behavior may have become confused and allowed a manifest to be served from a subdirectory. This could cause the appcache to be used to service requests for the top level directory. This vulnerability affects Firefox < 78."
Mozilla Firefox;61.0.1;True;['CVE-2020-12416'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12416;A VideoStreamEncoder may have been freed in a race condition with VideoBroadcaster::AddOrUpdateSink, resulting in a use-after-free, memory corruption, and a potentially exploitable crash. This vulnerability affects Firefox < 78.
Mozilla Firefox;61.0.1;True;['CVE-2020-12417'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12417;Due to confusion about ValueTags on JavaScript Objects, an object may pass through the type barrier, resulting in memory corruption and a potentially exploitable crash. *Note: this issue only affects Firefox on ARM64 platforms.* This vulnerability affects Firefox ESR < 68.10, Firefox < 78, and Thunderbird < 68.10.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12418'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12418;Manipulating individual parts of a URL object could have caused an out-of-bounds read, leaking process memory to malicious JavaScript. This vulnerability affects Firefox ESR < 68.10, Firefox < 78, and Thunderbird < 68.10.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12419'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12419;"When processing callbacks that occurred during window flushing in the parent process, the associated window may die; causing a use-after-free condition. This could have led to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox ESR < 68.10, Firefox < 78, and Thunderbird < 68.10.0."
Mozilla Firefox;61.0.1;True;['CVE-2020-12420'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12420;When trying to connect to a STUN server, a race condition could have caused a use-after-free of a pointer, leading to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox ESR < 68.10, Firefox < 78, and Thunderbird < 68.10.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12421'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12421;When performing add-on updates, certificate chains terminating in non-built-in-roots were rejected (even if they were legitimately added by an administrator.) This could have caused add-ons to become out-of-date silently without notification to the user. This vulnerability affects Firefox ESR < 68.10, Firefox < 78, and Thunderbird < 68.10.0.
Mozilla Firefox;61.0.1;True;['CVE-2020-12422'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12422;In non-standard configurations, a JPEG image created by JavaScript could have caused an internal variable to overflow, resulting in an out of bounds write, memory corruption, and a potentially exploitable crash. This vulnerability affects Firefox < 78.
Mozilla Firefox;61.0.1;True;['CVE-2020-12423'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12423;"When the Windows DLL ""webauthn.dll"" was missing from the Operating System, and a malicious one was placed in a folder in the user's %PATH%, Firefox may have loaded the DLL, leading to arbitrary code execution. *Note: This issue only affects the Windows operating system; other operating systems are unaffected.* This vulnerability affects Firefox < 78."
Mozilla Firefox;61.0.1;True;['CVE-2020-12424'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12424;"When constructing a permission prompt for WebRTC, a URI was supplied from the content process. This URI was untrusted, and could have been the URI of an origin that was previously granted permission; bypassing the prompt. This vulnerability affects Firefox < 78."
Mozilla Firefox;61.0.1;True;['CVE-2020-12425'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12425;Due to confusion processing a hyphen character in Date.parse(), a one-byte out of bounds read could have occurred, leading to potential information disclosure. This vulnerability affects Firefox < 78.
Mozilla Firefox;61.0.1;True;['CVE-2020-12426'];https://www.prio-n.com/kb/vulnerability/CVE-2020-12426;Mozilla developers and community members reported memory safety bugs present in Firefox 77. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 78.
Mozilla Firefox;61.0.1;True;['CVE-2020-15647'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15647;A Content Provider in Firefox for Android allowed local files accessible by the browser to be read by a remote webpage, leading to sensitive data disclosure, including cookies for other origins. This vulnerability affects Firefox for < Android.
Mozilla Firefox;61.0.1;True;['CVE-2020-15648'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15648;Using object or embed tags, it was possible to frame other websites, even if they disallowed framing using the X-Frame-Options header. This vulnerability affects Thunderbird < 78 and Firefox < 78.0.2.
Mozilla Firefox;61.0.1;True;['CVE-2020-15652'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15652;By observing the stack trace for JavaScript errors in web workers, it was possible to leak the result of a cross-origin redirect. This applied only to content that can be parsed as script. This vulnerability affects Firefox < 79, Firefox ESR < 68.11, Firefox ESR < 78.1, Thunderbird < 68.11, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15653'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15653;An iframe sandbox element with the allow-popups flag could be bypassed when using noopener links. This could have led to security issues for websites relying on sandbox configurations that allowed popups and hosted arbitrary content. This vulnerability affects Firefox ESR < 78.1, Firefox < 79, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15654'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15654;When in an endless loop, a website specifying a custom cursor using CSS could make it look like the user is interacting with the user interface, when they are not. This could lead to a perceived broken state, especially when interactions with existing browser dialogs and warnings do not work. This vulnerability affects Firefox ESR < 78.1, Firefox < 79, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15655'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15655;A redirected HTTP request which is observed or modified through a web extension could bypass existing CORS checks, leading to potential disclosure of cross-origin information. This vulnerability affects Firefox ESR < 78.1, Firefox < 79, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15656'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15656;JIT optimizations involving the Javascript arguments object could confuse later optimizations. This risk was already mitigated by various precautions in the code, resulting in this bug rated at only moderate severity. This vulnerability affects Firefox ESR < 78.1, Firefox < 79, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15657'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15657;Firefox could be made to load attacker-supplied DLL files from the installation directory. This required an attacker that is already capable of placing files in the installation directory. *Note: This issue only affected Windows operating systems. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 78.1, Firefox < 79, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15658'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15658;The code for downloading files did not properly take care of special characters, which led to an attacker being able to cut off the file ending at an earlier position, leading to a different file type being downloaded than shown in the dialog. This vulnerability affects Firefox ESR < 78.1, Firefox < 79, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15659'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15659;Mozilla developers and community members reported memory safety bugs present in Firefox 78 and Firefox ESR 78.0. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 79, Firefox ESR < 68.11, Firefox ESR < 78.1, Thunderbird < 68.11, and Thunderbird < 78.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-15663'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15663;If Firefox is installed to a user-writable directory, the Mozilla Maintenance Service would execute updater.exe from the install location with system privileges. Although the Mozilla Maintenance Service does ensure that updater.exe is signed by Mozilla, the version could have been rolled back to a previous version which would have allowed exploitation of an older bug and arbitrary code execution with System Privileges. *Note: This issue only affected Windows operating systems. Other operating systems are unaffected.*. This vulnerability affects Firefox < 80, Thunderbird < 78.2, Thunderbird < 68.12, Firefox ESR < 68.12, and Firefox ESR < 78.2.
Mozilla Firefox;61.0.1;True;['CVE-2020-15664'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15664;By holding a reference to the eval() function from an about:blank window, a malicious webpage could have gained access to the InstallTrigger object which would allow them to prompt the user to install an extension. Combined with user confusion, this could result in an unintended or malicious extension being installed. This vulnerability affects Firefox < 80, Thunderbird < 78.2, Thunderbird < 68.12, Firefox ESR < 68.12, Firefox ESR < 78.2, and Firefox for Android < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-15665'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15665;Firefox did not reset the address bar after the beforeunload dialog was shown if the user chose to remain on the page. This could have resulted in an incorrect URL being shown when used in conjunction with other unexpected browser behaviors. This vulnerability affects Firefox < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-15666'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15666;When trying to load a non-video in an audio/video context the exact status code (200, 302, 404, 500, 412, 403, etc.) was disclosed via the MediaError Message. This level of information leakage is inconsistent with the standardized onerror/onsuccess disclosure and can lead to inferring login status to services or device discovery on a local network among other attacks. This vulnerability affects Firefox < 80 and Firefox for Android < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-15667'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15667;When processing a MAR update file, after the signature has been validated, an invalid name length could result in a heap overflow, leading to memory corruption and potentially arbitrary code execution. Within Firefox as released by Mozilla, this issue is only exploitable with the Mozilla-controlled signing key. This vulnerability affects Firefox < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-15668'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15668;A lock was missing when accessing a data structure and importing certificate information into the trust database. This vulnerability affects Firefox < 80 and Firefox for Android < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-15670'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15670;Mozilla developers reported memory safety bugs present in Firefox for Android 79. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 80, Firefox ESR < 78.2, Thunderbird < 78.2, and Firefox for Android < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-15671'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15671;When typing in a password under certain conditions, a race may have occured where the InputContext was not being correctly set for the input field, resulting in the typed password being saved to the keyboard dictionary. This vulnerability affects Firefox for Android < 80.
Mozilla Firefox;61.0.1;True;['CVE-2020-15673'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15673;Mozilla developers reported memory safety bugs present in Firefox 80 and Firefox ESR 78.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 81, Thunderbird < 78.3, and Firefox ESR < 78.3.
Mozilla Firefox;61.0.1;True;['CVE-2020-15674'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15674;Mozilla developers reported memory safety bugs present in Firefox 80. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 81.
Mozilla Firefox;61.0.1;True;['CVE-2020-15675'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15675;When processing surfaces, the lifetime may outlive a persistent buffer leading to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 81.
Mozilla Firefox;61.0.1;True;['CVE-2020-15676'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15676;Firefox sometimes ran the onload handler for SVG elements that the DOM sanitizer decided to remove, resulting in JavaScript being executed after pasting attacker-controlled data into a contenteditable element. This vulnerability affects Firefox < 81, Thunderbird < 78.3, and Firefox ESR < 78.3.
Mozilla Firefox;61.0.1;True;['CVE-2020-15677'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15677;By exploiting an Open Redirect vulnerability on a website, an attacker could have spoofed the site displayed in the download file dialog to show the original site (the one suffering from the open redirect) rather than the site the file was actually downloaded from. This vulnerability affects Firefox < 81, Thunderbird < 78.3, and Firefox ESR < 78.3.
Mozilla Firefox;61.0.1;True;['CVE-2020-15678'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15678;When recursing through graphical layers while scrolling, an iterator may have become invalid, resulting in a potential use-after-free. This occurs because the function APZCTreeManager::ComputeClippedCompositionBounds did not follow iterator invalidation rules. This vulnerability affects Firefox < 81, Thunderbird < 78.3, and Firefox ESR < 78.3.
Mozilla Firefox;61.0.1;True;['CVE-2020-15680'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15680;If a valid external protocol handler was referenced in an image tag, the resulting broken image size could be distinguished from a broken image size of a non-existent protocol handler. This allowed an attacker to successfully probe whether an external protocol handler was registered. This vulnerability affects Firefox < 82.
Mozilla Firefox;61.0.1;True;['CVE-2020-15681'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15681;When multiple WASM threads had a reference to a module, and were looking up exported functions, one WASM thread could have overwritten another's entry in a shared stub table, resulting in a potentially exploitable crash. This vulnerability affects Firefox < 82.
Mozilla Firefox;61.0.1;True;['CVE-2020-15682'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15682;When a link to an external protocol was clicked, a prompt was presented that allowed the user to choose what application to open it in. An attacker could induce that prompt to be associated with an origin they didn't control, resulting in a spoofing attack. This was fixed by changing external protocol prompts to be tab-modal while also ensuring they could not be incorrectly associated with a different origin. This vulnerability affects Firefox < 82.
Mozilla Firefox;61.0.1;True;['CVE-2020-15683'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15683;Mozilla developers and community members reported memory safety bugs present in Firefox 81 and Firefox ESR 78.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 78.4, Firefox < 82, and Thunderbird < 78.4.
Mozilla Firefox;61.0.1;True;['CVE-2020-15684'];https://www.prio-n.com/kb/vulnerability/CVE-2020-15684;Mozilla developers reported memory safety bugs present in Firefox 81. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 82.
Mozilla Firefox;61.0.1;True;['CVE-2020-16012'];https://www.prio-n.com/kb/vulnerability/CVE-2020-16012;Side-channel information leakage in graphics in Google Chrome prior to 87.0.4280.66 allowed a remote attacker to leak cross-origin data via a crafted HTML page.
Mozilla Firefox;61.0.1;True;['CVE-2020-26950'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26950;In certain circumstances, the MCallGetProperty opcode can be emitted with unmet assumptions resulting in an exploitable use-after-free condition. This vulnerability affects Firefox < 82.0.3, Firefox ESR < 78.4.1, and Thunderbird < 78.4.2.
Mozilla Firefox;61.0.1;True;['CVE-2020-26951'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26951;A parsing and event loading mismatch in Firefox's SVG code could have allowed load events to fire, even after sanitization. An attacker already capable of exploiting an XSS vulnerability in privileged internal pages could have used this attack to bypass our built-in sanitizer. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-26952'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26952;Incorrect bookkeeping of functions inlined during JIT compilation could have led to memory corruption and a potentially exploitable crash when handling out-of-memory errors. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26953'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26953;"It was possible to cause the browser to enter fullscreen mode without displaying the security UI; thus making it possible to attempt a phishing attack or otherwise confuse the user. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5."
Mozilla Firefox;61.0.1;True;['CVE-2020-26954'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26954;When accepting a malicious intent from other installed apps, Firefox for Android accepted manifests from arbitrary file paths and allowed declaring webapp manifests for other origins. This could be used to gain fullscreen access for UI spoofing and could also lead to cross-origin attacks on targeted websites. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26955'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26955;When a user downloaded a file in Firefox for Android, if a cookie is set, it would have been re-sent during a subsequent file download operation on the same domain, regardless of whether the original and subsequent request were in private and non-private browsing modes. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26956'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26956;In some cases, removing HTML elements during sanitization would keep existing SVG event handlers and therefore lead to XSS. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-26957'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26957;OneCRL was non-functional in the new Firefox for Android due to a missing service initialization. This could result in a failure to enforce some certificate revocations. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26958'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26958;Firefox did not block execution of scripts with incorrect MIME types when the response was intercepted and cached through a ServiceWorker. This could lead to a cross-site script inclusion vulnerability, or a Content Security Policy bypass. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-26959'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26959;During browser shutdown, reference decrementing could have occured on a previously freed object, resulting in a use-after-free, memory corruption, and a potentially exploitable crash. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-26960'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26960;If the Compact() method was called on an nsTArray, the array could have been reallocated without updating other pointers, leading to a potential use-after-free and exploitable crash. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-26961'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26961;When DNS over HTTPS is in use, it intentionally filters RFC1918 and related IP ranges from the responses as these do not make sense coming from a DoH resolver. However when an IPv4 address was mapped through IPv6, these addresses were erroneously let through, leading to a potential DNS Rebinding attack. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-26962'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26962;Cross-origin iframes that contained a login form could have been recognized by the login autofill service, and populated. This could have been used in clickjacking attacks, as well as be read across partitions in dynamic first party isolation. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26963'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26963;Repeated calls to the history and location interfaces could have been used to hang the browser. This was addressed by introducing rate-limiting to these API calls. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26964'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26964;"If the Remote Debugging via USB feature was enabled in Firefox for Android on an Android version prior to Android 6.0, untrusted apps could have connected to the feature and operated with the privileges of the browser to read and interact with web content. The feature was implemented as a unix domain socket, protected by the Android SELinux policy; however, SELinux was not enforced for versions prior to 6.0. This was fixed by removing the Remote Debugging via USB feature from affected devices. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 83."
Mozilla Firefox;61.0.1;True;['CVE-2020-26965'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26965;"Some websites have a feature ""Show Password"" where clicking a button will change a password field into a textbook field, revealing the typed password. If, when using a software keyboard that remembers user input, a user typed their password and used that feature, the type of the password field was changed, resulting in a keyboard layout change and the possibility for the software keyboard to remember the typed password. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5."
Mozilla Firefox;61.0.1;True;['CVE-2020-26966'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26966;"Searching for a single word from the address bar caused an mDNS request to be sent on the local network searching for a hostname consisting of that string; resulting in an information leak. *Note: This issue only affected Windows operating systems. Other operating systems are unaffected.*. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5."
Mozilla Firefox;61.0.1;True;['CVE-2020-26967'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26967;When listening for page changes with a Mutation Observer, a malicious web page could confuse Firefox Screenshots into interacting with elements other than those that it injected into the page. This would lead to internal errors and unexpected behavior in the Screenshots code. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26968'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26968;Mozilla developers reported memory safety bugs present in Firefox 82 and Firefox ESR 78.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 83, Firefox ESR < 78.5, and Thunderbird < 78.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-26969'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26969;Mozilla developers reported memory safety bugs present in Firefox 82. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 83.
Mozilla Firefox;61.0.1;True;['CVE-2020-26971'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26971;Certain blit values provided by the user were not properly constrained leading to a heap buffer overflow on some video drivers. This vulnerability affects Firefox < 84, Thunderbird < 78.6, and Firefox ESR < 78.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-26972'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26972;"The lifecycle of IPC Actors allows managed actors to outlive their manager actors; and the former must ensure that they are not attempting to use a dead actor they have a reference to. Such a check was omitted in WebGL, resulting in a use-after-free and a potentially exploitable crash. This vulnerability affects Firefox < 84."
Mozilla Firefox;61.0.1;True;['CVE-2020-26973'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26973;Certain input to the CSS Sanitizer confused it, resulting in incorrect components being removed. This could have been used as a sanitizer bypass. This vulnerability affects Firefox < 84, Thunderbird < 78.6, and Firefox ESR < 78.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-26974'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26974;When flex-basis was used on a table wrapper, a StyleGenericFlexBasis object could have been incorrectly cast to the wrong type. This resulted in a heap user-after-free, memory corruption, and a potentially exploitable crash. This vulnerability affects Firefox < 84, Thunderbird < 78.6, and Firefox ESR < 78.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-26975'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26975;When a malicious application installed on the user's device broadcast an Intent to Firefox for Android, arbitrary headers could have been specified, leading to attacks such as abusing ambient authority or session fixation. This was resolved by only allowing certain safe-listed headers. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 84.
Mozilla Firefox;61.0.1;True;['CVE-2020-26976'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26976;When a HTTPS pages was embedded in a HTTP page, and there was a service worker registered for the former, the service worker could have intercepted the request for the secure page despite the iframe not being a secure context due to the (insecure) framing. This vulnerability affects Firefox < 84.
Mozilla Firefox;61.0.1;True;['CVE-2020-26977'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26977;By attempting to connect a website using an unresponsive port, an attacker could have controlled the content of a tab while the URL bar displayed the original domain. *Note: This issue only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 84.
Mozilla Firefox;61.0.1;True;['CVE-2020-26978'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26978;Using techniques that built on the slipstream research, a malicious webpage could have exposed both an internal network's hosts as well as services running on the user's local machine. This vulnerability affects Firefox < 84, Thunderbird < 78.6, and Firefox ESR < 78.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-26979'];https://www.prio-n.com/kb/vulnerability/CVE-2020-26979;When a user typed a URL in the address bar or the search bar and quickly hit the enter key, a website could sometimes capture that event and then redirect the user before navigation occurred to the desired, entered address. To construct a convincing spoof the attacker would have had to guess what the user was typing, perhaps by suggesting it. This vulnerability affects Firefox < 84.
Mozilla Firefox;61.0.1;True;['CVE-2020-35111'];https://www.prio-n.com/kb/vulnerability/CVE-2020-35111;When an extension with the proxy permission registered to receive <all_urls>, the proxy.onRequest callback was not triggered for view-source URLs. While web content cannot navigate to such URLs, a user opening View Source could have inadvertently leaked their IP address. This vulnerability affects Firefox < 84, Thunderbird < 78.6, and Firefox ESR < 78.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-35112'];https://www.prio-n.com/kb/vulnerability/CVE-2020-35112;"If a user downloaded a file lacking an extension on Windows, and then ""Open""-ed it from the downloads panel, if there was an executable file in the downloads directory with the same name but with an executable extension (such as .bat or .exe) that executable would have been launched instead. *Note: This issue only affected Windows operating systems. Other operating systems are unaffected.*. This vulnerability affects Firefox < 84, Thunderbird < 78.6, and Firefox ESR < 78.6."
Mozilla Firefox;61.0.1;True;['CVE-2020-35113'];https://www.prio-n.com/kb/vulnerability/CVE-2020-35113;Mozilla developers reported memory safety bugs present in Firefox 83 and Firefox ESR 78.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 84, Thunderbird < 78.6, and Firefox ESR < 78.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-35114'];https://www.prio-n.com/kb/vulnerability/CVE-2020-35114;Mozilla developers reported memory safety bugs present in Firefox 83. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 84.
Mozilla Firefox;61.0.1;True;['CVE-2020-6796'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6796;A content process could have modified shared memory relating to crash reporting information, crash itself, and cause an out-of-bound write. This could have caused memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 73 and Firefox < ESR68.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-6797'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6797;By downloading a file with the .fileloc extension, a semi-privileged extension could launch an arbitrary application on the user's computer. The attacker is restricted as they are unable to download non-quarantined files or supply command line arguments to the application, limiting the impact. Note: this issue only occurs on Mac OSX. Other operating systems are unaffected. This vulnerability affects Thunderbird < 68.5, Firefox < 73, and Firefox < ESR68.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-6798'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6798;If a template tag was used in a select tag, the parser could be confused and allow JavaScript parsing and execution when it should not be allowed. A site that relied on the browser behaving correctly could suffer a cross-site scripting vulnerability as a result. In general, this flaw cannot be exploited through email in the Thunderbird product because scripting is disabled when reading mail, but is potentially a risk in browser or browser-like contexts. This vulnerability affects Thunderbird < 68.5, Firefox < 73, and Firefox < ESR68.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-6799'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6799;Command line arguments could have been injected during Firefox invocation as a shell handler for certain unsupported file types. This required Firefox to be configured as the default handler for a given file type and for a file downloaded to be opened in a third party application that insufficiently sanitized URL data. In that situation, clicking a link in the third party application could have been used to retrieve and execute files whose location was supplied through command line arguments. Note: This issue only affects Windows operating systems and when Firefox is configured as the default handler for non-default filetypes. Other operating systems are unaffected. This vulnerability affects Firefox < 73 and Firefox < ESR68.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-6800'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6800;Mozilla developers and community members reported memory safety bugs present in Firefox 72 and Firefox ESR 68.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. In general, these flaws cannot be exploited through email in the Thunderbird product because scripting is disabled when reading mail, but are potentially risks in browser or browser-like contexts. This vulnerability affects Thunderbird < 68.5, Firefox < 73, and Firefox < ESR68.5.
Mozilla Firefox;61.0.1;True;['CVE-2020-6801'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6801;Mozilla developers reported memory safety bugs present in Firefox 72. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 73.
Mozilla Firefox;61.0.1;True;['CVE-2020-6805'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6805;When removing data about an origin whose tab was recently closed, a use-after-free could occur in the Quota manager, resulting in a potentially exploitable crash. This vulnerability affects Thunderbird < 68.6, Firefox < 74, Firefox < ESR68.6, and Firefox ESR < 68.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-6806'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6806;By carefully crafting promise resolutions, it was possible to cause an out-of-bounds read off the end of an array resized during script execution. This could have led to memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.6, Firefox < 74, Firefox < ESR68.6, and Firefox ESR < 68.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-6807'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6807;When a device was changed while a stream was about to be destroyed, the <code>stream-reinit</code> task may have been executed after the stream was destroyed, causing a use-after-free and a potentially exploitable crash. This vulnerability affects Thunderbird < 68.6, Firefox < 74, Firefox < ESR68.6, and Firefox ESR < 68.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-6808'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6808;"When a JavaScript URL (javascript:) is evaluated and the result is a string, this string is parsed to create an HTML document, which is then presented. Previously, this document's URL (as reported by the document.location property, for example) was the originating javascript: URL which could lead to spoofing attacks; it is now correctly the URL of the originating document. This vulnerability affects Firefox < 74."
Mozilla Firefox;61.0.1;True;['CVE-2020-6809'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6809;When a Web Extension had the all-urls permission and made a fetch request with a mode set to 'same-origin', it was possible for the Web Extension to read local files. This vulnerability affects Firefox < 74.
Mozilla Firefox;61.0.1;True;['CVE-2020-6810'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6810;After a website had entered fullscreen mode, it could have used a previously opened popup to obscure the notification that indicates the browser is in fullscreen mode. Combined with spoofing the browser chrome, this could have led to confusing the user about the current origin of the page and credential theft or other attacks. This vulnerability affects Firefox < 74.
Mozilla Firefox;61.0.1;True;['CVE-2020-6811'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6811;The 'Copy as cURL' feature of Devtools' network tab did not properly escape the HTTP method of a request, which can be controlled by the website. If a user used the 'Copy as Curl' feature and pasted the command into a terminal, it could have resulted in command injection and arbitrary command execution. This vulnerability affects Thunderbird < 68.6, Firefox < 74, Firefox < ESR68.6, and Firefox ESR < 68.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-6812'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6812;The first time AirPods are connected to an iPhone, they become named after the user's name by default (e.g. Jane Doe's AirPods.) Websites with camera or microphone permission are able to enumerate device names, disclosing the user's name. To resolve this issue, Firefox added a special case that renames devices containing the substring 'AirPods' to simply 'AirPods'. This vulnerability affects Thunderbird < 68.6, Firefox < 74, Firefox < ESR68.6, and Firefox ESR < 68.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-6813'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6813;When protecting CSS blocks with the nonce feature of Content Security Policy, the @import statement in the CSS block could allow an attacker to inject arbitrary styles, bypassing the intent of the Content Security Policy. This vulnerability affects Firefox < 74.
Mozilla Firefox;61.0.1;True;['CVE-2020-6814'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6814;Mozilla developers reported memory safety bugs present in Firefox and Thunderbird 68.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 68.6, Firefox < 74, Firefox < ESR68.6, and Firefox ESR < 68.6.
Mozilla Firefox;61.0.1;True;['CVE-2020-6815'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6815;Mozilla developers reported memory safety and script safety bugs present in Firefox 73. Some of these bugs showed evidence of memory corruption or escalation of privilege and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 74.
Mozilla Firefox;61.0.1;True;['CVE-2020-6819'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6819;Under certain conditions, when running the nsDocShell destructor, a race condition can cause a use-after-free. We are aware of targeted attacks in the wild abusing this flaw. This vulnerability affects Thunderbird < 68.7.0, Firefox < 74.0.1, and Firefox ESR < 68.6.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-6820'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6820;Under certain conditions, when handling a ReadableStream, a race condition can cause a use-after-free. We are aware of targeted attacks in the wild abusing this flaw. This vulnerability affects Thunderbird < 68.7.0, Firefox < 74.0.1, and Firefox ESR < 68.6.1.
Mozilla Firefox;61.0.1;True;['CVE-2020-6821'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6821;When reading from areas partially or fully outside the source resource with WebGL's <code>copyTexSubImage</code> method, the specification requires the returned values be zero. Previously, this memory was uninitialized, leading to potentially sensitive data disclosure. This vulnerability affects Thunderbird < 68.7.0, Firefox ESR < 68.7, and Firefox < 75.
Mozilla Firefox;61.0.1;True;['CVE-2020-6822'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6822;On 32-bit builds, an out of bounds write could have occurred when processing an image larger than 4 GB in <code>GMPDecodeData</code>. It is possible that with enough effort this could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 68.7.0, Firefox ESR < 68.7, and Firefox < 75.
Mozilla Firefox;61.0.1;True;['CVE-2020-6823'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6823;A malicious extension could have called <code>browser.identity.launchWebAuthFlow</code>, controlling the redirect_uri, and through the Promise returned, obtain the Auth code and gain access to the user's account at the service provider. This vulnerability affects Firefox < 75.
Mozilla Firefox;61.0.1;True;['CVE-2020-6824'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6824;Initially, a user opens a Private Browsing Window and generates a password for a site, then closes the Private Browsing Window but leaves Firefox open. Subsequently, if the user had opened a new Private Browsing Window, revisited the same site, and generated a new password - the generated passwords would have been identical, rather than independent. This vulnerability affects Firefox < 75.
Mozilla Firefox;61.0.1;True;['CVE-2020-6825'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6825;Mozilla developers and community members Tyson Smith and Christian Holler reported memory safety bugs present in Firefox 74 and Firefox ESR 68.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 68.7.0, Firefox ESR < 68.7, and Firefox < 75.
Mozilla Firefox;61.0.1;True;['CVE-2020-6826'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6826;Mozilla developers Tyson Smith, Bob Clary, and Alexandru Michis reported memory safety bugs present in Firefox 74. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 75.
Mozilla Firefox;61.0.1;True;['CVE-2020-6829'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6829;"When performing EC scalar point multiplication, the wNAF point multiplication algorithm was used; which leaked partial information about the nonce used during signature generation. Given an electro-magnetic trace of a few signature generations, the private key could have been computed. This vulnerability affects Firefox < 80 and Firefox for Android < 80."
Mozilla Firefox;61.0.1;True;['CVE-2020-6831'];https://www.prio-n.com/kb/vulnerability/CVE-2020-6831;A buffer overflow could occur when parsing and validating SCTP chunks in WebRTC. This could have led to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox ESR < 68.8, Firefox < 76, and Thunderbird < 68.8.0.
Mozilla Firefox;61.0.1;True;['CVE-2021-23953'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23953;If a user clicked into a specifically crafted PDF, the PDF reader could be confused into leaking cross-origin information, when said information is served as chunked data. This vulnerability affects Firefox < 85, Thunderbird < 78.7, and Firefox ESR < 78.7.
Mozilla Firefox;61.0.1;True;['CVE-2021-23954'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23954;Using the new logical assignment operators in a JavaScript switch statement could have caused a type confusion, leading to a memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 85, Thunderbird < 78.7, and Firefox ESR < 78.7.
Mozilla Firefox;61.0.1;True;['CVE-2021-23955'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23955;The browser could have been confused into transferring a pointer lock state into another tab, which could have lead to clickjacking attacks. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23956'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23956;An ambiguous file picker design could have confused users who intended to select and upload a single file into uploading a whole directory. This was addressed by adding a new prompt. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23957'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23957;Navigations through the Android-specific `intent` URL scheme could have been misused to escape iframe sandbox. Note: This issue only affected Firefox for Android. Other operating systems are unaffected. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23958'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23958;The browser could have been confused into transferring a screen sharing state into another tab, which would leak unintended information. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23959'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23959;An XSS bug in internal error pages could have led to various spoofing attacks, including other error pages and the address bar. Note: This issue only affected Firefox for Android. Other operating systems are unaffected. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23960'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23960;Performing garbage collection on re-declared JavaScript variables resulted in a user-after-poison, and a potentially exploitable crash. This vulnerability affects Firefox < 85, Thunderbird < 78.7, and Firefox ESR < 78.7.
Mozilla Firefox;61.0.1;True;['CVE-2021-23961'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23961;Further techniques that built on the slipstream research combined with a malicious webpage could have exposed both an internal network's hosts as well as services running on the user's local machine. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23962'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23962;Incorrect use of the '<RowCountChanged>' method could have led to a user-after-poison and a potentially exploitable crash. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23963'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23963;When sharing geolocation during an active WebRTC share, Firefox could have reset the webRTC sharing state in the user interface, leading to loss of control over the currently granted permission. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23964'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23964;Mozilla developers reported memory safety bugs present in Firefox 84 and Firefox ESR 78.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 85, Thunderbird < 78.7, and Firefox ESR < 78.7.
Mozilla Firefox;61.0.1;True;['CVE-2021-23965'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23965;Mozilla developers reported memory safety bugs present in Firefox 84. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 85.
Mozilla Firefox;61.0.1;True;['CVE-2021-23968'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23968;"If Content Security Policy blocked frame navigation, the full destination of a redirect served in the frame was reported in the violation report; as opposed to the original frame URI. This could be used to leak sensitive information contained in such URIs. This vulnerability affects Firefox < 86, Thunderbird < 78.8, and Firefox ESR < 78.8."
Mozilla Firefox;61.0.1;True;['CVE-2021-23969'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23969;"As specified in the W3C Content Security Policy draft, when creating a violation report, ""User agents need to ensure that the source file is the URL requested by the page, pre-redirects. If that‚Äôs not possible, user agents need to strip the URL down to an origin to avoid unintentional leakage."" Under certain types of redirects, Firefox incorrectly set the source file to be the destination of the redirects. This was fixed to be the redirect destination's origin. This vulnerability affects Firefox < 86, Thunderbird < 78.8, and Firefox ESR < 78.8."
Mozilla Firefox;61.0.1;True;['CVE-2021-23970'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23970;"Context-specific code was included in a shared jump table; resulting in assertions being triggered in multithreaded wasm code. This vulnerability affects Firefox < 86."
Mozilla Firefox;61.0.1;True;['CVE-2021-23971'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23971;When processing a redirect with a conflicting Referrer-Policy, Firefox would have adopted the redirect's Referrer-Policy. This would have potentially resulted in more information than intended by the original origin being provided to the destination of the redirect. This vulnerability affects Firefox < 86.
Mozilla Firefox;61.0.1;True;['CVE-2021-23972'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23972;"One phishing tactic on the web is to provide a link with HTTP Auth. For example 'https://[email¬†protected]'. To mitigate this type of attack, Firefox will display a warning dialog; however, this warning dialog would not have been displayed if evil.com used a redirect that was cached by the browser. This vulnerability affects Firefox < 86."
Mozilla Firefox;61.0.1;True;['CVE-2021-23973'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23973;When trying to load a cross-origin resource in an audio/video context a decoding error may have resulted, and the content of that error may have revealed information about the resource. This vulnerability affects Firefox < 86, Thunderbird < 78.8, and Firefox ESR < 78.8.
Mozilla Firefox;61.0.1;True;['CVE-2021-23974'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23974;The DOMParser API did not properly process '<noscript>' elements for escaping. This could be used as an mXSS vector to bypass an HTML Sanitizer. This vulnerability affects Firefox < 86.
Mozilla Firefox;61.0.1;True;['CVE-2021-23975'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23975;The developer page about:memory has a Measure function for exploring what object types the browser has allocated and their sizes. When this function was invoked we incorrectly called the sizeof function, instead of using the API method that checks for invalid pointers. This vulnerability affects Firefox < 86.
Mozilla Firefox;61.0.1;True;['CVE-2020-26954', 'CVE-2021-23976'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23976;When accepting a malicious intent from other installed apps, Firefox for Android accepted manifests from arbitrary file paths and allowed declaring webapp manifests for other origins. This could be used to gain fullscreen access for UI spoofing and could also lead to cross-origin attacks on targeted websites. Note: This issue is a different issue from CVE-2020-26954 and only affected Firefox for Android. Other operating systems are unaffected. This vulnerability affects Firefox < 86.
Mozilla Firefox;61.0.1;True;['CVE-2021-23977'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23977;Firefox for Android suffered from a time-of-check-time-of-use vulnerability that allowed a malicious application to read sensitive data from application directories. Note: This issue is only affected Firefox for Android. Other operating systems are unaffected. This vulnerability affects Firefox < 86.
Mozilla Firefox;61.0.1;True;['CVE-2021-23978'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23978;Mozilla developers reported memory safety bugs present in Firefox 85 and Firefox ESR 78.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 86, Thunderbird < 78.8, and Firefox ESR < 78.8.
Mozilla Firefox;61.0.1;True;['CVE-2021-23979'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23979;Mozilla developers reported memory safety bugs present in Firefox 85. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 86.
Mozilla Firefox;61.0.1;True;['CVE-2021-23981'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23981;A texture upload of a Pixel Buffer Object could have confused the WebGL code to skip binding the buffer used to unpack it, resulting in memory corruption and a potentially exploitable information leak or crash. This vulnerability affects Firefox ESR < 78.9, Firefox < 87, and Thunderbird < 78.9.
Mozilla Firefox;61.0.1;True;['CVE-2021-23982'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23982;Using techniques that built on the slipstream research, a malicious webpage could have scanned both an internal network's hosts as well as services running on the user's local machine utilizing WebRTC connections. This vulnerability affects Firefox ESR < 78.9, Firefox < 87, and Thunderbird < 78.9.
Mozilla Firefox;61.0.1;True;['CVE-2021-23983'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23983;By causing a transition on a parent node by removing a CSS rule, an invalid property for a marker could have been applied, resulting in memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 87.
Mozilla Firefox;61.0.1;True;['CVE-2021-23984'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23984;A malicious extension could have opened a popup window lacking an address bar. The title of the popup lacking an address bar should not be fully controllable, but in this situation was. This could have been used to spoof a website and attempt to trick the user into providing credentials. This vulnerability affects Firefox ESR < 78.9, Firefox < 87, and Thunderbird < 78.9.
Mozilla Firefox;61.0.1;True;['CVE-2021-23985'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23985;If an attacker is able to alter specific about:config values (for example malware running on the user's computer), the Devtools remote debugging feature could have been enabled in a way that was unnoticable to the user. This would have allowed a remote attacker (able to make a direct network connection to the victim) to monitor the user's browsing activity and (plaintext) network traffic. This was addressed by providing a visual cue when Devtools has an open network socket. This vulnerability affects Firefox < 87.
Mozilla Firefox;61.0.1;True;['CVE-2021-23986'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23986;A malicious extension with the 'search' permission could have installed a new search engine whose favicon referenced a cross-origin URL. The response to this cross-origin request could have been read by the extension, allowing a same-origin policy bypass by the extension, which should not have cross-origin permissions. This cross-origin request was made without cookies, so the sensitive information disclosed by the violation was limited to local-network resources or resources that perform IP-based authentication. This vulnerability affects Firefox < 87.
Mozilla Firefox;61.0.1;True;['CVE-2021-23987'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23987;Mozilla developers and community members reported memory safety bugs present in Firefox 86 and Firefox ESR 78.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 78.9, Firefox < 87, and Thunderbird < 78.9.
Mozilla Firefox;61.0.1;True;['CVE-2021-23988'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23988;Mozilla developers reported memory safety bugs present in Firefox 86. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 87.
Mozilla Firefox;61.0.1;True;['CVE-2021-23994'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23994;A WebGL framebuffer was not initialized early enough, resulting in memory corruption and an out of bound write. This vulnerability affects Firefox ESR < 78.10, Thunderbird < 78.10, and Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-23995'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23995;When Responsive Design Mode was enabled, it used references to objects that were previously freed. We presume that with enough effort this could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 78.10, Thunderbird < 78.10, and Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-23996'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23996;By utilizing 3D CSS in conjunction with Javascript, content could have been rendered outside the webpage's viewport, resulting in a spoofing attack that could have been used for phishing or other attacks on a user. This vulnerability affects Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-23997'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23997;Due to unexpected data type conversions, a use-after-free could have occurred when interacting with the font cache. We presume that with enough effort this could have been exploited to run arbitrary code. This vulnerability affects Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-23998'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23998;Through complicated navigations with new windows, an HTTP page could have inherited a secure lock icon from an HTTPS page. This vulnerability affects Firefox ESR < 78.10, Thunderbird < 78.10, and Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-23999'];https://www.prio-n.com/kb/vulnerability/CVE-2021-23999;If a Blob URL was loaded through some unusual user interaction, it could have been loaded by the System Principal and granted additional privileges that should not be granted to web content. This vulnerability affects Firefox ESR < 78.10, Thunderbird < 78.10, and Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-24000'];https://www.prio-n.com/kb/vulnerability/CVE-2021-24000;"A race condition with requestPointerLock() and setTimeout() could have resulted in a user interacting with one tab when they believed they were on a separate tab. In conjunction with certain elements (such as &lt;input type=""file""&gt;) this could have led to an attack where a user was confused about the origin of the webpage and potentially disclosed information they did not intend to. This vulnerability affects Firefox < 88."
Mozilla Firefox;61.0.1;True;['CVE-2021-24001'];https://www.prio-n.com/kb/vulnerability/CVE-2021-24001;A compromised content process could have performed session history manipulations it should not have been able to due to testing infrastructure that was not restricted to testing-only configurations. This vulnerability affects Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-24002'];https://www.prio-n.com/kb/vulnerability/CVE-2021-24002;When a user clicked on an FTP URL containing encoded newline characters (%0A and %0D), the newlines would have been interpreted as such and allowed arbitrary commands to be sent to the FTP server. This vulnerability affects Firefox ESR < 78.10, Thunderbird < 78.10, and Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-29944'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29944;Lack of escaping allowed HTML injection when a webpage was viewed in Reader View. While a Content Security Policy prevents direct code execution, HTML injection is still possible. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-29945'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29945;The WebAssembly JIT could miscalculate the size of a return type, which could lead to a null read and result in a crash. *Note: This issue only affected x86-32 platforms. Other platforms are unaffected.*. This vulnerability affects Firefox ESR < 78.10, Thunderbird < 78.10, and Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-29946'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29946;Ports that were written as an integer overflow above the bounds of a 16-bit integer could have bypassed port blocking restrictions when used in the Alt-Svc header. This vulnerability affects Firefox ESR < 78.10, Thunderbird < 78.10, and Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-29947'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29947;Mozilla developers and community members reported memory safety bugs present in Firefox 87. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 88.
Mozilla Firefox;61.0.1;True;['CVE-2021-29951'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29951;"The Mozilla Maintenance Service granted SERVICE_START access to BUILTIN|Users which, in a domain network, grants normal remote users access to start or stop the service. This could be used to prevent the browser update service from operating (if an attacker spammed the 'Stop' command); but also exposed attack surface in the maintenance service. *Note: This issue only affected Windows operating systems older than Win 10 build 1709. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 78.10.1, Firefox < 87, and Firefox ESR < 78.10.1."
Mozilla Firefox;61.0.1;True;['CVE-2021-29952'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29952;When Web Render components were destructed, a race condition could have caused undefined behavior, and we presume that with enough effort may have been exploitable to run arbitrary code. This vulnerability affects Firefox < 88.0.1 and Firefox for Android < 88.1.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-29953'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29953;A malicious webpage could have forced a Firefox for Android user into executing attacker-controlled JavaScript in the context of another domain, resulting in a Universal Cross-Site Scripting vulnerability. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected. Further details are being temporarily withheld to allow users an opportunity to update.*. This vulnerability affects Firefox < 88.0.1 and Firefox for Android < 88.1.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-29955'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29955;A transient execution vulnerability, named Floating Point Value Injection (FPVI) allowed an attacker to leak arbitrary memory addresses and may have also enabled JIT type confusion attacks. (A related vulnerability, Speculative Code Store Bypass (SCSB), did not affect Firefox.). This vulnerability affects Firefox ESR < 78.9 and Firefox < 87.
Mozilla Firefox;61.0.1;True;['CVE-2021-29959'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29959;When a user has already allowed a website to access microphone and camera, disabling camera sharing would not fully prevent the website from re-enabling it without an additional prompt. This was only possible if the website kept recording with the microphone until re-enabling the camera. This vulnerability affects Firefox < 89.
Mozilla Firefox;61.0.1;True;['CVE-2021-29960'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29960;Firefox used to cache the last filename used for printing a file. When generating a filename for printing, Firefox usually suggests the web page title. The caching and suggestion techniques combined may have lead to the title of a website visited during private browsing mode being stored on disk. This vulnerability affects Firefox < 89.
Mozilla Firefox;61.0.1;True;['CVE-2021-29961'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29961;When styling and rendering an oversized `<select>` element, Firefox did not apply correct clipping which allowed an attacker to paint over the user interface. This vulnerability affects Firefox < 89.
Mozilla Firefox;61.0.1;True;['CVE-2021-29962'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29962;Firefox for Android would become unstable and hard-to-recover when a website opened too many popups. *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 89.
Mozilla Firefox;61.0.1;True;['CVE-2021-29963'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29963;Address bar search suggestions in private browsing mode were re-using session data from normal mode. *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 89.
Mozilla Firefox;61.0.1;True;['CVE-2021-29964'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29964;A locally-installed hostile program could send `WM_COPYDATA` messages that Firefox would process incorrectly, leading to an out-of-bounds read. *This bug only affects Firefox on Windows. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 78.11, Firefox < 89, and Firefox ESR < 78.11.
Mozilla Firefox;61.0.1;True;['CVE-2021-29965'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29965;A malicious website that causes an HTTP Authentication dialog to be spawned could trick the built-in password manager to suggest passwords for the currently active website instead of the website that triggered the dialog. *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 89.
Mozilla Firefox;61.0.1;True;['CVE-2021-29966'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29966;Mozilla developers reported memory safety bugs present in Firefox 88. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 89.
Mozilla Firefox;61.0.1;True;['CVE-2021-29967'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29967;Mozilla developers reported memory safety bugs present in Firefox 88 and Firefox ESR 78.11. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 78.11, Firefox < 89, and Firefox ESR < 78.11.
Mozilla Firefox;61.0.1;True;['CVE-2021-29968'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29968;When drawing text onto a canvas with WebRender disabled, an out of bounds read could occur. *This bug only affects Firefox on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 89.0.1.
Mozilla Firefox;61.0.1;True;['CVE-2021-29970'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29970;A malicious webpage could have triggered a use-after-free, memory corruption, and a potentially exploitable crash. *This bug could only be triggered when accessibility was enabled.*. This vulnerability affects Thunderbird < 78.12, Firefox ESR < 78.12, and Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29971'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29971;If a user had granted a permission to a webpage and saved that grant, any webpage running on the same host - irrespective of scheme or port - would be granted that permission. *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29972'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29972;A use-after-free vulnerability was found via testing, and traced to an out-of-date Cairo library. Updating the library resolved the issue, and may have remediated other, unknown security vulnerabilities as well. This vulnerability affects Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29973'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29973;Password autofill was enabled without user interaction on insecure websites on Firefox for Android. This was corrected to require user interaction with the page before a user's password would be entered by the browser's autofill functionality *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29974'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29974;When network partitioning was enabled, e.g. as a result of Enhanced Tracking Protection settings, a TLS error page would allow the user to override an error on a domain which had specified HTTP Strict Transport Security (which implies that the error should not be override-able.) This issue did not affect the network connections, and they were correctly upgraded to HTTPS automatically. This vulnerability affects Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29975'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29975;Through a series of DOM manipulations, a message, over which the attacker had control of the text but not HTML or formatting, could be overlaid on top of another domain (with the new domain correctly shown in the address bar) resulting in possible user confusion. This vulnerability affects Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29976'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29976;Mozilla developers reported memory safety bugs present in code shared between Firefox and Thunderbird. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 78.12, Firefox ESR < 78.12, and Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29977'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29977;Mozilla developers reported memory safety bugs present in Firefox 89. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 90.
Mozilla Firefox;61.0.1;True;['CVE-2021-29980'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29980;Uninitialized memory in a canvas object could have caused an incorrect free() leading to memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 78.13, Thunderbird < 91, Firefox ESR < 78.13, and Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29981'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29981;An issue present in lowering/register allocation could have led to obscure but deterministic register confusion failures in JITted code that would lead to a potentially exploitable crash. This vulnerability affects Firefox < 91 and Thunderbird < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29982'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29982;Due to incorrect JIT optimization, we incorrectly interpreted data from the wrong type of object, resulting in the potential leak of a single bit of memory. This vulnerability affects Firefox < 91 and Thunderbird < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29983'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29983;Firefox for Android could get stuck in fullscreen mode and not exit it even after normal interactions that should cause it to exit. *Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29984'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29984;Instruction reordering resulted in a sequence of instructions that would cause an object to be incorrectly considered during garbage collection. This led to memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 78.13, Thunderbird < 91, Firefox ESR < 78.13, and Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29985'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29985;A use-after-free vulnerability in media channels could have led to memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 78.13, Thunderbird < 91, Firefox ESR < 78.13, and Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29986'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29986;A suspected race condition when calling getaddrinfo led to memory corruption and a potentially exploitable crash. *Note: This issue only affected Linux operating systems. Other operating systems are unaffected.* This vulnerability affects Thunderbird < 78.13, Thunderbird < 91, Firefox ESR < 78.13, and Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29987'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29987;After requesting multiple permissions, and closing the first permission panel, subsequent permission panels will be displayed in a different position but still record a click in the default location, making it possible to trick a user into accepting a permission they did not want to. *This bug only affects Firefox on Linux. Other operating systems are unaffected.*. This vulnerability affects Firefox < 91 and Thunderbird < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29988'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29988;Firefox incorrectly treated an inline list-item element as a block element, resulting in an out of bounds read or memory corruption, and a potentially exploitable crash. This vulnerability affects Thunderbird < 78.13, Thunderbird < 91, Firefox ESR < 78.13, and Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29989'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29989;Mozilla developers reported memory safety bugs present in Firefox 90 and Firefox ESR 78.12. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 78.13, Firefox ESR < 78.13, and Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29990'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29990;Mozilla developers and community members reported memory safety bugs present in Firefox 90. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 91.
Mozilla Firefox;61.0.1;True;['CVE-2021-29991'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29991;Firefox incorrectly accepted a newline in a HTTP/3 header, interpretting it as two separate headers. This allowed for a header splitting attack against servers using HTTP/3. This vulnerability affects Firefox < 91.0.1 and Thunderbird < 91.0.1.
Mozilla Firefox;61.0.1;True;['CVE-2021-29993'];https://www.prio-n.com/kb/vulnerability/CVE-2021-29993;Firefox for Android allowed navigations through the `intent://` protocol, which could be used to cause crashes and UI spoofs. *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 92.
Mozilla Firefox;61.0.1;True;['CVE-2021-30547'];https://www.prio-n.com/kb/vulnerability/CVE-2021-30547;Out of bounds write in ANGLE in Google Chrome prior to 91.0.4472.101 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.
Mozilla Firefox;61.0.1;True;['CVE-2021-38491'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38491;Mixed-content checks were unable to analyze opaque origins which led to some mixed content being loaded. This vulnerability affects Firefox < 92.
Mozilla Firefox;61.0.1;True;['CVE-2021-38492'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38492;When delegating navigations to the operating system, Firefox would accept the `mk` scheme which might allow attackers to launch pages and execute scripts in Internet Explorer in unprivileged mode. *This bug only affects Firefox for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 92, Thunderbird < 91.1, Thunderbird < 78.14, Firefox ESR < 78.14, and Firefox ESR < 91.1.
Mozilla Firefox;61.0.1;True;['CVE-2021-38493'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38493;Mozilla developers reported memory safety bugs present in Firefox 91 and Firefox ESR 78.13. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 78.14, Thunderbird < 78.14, and Firefox < 92.
Mozilla Firefox;61.0.1;True;['CVE-2021-38494'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38494;Mozilla developers reported memory safety bugs present in Firefox 91. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 92.
Mozilla Firefox;61.0.1;True;['CVE-2021-38496'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38496;During operations on MessageTasks, a task may have been removed while it was still scheduled, resulting in memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 78.15, Thunderbird < 91.2, Firefox ESR < 91.2, Firefox ESR < 78.15, and Firefox < 93.
Mozilla Firefox;61.0.1;True;['CVE-2021-38497'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38497;Through use of reportValidity() and window.open(), a plain-text validation message could have been overlaid on another origin, leading to possible user confusion and spoofing attacks. This vulnerability affects Firefox < 93, Thunderbird < 91.2, and Firefox ESR < 91.2.
Mozilla Firefox;61.0.1;True;['CVE-2021-38498'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38498;During process shutdown, a document could have caused a use-after-free of a languages service object, leading to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 93, Thunderbird < 91.2, and Firefox ESR < 91.2.
Mozilla Firefox;61.0.1;True;['CVE-2021-38499'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38499;Mozilla developers reported memory safety bugs present in Firefox 92. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 93.
Mozilla Firefox;61.0.1;True;['CVE-2021-38500'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38500;Mozilla developers reported memory safety bugs present in Firefox 92 and Firefox ESR 91.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 78.15, Thunderbird < 91.2, Firefox ESR < 91.2, Firefox ESR < 78.15, and Firefox < 93.
Mozilla Firefox;61.0.1;True;['CVE-2021-38501'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38501;Mozilla developers reported memory safety bugs present in Firefox 92 and Firefox ESR 91.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 93, Thunderbird < 91.2, and Firefox ESR < 91.2.
Mozilla Firefox;61.0.1;True;['CVE-2021-38503'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38503;The iframe sandbox rules were not correctly applied to XSLT stylesheets, allowing an iframe to bypass restrictions such as executing scripts or navigating the top-level frame. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-38504'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38504;When interacting with an HTML input element's file picker dialog with webkitdirectory set, a use-after-free could have resulted, leading to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-38505'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38505;"Microsoft introduced a new feature in Windows 10 known as Cloud Clipboard which, if enabled, will record data copied to the clipboard to the cloud, and make it available on other computers in certain scenarios. Applications that wish to prevent copied data from being recorded in Cloud History must use specific clipboard formats; and Firefox before versions 94 and ESR 91.3 did not implement them. This could have caused sensitive data to be recorded to a user's Microsoft account. *This bug only affects Firefox for Windows 10+ with Cloud Clipboard enabled. Other operating systems are unaffected.*. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3."
Mozilla Firefox;61.0.1;True;['CVE-2021-38506'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38506;Through a series of navigations, Firefox could have entered fullscreen mode without notification or warning to the user. This could lead to spoofing attacks on the browser UI including phishing. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-38507'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38507;"The Opportunistic Encryption feature of HTTP2 (RFC 8164) allows a connection to be transparently upgraded to TLS while retaining the visual properties of an HTTP connection, including being same-origin with unencrypted connections on port 80. However, if a second encrypted port on the same IP address (e.g. port 8443) did not opt-in to opportunistic encryption; a network attacker could forward a connection from the browser to port 443 to port 8443, causing the browser to treat the content of port 8443 as same-origin with HTTP. This was resolved by disabling the Opportunistic Encryption feature, which had low usage. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3."
Mozilla Firefox;61.0.1;True;['CVE-2021-38508'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38508;By displaying a form validity message in the correct location at the same time as a permission prompt (such as for geolocation), the validity message could have obscured the prompt, resulting in the user potentially being tricked into granting the permission. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-38509'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38509;Due to an unusual sequence of attacker-controlled events, a Javascript alert() dialog with arbitrary (although unstyled) contents could be displayed over top an uncontrolled webpage of the attacker's choosing. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-38510'];https://www.prio-n.com/kb/vulnerability/CVE-2021-38510;The executable file warning was not presented when downloading .inetloc files, which, due to a flaw in Mac OS, can run commands on a user's computer.*Note: This issue only affected Mac OS operating systems. Other operating systems are unaffected.*. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-4128'];https://www.prio-n.com/kb/vulnerability/CVE-2021-4128;"When transitioning in and out of fullscreen mode, a graphics object was not correctly protected; resulting in memory corruption and a potentially exploitable crash.<br>*This bug only affects Firefox on MacOS. Other operating systems are unaffected.*. This vulnerability affects Firefox < 95."
Mozilla Firefox;61.0.1;True;['CVE-2021-4129'];https://www.prio-n.com/kb/vulnerability/CVE-2021-4129;Mozilla developers and community members Julian Hector, Randell Jesup, Gabriele Svelto, Tyson Smith, Christian Holler, and Masayuki Nakano reported memory safety bugs present in Firefox 94. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 95, Firefox ESR < 91.4.0, and Thunderbird < 91.4.0.
Mozilla Firefox;61.0.1;True;['CVE-2021-4140'];https://www.prio-n.com/kb/vulnerability/CVE-2021-4140;It was possible to construct specific XSLT markup that would be able to bypass an iframe sandbox. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2021-4221'];https://www.prio-n.com/kb/vulnerability/CVE-2021-4221;If a domain name contained a RTL character, it would cause the domain to be rendered to the right of the path. This could lead to user confusion and spoofing attacks. <br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*<br>*Note*: Due to a clerical error this advisory was not included in the original announcement, and was added in Feburary 2022. This vulnerability affects Firefox < 92.
Mozilla Firefox;61.0.1;True;['CVE-2021-43530'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43530;A Universal XSS vulnerability was present in Firefox for Android resulting from improper sanitization when processing a URL scanned from a QR code. *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 94.
Mozilla Firefox;61.0.1;True;['CVE-2021-43531', 'CVE-2021-43532'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43531;When a user loaded a Web Extensions context menu, the Web Extension could access the post-redirect URL of the element clicked. If the Web Extension lacked the WebRequest permission for the hosts involved in the redirect, this would be a same-origin-violation leaking data the Web Extension should have access to. This was fixed to provide the pre-redirect URL. This is related to CVE-2021-43532 but in the context of Web Extensions. This vulnerability affects Firefox < 94.
Mozilla Firefox;61.0.1;True;['CVE-2021-43532'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43532;The 'Copy Image Link' context menu action would copy the final image URL after redirects. By embedding an image that triggered authentication flows - in conjunction with a Content Security Policy that stopped a redirection chain in the middle - the final image URL could be one that contained an authentication token used to takeover a user account. If a website tricked a user into copy and pasting the image link back to the page, the page would be able to steal the authentication tokens. This was fixed by making the action return the original URL, before any redirects. This vulnerability affects Firefox < 94.
Mozilla Firefox;61.0.1;True;['CVE-2021-43533'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43533;When parsing internationalized domain names, high bits of the characters in the URLs were sometimes stripped, resulting in inconsistencies that could lead to user confusion or attacks such as phishing. This vulnerability affects Firefox < 94.
Mozilla Firefox;61.0.1;True;['CVE-2021-43534'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43534;Mozilla developers and community members reported memory safety bugs present in Firefox 93 and Firefox ESR 91.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 94, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-43535'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43535;A use-after-free could have occured when an HTTP2 session object was released on a different thread, leading to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 93, Thunderbird < 91.3, and Firefox ESR < 91.3.
Mozilla Firefox;61.0.1;True;['CVE-2021-43536'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43536;Under certain circumstances, asynchronous functions could have caused a navigation to fail but expose the target URL. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43537'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43537;An incorrect type conversion of sizes from 64bit to 32bit integers allowed an attacker to corrupt memory leading to a potentially exploitable crash. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43538'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43538;By misusing a race in our notification code, an attacker could have forcefully hidden the notification for pages that had received full screen and pointer lock access, which could have been used for spoofing attacks. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43539'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43539;Failure to correctly record the location of live pointers across wasm instance calls resulted in a GC occurring within the call not tracing those live pointers. This could have led to a use-after-free causing a potentially exploitable crash. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43540'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43540;WebExtensions with the correct permissions were able to create and install ServiceWorkers for third-party websites that would not have been uninstalled with the extension. This vulnerability affects Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43541'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43541;When invoking protocol handlers for external protocols, a supplied parameter URL containing spaces was not properly escaped. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43542'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43542;Using XMLHttpRequest, an attacker could have identified installed applications by probing error messages for loading external protocols. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43543'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43543;Documents loaded with the CSP sandbox directive could have escaped the sandbox's script restriction by embedding additional content. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43544'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43544;When receiving a URL through a SEND intent, Firefox would have searched for the text, but subsequent usages of the address bar might have caused the URL to load unintentionally, which could lead to XSS and spoofing attacks. *This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43545'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43545;Using the Location API in a loop could have caused severe application hangs and crashes. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2021-43546'];https://www.prio-n.com/kb/vulnerability/CVE-2021-43546;It was possible to recreate previous cursor spoofing attacks against users with a zoomed native cursor. This vulnerability affects Thunderbird < 91.4.0, Firefox ESR < 91.4.0, and Firefox < 95.
Mozilla Firefox;61.0.1;True;['CVE-2022-0511'];https://www.prio-n.com/kb/vulnerability/CVE-2022-0511;Mozilla developers and community members Gabriele Svelto, Sebastian Hengst, Randell Jesup, Luan Herrera, Lars T Hansen, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 96. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 97.
Mozilla Firefox;61.0.1;True;['CVE-2022-0843'];https://www.prio-n.com/kb/vulnerability/CVE-2022-0843;Mozilla developers Kershaw Chang, Ryan VanderMeulen, and Randell Jesup reported memory safety bugs present in Firefox 97. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 98.
Mozilla Firefox;61.0.1;True;['CVE-2022-1097'];https://www.prio-n.com/kb/vulnerability/CVE-2022-1097;<code>NSSToken</code> objects were referenced via direct points, and could have been accessed in an unsafe way on different threads, leading to a use-after-free and potentially exploitable crash. This vulnerability affects Thunderbird < 91.8, Firefox < 99, and Firefox ESR < 91.8.
Mozilla Firefox;61.0.1;True;['CVE-2022-1529'];https://www.prio-n.com/kb/vulnerability/CVE-2022-1529;An attacker could have sent a message to the parent process where the contents were used to double-index into a JavaScript object, leading to prototype pollution and ultimately attacker-controlled JavaScript executing in the privileged parent process. This vulnerability affects Firefox ESR < 91.9.1, Firefox < 100.0.2, Firefox for Android < 100.3.0, and Thunderbird < 91.9.1.
Mozilla Firefox;61.0.1;True;['CVE-2022-1802'];https://www.prio-n.com/kb/vulnerability/CVE-2022-1802;If an attacker was able to corrupt the methods of an Array object in JavaScript via prototype pollution, they could have achieved execution of attacker-controlled JavaScript code in a privileged context. This vulnerability affects Firefox ESR < 91.9.1, Firefox < 100.0.2, Firefox for Android < 100.3.0, and Thunderbird < 91.9.1.
Mozilla Firefox;61.0.1;True;['CVE-2022-1887'];https://www.prio-n.com/kb/vulnerability/CVE-2022-1887;The search term could have been specified externally to trigger SQL injection. This vulnerability affects Firefox for iOS < 101.
Mozilla Firefox;61.0.1;True;['CVE-2022-2200'];https://www.prio-n.com/kb/vulnerability/CVE-2022-2200;If an object prototype was corrupted by an attacker, they would have been able to set undesired attributes on a JavaScript object, leading to privileged code execution. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-22736'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22736;If Firefox was installed to a world-writable directory, a local privilege escalation could occur when Firefox searched the current directory for system libraries. However the install directory is not world-writable by default.<br>*This bug only affects Firefox for Windows in a non-default installation. Other operating systems are unaffected.*. This vulnerability affects Firefox < 96.
Mozilla Firefox;61.0.1;True;['CVE-2022-22737'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22737;Constructing audio sinks could have lead to a race condition when playing audio files and closing windows. This could have lead to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22738'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22738;Applying a CSS filter effect could have accessed out of bounds memory. This could have lead to a heap-buffer-overflow causing a potentially exploitable crash. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22739'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22739;Malicious websites could have tricked users into accepting launching a program to handle an external URL protocol. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22740'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22740;Certain network request objects were freed too early when releasing a network request handle. This could have lead to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22741'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22741;When resizing a popup while requesting fullscreen access, the popup would have become unable to leave fullscreen mode. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22742'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22742;When inserting text while in edit mode, some characters might have lead to out-of-bounds memory access causing a potentially exploitable crash. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22743'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22743;When navigating from inside an iframe while requesting fullscreen access, an attacker-controlled tab could have made the browser unable to leave fullscreen mode. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22744'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22744;"The constructed curl command from the ""Copy as curl"" feature in DevTools was not properly escaped for PowerShell. This could have lead to command injection if pasted into a Powershell prompt.<br>*This bug only affects Thunderbird for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5."
Mozilla Firefox;61.0.1;True;['CVE-2022-22745'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22745;Securitypolicyviolation events could have leaked cross-origin information for frame-ancestors violations. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22746'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22746;A race condition could have allowed bypassing the fullscreen notification which could have lead to a fullscreen window spoof being unnoticed.<br>*This bug only affects Firefox for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22747'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22747;After accepting an untrusted certificate, handling an empty pkcs7 sequence as part of the certificate data could have lead to a crash. This crash is believed to be unexploitable. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22748'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22748;Malicious websites could have confused Firefox into showing the wrong origin when asking to launch a program and handling an external URL protocol. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22749'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22749;When scanning QR codes, Firefox for Android would have allowed navigation to some URLs that do not point to web content.<br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 96.
Mozilla Firefox;61.0.1;True;['CVE-2022-22750'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22750;By generally accepting and passing resource handles across processes, a compromised content process might have confused higher privileged processes to interact with handles that the unprivileged process should not have access to.<br>*This bug only affects Firefox for Windows and MacOS. Other operating systems are unaffected.*. This vulnerability affects Firefox < 96.
Mozilla Firefox;61.0.1;True;['CVE-2022-22751'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22751;Mozilla developers Calixte Denizet, Kershaw Chang, Christian Holler, Jason Kratzer, Gabriele Svelto, Tyson Smith, Simon Giesecke, and Steve Fink reported memory safety bugs present in Firefox 95 and Firefox ESR 91.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.
Mozilla Firefox;61.0.1;True;['CVE-2022-22752'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22752;Mozilla developers Christian Holler and Jason Kratzer reported memory safety bugs present in Firefox 95. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 96.
Mozilla Firefox;61.0.1;True;['CVE-2022-22753'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22753;A Time-of-Check Time-of-Use bug existed in the Maintenance (Updater) Service that could be abused to grant Users write access to an arbitrary directory. This could have been used to escalate to SYSTEM access.<br>*This bug only affects Firefox on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 97, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-22754'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22754;If a user installed an extension of a particular type, the extension could have auto-updated itself and while doing so, bypass the prompt which grants the new version the new requested permissions. This vulnerability affects Firefox < 97, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-22755'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22755;By using XSL Transforms, a malicious webserver could have served a user an XSL document that would continue to execute JavaScript (within the bounds of the same-origin policy) even after the tab was closed. This vulnerability affects Firefox < 97.
Mozilla Firefox;61.0.1;True;['CVE-2022-22756'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22756;If a user was convinced to drag and drop an image to their desktop or other folder, the resulting object could have been changed into an executable script which would have run arbitrary code after the user clicked on it. This vulnerability affects Firefox < 97, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-22757'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22757;Remote Agent, used in WebDriver, did not validate the Host or Origin headers. This could have allowed websites to connect back locally to the user's browser to control it. <br>*This bug only affected Firefox when WebDriver was enabled, which is not the default configuration.*. This vulnerability affects Firefox < 97.
Mozilla Firefox;61.0.1;True;['CVE-2022-22758'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22758;When clicking on a tel: link, USSD codes, specified after a <code>\*</code> character, would be included in the phone number. On certain phones, or on certain carriers, if the number was dialed this could perform actions on a user's account, similar to a cross-site request forgery attack.<br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 97.
Mozilla Firefox;61.0.1;True;['CVE-2022-22759'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22759;If a document created a sandboxed iframe without <code>allow-scripts</code>, and subsequently appended an element to the iframe's document that e.g. had a JavaScript event handler - the event handler would have run despite the iframe's sandbox. This vulnerability affects Firefox < 97, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-22760'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22760;When importing resources using Web Workers, error messages would distinguish the difference between <code>application/javascript</code> responses and non-script responses. This could have been abused to learn information cross-origin. This vulnerability affects Firefox < 97, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-22761'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22761;Web-accessible extension pages (pages with a moz-extension:// scheme) were not correctly enforcing the frame-ancestors directive when it was used in the Web Extension's Content Security Policy. This vulnerability affects Firefox < 97, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-22762'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22762;Under certain circumstances, a JavaScript alert (or prompt) could have been shown while another website was displayed underneath it. This could have been abused to trick the user. <br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 97.
Mozilla Firefox;61.0.1;True;['CVE-2022-22763'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22763;When a worker is shutdown, it was possible to cause script to run late in the lifecycle, at a point after where it should not be possible. This vulnerability affects Firefox < 96, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-22764'];https://www.prio-n.com/kb/vulnerability/CVE-2022-22764;Mozilla developers Paul Adenot and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 96 and Firefox ESR 91.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 97, Thunderbird < 91.6, and Firefox ESR < 91.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-2505'];https://www.prio-n.com/kb/vulnerability/CVE-2022-2505;Mozilla developers and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 102. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 102.1, Firefox < 103, and Thunderbird < 102.1.
Mozilla Firefox;61.0.1;True;['CVE-2022-26381'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26381;An attacker could have caused a use-after-free by forcing a text reflow in an SVG object leading to a potentially exploitable crash. This vulnerability affects Firefox < 98, Firefox ESR < 91.7, and Thunderbird < 91.7.
Mozilla Firefox;61.0.1;True;['CVE-2022-26382'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26382;While the text displayed in Autofill tooltips cannot be directly read by JavaScript, the text was rendered using page fonts. Side-channel attacks on the text by using specially crafted fonts could have lead to this text being inferred by the webpage. This vulnerability affects Firefox < 98.
Mozilla Firefox;61.0.1;True;['CVE-2022-26383'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26383;When resizing a popup after requesting fullscreen access, the popup would not display the fullscreen notification. This vulnerability affects Firefox < 98, Firefox ESR < 91.7, and Thunderbird < 91.7.
Mozilla Firefox;61.0.1;True;['CVE-2022-26384'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26384;If an attacker could control the contents of an iframe sandboxed with <code>allow-popups</code> but not <code>allow-scripts</code>, they were able to craft a link that, when clicked, would lead to JavaScript execution in violation of the sandbox. This vulnerability affects Firefox < 98, Firefox ESR < 91.7, and Thunderbird < 91.7.
Mozilla Firefox;61.0.1;True;['CVE-2022-26385'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26385;In unusual circumstances, an individual thread may outlive the thread's manager during shutdown. This could have led to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox < 98.
Mozilla Firefox;61.0.1;True;['CVE-2022-26387'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26387;"When installing an add-on, Firefox verified the signature before prompting the user; but while the user was confirming the prompt, the underlying add-on file could have been modified and Firefox would not have noticed. This vulnerability affects Firefox < 98, Firefox ESR < 91.7, and Thunderbird < 91.7."
Mozilla Firefox;61.0.1;True;['CVE-2022-26485'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26485;Removing an XSLT parameter during processing could have lead to an exploitable use-after-free. We have had reports of attacks in the wild abusing this flaw. This vulnerability affects Firefox < 97.0.2, Firefox ESR < 91.6.1, Firefox for Android < 97.3.0, Thunderbird < 91.6.2, and Focus < 97.3.0.
Mozilla Firefox;61.0.1;True;['CVE-2022-26486'];https://www.prio-n.com/kb/vulnerability/CVE-2022-26486;An unexpected message in the WebGPU IPC framework could lead to a use-after-free and exploitable sandbox escape. We have had reports of attacks in the wild abusing this flaw. This vulnerability affects Firefox < 97.0.2, Firefox ESR < 91.6.1, Firefox for Android < 97.3.0, Thunderbird < 91.6.2, and Focus < 97.3.0.
Mozilla Firefox;61.0.1;True;['CVE-2022-28281'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28281;If a compromised content process sent an unexpected number of WebAuthN Extensions in a Register command to the parent process, an out of bounds write would have occurred leading to memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 91.8, Firefox < 99, and Firefox ESR < 91.8.
Mozilla Firefox;61.0.1;True;['CVE-2022-28282'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28282;"By using a link with <code>rel=""localization""</code> a use-after-free could have been triggered by destroying an object during JavaScript execution and then referencing the object through a freed pointer, leading to a potential exploitable crash. This vulnerability affects Thunderbird < 91.8, Firefox < 99, and Firefox ESR < 91.8."
Mozilla Firefox;61.0.1;True;['CVE-2022-28283'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28283;The sourceMapURL feature in devtools was missing security checks that would have allowed a webpage to attempt to include local files or other files that should have been inaccessible. This vulnerability affects Firefox < 99.
Mozilla Firefox;61.0.1;True;['CVE-2022-28284'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28284;"SVG's <code>&lt;use&gt;</code> element could have been used to load unexpected content that could have executed script in certain circumstances. While the specification seems to allow this, other browsers do not, and web developers relied on this property for script security so gecko's implementation was aligned with theirs. This vulnerability affects Firefox < 99."
Mozilla Firefox;61.0.1;True;['CVE-2022-28285'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28285;When generating the assembly code for <code>MLoadTypedArrayElementHole</code>, an incorrect AliasSet was used. In conjunction with another vulnerability this could have been used for an out of bounds memory read. This vulnerability affects Thunderbird < 91.8, Firefox < 99, and Firefox ESR < 91.8.
Mozilla Firefox;61.0.1;True;['CVE-2022-28286'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28286;Due to a layout change, iframe contents could have been rendered outside of its border. This could have led to user confusion or spoofing attacks. This vulnerability affects Thunderbird < 91.8, Firefox < 99, and Firefox ESR < 91.8.
Mozilla Firefox;61.0.1;True;['CVE-2022-28287'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28287;In unusual circumstances, selecting text could cause text selection caching to behave incorrectly, leading to a crash. This vulnerability affects Firefox < 99.
Mozilla Firefox;61.0.1;True;['CVE-2022-28288'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28288;Mozilla developers and community members Randell Jesup, Sebastian Hengst, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 98. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 99.
Mozilla Firefox;61.0.1;True;['CVE-2022-28289'];https://www.prio-n.com/kb/vulnerability/CVE-2022-28289;Mozilla developers and community members Nika Layzell, Andrew McCreight, Gabriele Svelto, and the Mozilla Fuzzing Team reported memory safety bugs present in Thunderbird 91.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 91.8, Firefox < 99, and Firefox ESR < 91.8.
Mozilla Firefox;61.0.1;True;['CVE-2022-29909'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29909;Documents in deeply-nested cross-origin browsing contexts could have obtained permissions granted to the top-level origin, bypassing the existing prompt and wrongfully inheriting the top-level permissions. This vulnerability affects Thunderbird < 91.9, Firefox ESR < 91.9, and Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29910'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29910;When closed or sent to the background, Firefox for Android would not properly record and persist HSTS settings.<br>*Note: This issue only affected Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29911'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29911;An improper implementation of the new iframe sandbox keyword <code>allow-top-navigation-by-user-activation</code> could lead to script execution without <code>allow-scripts</code> being present. This vulnerability affects Thunderbird < 91.9, Firefox ESR < 91.9, and Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29912'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29912;Requests initiated through reader mode did not properly omit cookies with a SameSite attribute. This vulnerability affects Thunderbird < 91.9, Firefox ESR < 91.9, and Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29914'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29914;When reusing existing popups Firefox would have allowed them to cover the fullscreen notification UI, which could have enabled browser spoofing attacks. This vulnerability affects Thunderbird < 91.9, Firefox ESR < 91.9, and Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29915'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29915;The Performance API did not properly hide the fact whether a request cross-origin resource has observed redirects. This vulnerability affects Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29916'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29916;Firefox behaved slightly differently for already known resources when loading CSS resources involving CSS variables. This could have been used to probe the browser history. This vulnerability affects Thunderbird < 91.9, Firefox ESR < 91.9, and Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29917'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29917;Mozilla developers Andrew McCreight, Gabriele Svelto, Tom Ritter and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 99 and Firefox ESR 91.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 91.9, Firefox ESR < 91.9, and Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-29918'];https://www.prio-n.com/kb/vulnerability/CVE-2022-29918;Mozilla developers Gabriele Svelto, Randell Jesup and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 99. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 100.
Mozilla Firefox;61.0.1;True;['CVE-2022-31736'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31736;A malicious website could have learned the size of a cross-origin resource that supported Range requests. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31737'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31737;A malicious webpage could have caused an out-of-bounds write in WebGL, leading to memory corruption and a potentially exploitable crash. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31738'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31738;When exiting fullscreen mode, an iframe could have confused the browser about the current state of fullscreen, resulting in potential user confusion or spoofing attacks. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31739'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31739;When downloading files on Windows, the % character was not escaped, which could have lead to a download incorrectly being saved to attacker-influenced paths that used variables such as %HOMEPATH% or %APPDATA%.<br>*This bug only affects Firefox for Windows. Other operating systems are unaffected.*. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31740'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31740;On arm64, WASM code could have resulted in incorrect assembly generation leading to a register allocation problem, and a potentially exploitable crash. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31741'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31741;A crafted CMS message could have been processed incorrectly, leading to an invalid memory read, and potentially further memory corruption. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31742'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31742;An attacker could have exploited a timing attack by sending a large number of allowCredential entries and detecting the difference between invalid key handles and cross-origin key handles. This could have led to cross-origin account linking in violation of WebAuthn goals. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31743'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31743;Firefox's HTML parser did not correctly interpret HTML comment tags, resulting in an incongruity with other browsers. This could have been used to escape HTML comments on pages that put user-controlled data in them. This vulnerability affects Firefox < 101.
Mozilla Firefox;61.0.1;True;['CVE-2022-31744'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31744;An attacker could have injected CSS into stylesheets accessible via internal URIs, such as resource:, and in doing so bypass a page's Content Security Policy. This vulnerability affects Firefox ESR < 91.11, Thunderbird < 102, Thunderbird < 91.11, and Firefox < 101.
Mozilla Firefox;61.0.1;True;['CVE-2022-31745'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31745;If array shift operations are not used, the Garbage Collector may have become confused about valid objects. This vulnerability affects Firefox < 101.
Mozilla Firefox;61.0.1;True;['CVE-2022-31746'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31746;Internal URLs are protected by a secret UUID key, which could have been leaked to web page through the Referrer header. This vulnerability affects Firefox for iOS < 102.
Mozilla Firefox;61.0.1;True;['CVE-2022-31747'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31747;Mozilla developers Andrew McCreight, Nicolas B. Pierron, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 100 and Firefox ESR 91.9. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 91.10, Firefox < 101, and Firefox ESR < 91.10.
Mozilla Firefox;61.0.1;True;['CVE-2022-31748'];https://www.prio-n.com/kb/vulnerability/CVE-2022-31748;Mozilla developers Gabriele Svelto, Timothy Nikkel, Randell Jesup, Jon Coppeard, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 100. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 101.
Mozilla Firefox;61.0.1;True;['CVE-2022-3266'];https://www.prio-n.com/kb/vulnerability/CVE-2022-3266;An out-of-bounds read can occur when decoding H264 video. This results in a potentially exploitable crash. This vulnerability affects Firefox ESR < 102.3, Thunderbird < 102.3, and Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-34468'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34468;An iframe that was not permitted to run scripts could do so if the user clicked on a <code>javascript:</code> link. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-34469'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34469;"When a TLS Certificate error occurs on a domain protected by the HSTS header, the browser should not allow the user to bypass the certificate error. On Firefox for Android, the user was presented with the option to bypass the error; this could only have been done by the user explicitly. <br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 102."
Mozilla Firefox;61.0.1;True;['CVE-2022-34470'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34470;Session history navigations may have led to a use-after-free and potentially exploitable crash. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-34471'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34471;When downloading an update for an addon, the downloaded addon update's version was not verified to match the version selected from the manifest. If the manifest had been tampered with on the server, an attacker could trick the browser into downgrading the addon to a prior version. This vulnerability affects Firefox < 102.
Mozilla Firefox;61.0.1;True;['CVE-2022-34472'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34472;If there was a PAC URL set and the server that hosts the PAC was not reachable, OCSP requests would have been blocked, resulting in incorrect error pages being shown. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-34473'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34473;"The HTML Sanitizer should have sanitized the <code>href</code> attribute of SVG <code>&lt;use&gt;</code> tags; however it incorrectly did not sanitize <code>xlink:href</code> attributes. This vulnerability affects Firefox < 102."
Mozilla Firefox;61.0.1;True;['CVE-2022-34474'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34474;Even when an iframe was sandboxed with <code>allow-top-navigation-by-user-activation</code>, if it received a redirect header to an external protocol the browser would process the redirect and prompt the user as appropriate. This vulnerability affects Firefox < 102.
Mozilla Firefox;61.0.1;True;['CVE-2022-34475'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34475;"SVG <code>&lt;use&gt;</code> tags that referenced a same-origin document could have resulted in script execution if attacker input was sanitized via the HTML Sanitizer API. This would have required the attacker to reference a same-origin JavaScript file containing the script to be executed. This vulnerability affects Firefox < 102."
Mozilla Firefox;61.0.1;True;['CVE-2022-34476'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34476;ASN.1 parsing of an indefinite SEQUENCE inside an indefinite GROUP could have resulted in the parser accepting malformed ASN.1. This vulnerability affects Firefox < 102.
Mozilla Firefox;61.0.1;True;['CVE-2022-34477'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34477;"The MediaError message property should be consistent to avoid leaking information about cross-origin resources; however for a same-site cross-origin resource, the message could have leaked information enabling XS-Leaks attacks. This vulnerability affects Firefox < 102."
Mozilla Firefox;61.0.1;True;['CVE-2022-34478'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34478;The <code>ms-msdt</code>, <code>search</code>, and <code>search-ms</code> protocols deliver content to Microsoft applications, bypassing the browser, when a user accepts a prompt. These applications have had known vulnerabilities, exploited in the wild (although we know of none exploited through Thunderbird), so in this release Thunderbird has blocked these protocols from prompting the user to open them.<br>*This bug only affects Thunderbird on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-34479'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34479;A malicious website that could create a popup could have resized the popup to overlay the address bar with its own content, resulting in potential user confusion or spoofing attacks. <br>*This bug only affects Thunderbird for Linux. Other operating systems are unaffected.*. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-34480'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34480;Within the <code>lg_init()</code> function, if several allocations succeed but then one fails, an uninitialized pointer would have been freed despite never being allocated. This vulnerability affects Firefox < 102.
Mozilla Firefox;61.0.1;True;['CVE-2022-34481'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34481;In the <code>nsTArray_Impl::ReplaceElementsAt()</code> function, an integer overflow could have occurred when the number of elements to replace was too large for the container. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-34482', 'CVE-2022-34483'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34482;An attacker who could have convinced a user to drag and drop an image to a filesystem could have manipulated the resulting filename to contain an executable extension, and by extension potentially tricked the user into executing malicious code. While very similar, this is a separate issue from CVE-2022-34483. This vulnerability affects Firefox < 102.
Mozilla Firefox;61.0.1;True;['CVE-2022-34482', 'CVE-2022-34483'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34483;An attacker who could have convinced a user to drag and drop an image to a filesystem could have manipulated the resulting filename to contain an executable extension, and by extension potentially tricked the user into executing malicious code. While very similar, this is a separate issue from CVE-2022-34482. This vulnerability affects Firefox < 102.
Mozilla Firefox;61.0.1;True;['CVE-2022-34484'];https://www.prio-n.com/kb/vulnerability/CVE-2022-34484;The Mozilla Fuzzing Team reported potential vulnerabilities present in Thunderbird 91.10. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 102, Firefox ESR < 91.11, Thunderbird < 102, and Thunderbird < 91.11.
Mozilla Firefox;61.0.1;True;['CVE-2022-36314'];https://www.prio-n.com/kb/vulnerability/CVE-2022-36314;When opening a Windows shortcut from the local filesystem, an attacker could supply a remote path that would lead to unexpected network requests from the operating system.<br>This bug only affects Firefox for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 102.1, Firefox < 103, and Thunderbird < 102.1.
Mozilla Firefox;61.0.1;True;['CVE-2022-36315'];https://www.prio-n.com/kb/vulnerability/CVE-2022-36315;When loading a script with Subresource Integrity, attackers with an injection capability could trigger the reuse of previously cached entries with incorrect, different integrity metadata. This vulnerability affects Firefox < 103.
Mozilla Firefox;61.0.1;True;['CVE-2022-36316'];https://www.prio-n.com/kb/vulnerability/CVE-2022-36316;When using the Performance API, an attacker was able to notice subtle differences between PerformanceEntries and thus learn whether the target URL had been subject to a redirect. This vulnerability affects Firefox < 103.
Mozilla Firefox;61.0.1;True;['CVE-2022-36317'];https://www.prio-n.com/kb/vulnerability/CVE-2022-36317;When visiting a website with an overly long URL, the user interface would start to hang. Due to session restore, this could lead to a permanent Denial of Service.<br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 103.
Mozilla Firefox;61.0.1;True;['CVE-2022-36318'];https://www.prio-n.com/kb/vulnerability/CVE-2022-36318;When visiting directory listings for `chrome://` URLs as source text, some parameters were reflected. This vulnerability affects Firefox ESR < 102.1, Firefox ESR < 91.12, Firefox < 103, Thunderbird < 102.1, and Thunderbird < 91.12.
Mozilla Firefox;61.0.1;True;['CVE-2022-36319'];https://www.prio-n.com/kb/vulnerability/CVE-2022-36319;When combining CSS properties for overflow and transform, the mouse cursor could interact with different coordinates than displayed. This vulnerability affects Firefox ESR < 102.1, Firefox ESR < 91.12, Firefox < 103, Thunderbird < 102.1, and Thunderbird < 91.12.
Mozilla Firefox;61.0.1;True;['CVE-2022-36320'];https://www.prio-n.com/kb/vulnerability/CVE-2022-36320;Mozilla developers and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 102. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 103.
Mozilla Firefox;61.0.1;True;['CVE-2022-38472'];https://www.prio-n.com/kb/vulnerability/CVE-2022-38472;An attacker could have abused XSLT error handling to associate attacker-controlled content with another origin which was displayed in the address bar. This could have been used to fool the user into submitting data intended for the spoofed origin. This vulnerability affects Thunderbird < 102.2, Thunderbird < 91.13, Firefox ESR < 91.13, Firefox ESR < 102.2, and Firefox < 104.
Mozilla Firefox;61.0.1;True;['CVE-2022-38473'];https://www.prio-n.com/kb/vulnerability/CVE-2022-38473;A cross-origin iframe referencing an XSLT document would inherit the parent domain's permissions (such as microphone or camera access). This vulnerability affects Thunderbird < 102.2, Thunderbird < 91.13, Firefox ESR < 91.13, Firefox ESR < 102.2, and Firefox < 104.
Mozilla Firefox;61.0.1;True;['CVE-2022-38474'];https://www.prio-n.com/kb/vulnerability/CVE-2022-38474;A website that had permission to access the microphone could record audio without the audio notification being shown. This bug does not allow the attacker to bypass the permission prompt - it only affects the notification shown once permission has been granted.<br />*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 104.
Mozilla Firefox;61.0.1;True;['CVE-2022-38475'];https://www.prio-n.com/kb/vulnerability/CVE-2022-38475;An attacker could have written a value to the first element in a zero-length JavaScript array. Although the array was zero-length, the value was not written to an invalid memory address. This vulnerability affects Firefox < 104.
Mozilla Firefox;61.0.1;True;['CVE-2022-38477'];https://www.prio-n.com/kb/vulnerability/CVE-2022-38477;Mozilla developer Nika Layzell and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 103 and Firefox ESR 102.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 102.2, Thunderbird < 102.2, and Firefox < 104.
Mozilla Firefox;61.0.1;True;['CVE-2022-38478'];https://www.prio-n.com/kb/vulnerability/CVE-2022-38478;Members the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 103, Firefox ESR 102.1, and Firefox ESR 91.12. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Thunderbird < 102.2, Thunderbird < 91.13, Firefox ESR < 91.13, Firefox ESR < 102.2, and Firefox < 104.
Mozilla Firefox;61.0.1;True;['CVE-2022-40956'];https://www.prio-n.com/kb/vulnerability/CVE-2022-40956;When injecting an HTML base element, some requests would ignore the CSP's base-uri settings and accept the injected element's base instead. This vulnerability affects Firefox ESR < 102.3, Thunderbird < 102.3, and Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-40957'];https://www.prio-n.com/kb/vulnerability/CVE-2022-40957;Inconsistent data in instruction and data cache when creating wasm code could lead to a potentially exploitable crash.<br>*This bug only affects Firefox on ARM64 platforms.*. This vulnerability affects Firefox ESR < 102.3, Thunderbird < 102.3, and Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-40958'];https://www.prio-n.com/kb/vulnerability/CVE-2022-40958;By injecting a cookie with certain special characters, an attacker on a shared subdomain which is not a secure context could set and thus overwrite cookies from a secure context, leading to session fixation and other attacks. This vulnerability affects Firefox ESR < 102.3, Thunderbird < 102.3, and Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-40959'];https://www.prio-n.com/kb/vulnerability/CVE-2022-40959;During iframe navigation, certain pages did not have their FeaturePolicy fully initialized leading to a bypass that leaked device permissions into untrusted subdocuments. This vulnerability affects Firefox ESR < 102.3, Thunderbird < 102.3, and Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-40960'];https://www.prio-n.com/kb/vulnerability/CVE-2022-40960;Concurrent use of the URL parser with non-UTF-8 data was not thread-safe. This could lead to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox ESR < 102.3, Thunderbird < 102.3, and Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-40961'];https://www.prio-n.com/kb/vulnerability/CVE-2022-40961;During startup, a graphics driver with an unexpected name could lead to a stack-buffer overflow causing a potentially exploitable crash.<br>*This issue only affects Firefox for Android. Other operating systems are not affected.*. This vulnerability affects Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-40962'];https://www.prio-n.com/kb/vulnerability/CVE-2022-40962;Mozilla developers Nika Layzell, Timothy Nikkel, Sebastian Hengst, Andreas Pehrson, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 104 and Firefox ESR 102.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 102.3, Thunderbird < 102.3, and Firefox < 105.
Mozilla Firefox;61.0.1;True;['CVE-2022-42927'];https://www.prio-n.com/kb/vulnerability/CVE-2022-42927;A same-origin policy violation could have allowed the theft of cross-origin URL entries, leaking the result of a redirect, via `performance.getEntries()`. This vulnerability affects Firefox < 106, Firefox ESR < 102.4, and Thunderbird < 102.4.
Mozilla Firefox;61.0.1;True;['CVE-2022-42928'];https://www.prio-n.com/kb/vulnerability/CVE-2022-42928;Certain types of allocations were missing annotations that, if the Garbage Collector was in a specific state, could have lead to memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 106, Firefox ESR < 102.4, and Thunderbird < 102.4.
Mozilla Firefox;61.0.1;True;['CVE-2022-42929'];https://www.prio-n.com/kb/vulnerability/CVE-2022-42929;If a website called `window.print()` in a particular way, it could cause a denial of service of the browser, which may persist beyond browser restart depending on the user's session restore settings. This vulnerability affects Firefox < 106, Firefox ESR < 102.4, and Thunderbird < 102.4.
Mozilla Firefox;61.0.1;True;['CVE-2022-42930'];https://www.prio-n.com/kb/vulnerability/CVE-2022-42930;If two Workers were simultaneously initializing their CacheStorage, a data race could have occurred in the `ThirdPartyUtil` component. This vulnerability affects Firefox < 106.
Mozilla Firefox;61.0.1;True;['CVE-2022-42931'];https://www.prio-n.com/kb/vulnerability/CVE-2022-42931;Logins saved by Firefox should be managed by the Password Manager component which uses encryption to save files on-disk. Instead, the username (not password) was saved by the Form Manager to an unencrypted file on disk. This vulnerability affects Firefox < 106.
Mozilla Firefox;61.0.1;True;['CVE-2022-42932'];https://www.prio-n.com/kb/vulnerability/CVE-2022-42932;Mozilla developers Ashley Hale and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 105 and Firefox ESR 102.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 106, Firefox ESR < 102.4, and Thunderbird < 102.4.
Mozilla Firefox;61.0.1;True;['CVE-2022-45403'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45403;"Service Workers should not be able to infer information about opaque cross-origin responses; but timing information for cross-origin media combined with Range requests might have allowed them to determine the presence or length of a media file. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107."
Mozilla Firefox;61.0.1;True;['CVE-2022-45404'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45404;Through a series of popup and <code>window.print()</code> calls, an attacker can cause a window to go fullscreen without the user seeing the notification prompt, resulting in potential user confusion or spoofing attacks. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45405'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45405;Freeing arbitrary <code>nsIInputStream</code>'s on a different thread than creation could have led to a use-after-free and potentially exploitable crash. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45406'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45406;If an out-of-memory condition occurred when creating a JavaScript global, a JavaScript realm may be deleted while references to it lived on in a BaseShape. This could lead to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45407'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45407;If an attacker loaded a font using <code>FontFace()</code> on a background worker, a use-after-free could have occurred, leading to a potentially exploitable crash. This vulnerability affects Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45408'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45408;Through a series of popups that reuse windowName, an attacker can cause a window to go fullscreen without the user seeing the notification prompt, resulting in potential user confusion or spoofing attacks. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45409'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45409;The garbage collector could have been aborted in several states and zones and <code>GCRuntime::finishCollection</code> may not have been called, leading to a use-after-free and potentially exploitable crash. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45410'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45410;When a ServiceWorker intercepted a request with <code>FetchEvent</code>, the origin of the request was lost after the ServiceWorker took ownership of it. This had the effect of negating SameSite cookie protections. This was addressed in the spec and then in browsers. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45411'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45411;"Cross-Site Tracing occurs when a server will echo a request back via the Trace method, allowing an XSS attack to access to authorization headers and cookies inaccessible to JavaScript (such as cookies protected by HTTPOnly). To mitigate this attack, browsers placed limits on <code>fetch()</code> and XMLHttpRequest; however some webservers have implemented non-standard headers such as <code>X-Http-Method-Override</code> that override the HTTP method, and made this attack possible again. Thunderbird has applied the same mitigations to the use of this and similar headers. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107."
Mozilla Firefox;61.0.1;True;['CVE-2022-45412'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45412;When resolving a symlink such as <code>file:///proc/self/fd/1</code>, an error message may be produced where the symlink was resolved to a string containing unitialized memory in the buffer. <br>*This bug only affects Thunderbird on Unix-based operated systems (Android, Linux, MacOS). Windows is unaffected.*. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45413'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45413;Using the <code>S.browser_fallback_url parameter</code> parameter, an attacker could redirect a user to a URL and cause SameSite=Strict cookies to be sent.<br>*This issue only affects Firefox for Android. Other operating systems are not affected.*. This vulnerability affects Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45415'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45415;When downloading an HTML file, if the title of the page was formatted as a filename with a malicious extension, Firefox may have saved the file with that extension, leading to possible system compromise if the downloaded file was later ran. This vulnerability affects Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45416'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45416;"Keyboard events reference strings like ""KeyA"" that were at fixed, known, and widely-spread addresses. Cache-based timing attacks such as Prime+Probe could have possibly figured out which keys were being pressed. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107."
Mozilla Firefox;61.0.1;True;['CVE-2022-45417'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45417;Service Workers did not detect Private Browsing Mode correctly in all cases, which could have led to Service Workers being written to disk for websites visited in Private Browsing Mode. This would not have persisted them in a state where they would run again, but it would have leaked Private Browsing Mode details to disk. This vulnerability affects Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45418'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45418;If a custom mouse cursor is specified in CSS, under certain circumstances the cursor could have been drawn over the browser UI, resulting in potential user confusion or spoofing attacks. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45419'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45419;If the user added a security exception for an invalid TLS certificate, opened an ongoing TLS connection with a server that used that certificate, and then deleted the exception, Firefox would have kept the connection alive, making it seem like the certificate was still trusted. This vulnerability affects Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45420'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45420;Use tables inside of an iframe, an attacker could have caused iframe contents to be rendered outside the boundaries of the iframe, resulting in potential user confusion or spoofing attacks. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-45421'];https://www.prio-n.com/kb/vulnerability/CVE-2022-45421;Mozilla developers Andrew McCreight and Gabriele Svelto reported memory safety bugs present in Thunderbird 102.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 102.5, Thunderbird < 102.5, and Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-46871'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46871;An out of date library (libusrsctp) contained vulnerabilities that could potentially be exploited. This vulnerability affects Firefox < 108.
Mozilla Firefox;61.0.1;True;['CVE-2022-46872'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46872;An attacker who compromised a content process could have partially escaped the sandbox to read arbitrary files via clipboard-related IPC messages.<br>*This bug only affects Thunderbird for Linux. Other operating systems are unaffected.*. This vulnerability affects Firefox < 108, Firefox ESR < 102.6, and Thunderbird < 102.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-46873'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46873;Because Firefox did not implement the <code>unsafe-hashes</code> CSP directive, an attacker who was able to inject markup into a page otherwise protected by a Content Security Policy may have been able to inject executable script. This would be severely constrained by the specified Content Security Policy of the document. This vulnerability affects Firefox < 108.
Mozilla Firefox;61.0.1;True;['CVE-2022-46874'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46874;A file with a long filename could have had its filename truncated to remove the valid extension, leaving a malicious extension in its place. This could potentially led to user confusion and the execution of malicious code.<br/>*Note*: This issue was originally included in the advisories for Thunderbird 102.6, but a patch (specific to Thunderbird) was omitted, resulting in it actually being fixed in Thunderbird 102.6.1. This vulnerability affects Firefox < 108, Thunderbird < 102.6.1, Thunderbird < 102.6, and Firefox ESR < 102.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-46875'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46875;The executable file warning was not presented when downloading .atloc and .ftploc files, which can run commands on a user's computer. <br>*Note: This issue only affected Mac OS operating systems. Other operating systems are unaffected.*. This vulnerability affects Firefox < 108, Firefox ESR < 102.6, and Thunderbird < 102.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-46877'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46877;By confusing the browser, the fullscreen notification could have been delayed or suppressed, resulting in potential user confusion or spoofing attacks. This vulnerability affects Firefox < 108.
Mozilla Firefox;61.0.1;True;['CVE-2022-46878'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46878;Mozilla developers Randell Jesup, Valentin Gosu, Olli Pettay, and the Mozilla Fuzzing Team reported memory safety bugs present in Thunderbird 102.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 108, Firefox ESR < 102.6, and Thunderbird < 102.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-46879'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46879;Mozilla developers and community members Lukas Bernhard, Gabriele Svelto, Randell Jesup, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 107. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 108.
Mozilla Firefox;61.0.1;True;['CVE-2022-46880'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46880;A missing check related to tex units could have led to a use-after-free and potentially exploitable crash.<br />*Note*: This advisory was added on December 13th, 2022 after we better understood the impact of the issue. The fix was included in the original release of Firefox 105. This vulnerability affects Firefox ESR < 102.6, Firefox < 105, and Thunderbird < 102.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-46881'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46881;"An optimization in WebGL was incorrect in some cases, and could have led to memory corruption and a potentially exploitable crash.
*Note*: This advisory was added on December 13th, 2022 after we better understood the impact of the issue. The fix was included in the original release of Firefox 106. This vulnerability affects Firefox < 106, Firefox ESR < 102.6, and Thunderbird < 102.6."
Mozilla Firefox;61.0.1;True;['CVE-2022-46882'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46882;A use-after-free in WebGL extensions could have led to a potentially exploitable crash. This vulnerability affects Firefox < 107, Firefox ESR < 102.6, and Thunderbird < 102.6.
Mozilla Firefox;61.0.1;True;['CVE-2022-46883'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46883;Mozilla developers Gabriele Svelto, Yulia Startsev, Andrew McCreight and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 106. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code.<br />*Note*: This advisory was added on December 13th, 2022 after discovering it was inadvertently left out of the original advisory. The fix was included in the original release of Firefox 107. This vulnerability affects Firefox < 107.
Mozilla Firefox;61.0.1;True;['CVE-2022-46884'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46884;"A potential use-after-free vulnerability existed in SVG Images if the Refresh Driver was destroyed at an inopportune time.  This could have lead to memory corruption or a potentially exploitable crash.
*Note*: This advisory was added on December 13th, 2022 after discovering it was inadvertently left out of the original advisory. The fix was included in the original release of Firefox 106. This vulnerability affects Firefox < 106."
Mozilla Firefox;61.0.1;True;['CVE-2022-46885'];https://www.prio-n.com/kb/vulnerability/CVE-2022-46885;Mozilla developers Timothy Nikkel, Ashley Hale, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 105. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 106.
Mozilla Firefox;61.0.1;True;['CVE-2023-0767'];https://www.prio-n.com/kb/vulnerability/CVE-2023-0767;An attacker could construct a PKCS 12 cert bundle in such a way that could allow for arbitrary memory writes via PKCS 12 Safe Bag attributes being mishandled. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-23597'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23597;A compromised web child process could disable web security opening restrictions, leading to a new child process being spawned within the <code>file://</code> context. Given a reliable exploit primitive, this new process could be exploited again leading to arbitrary file read. This vulnerability affects Firefox < 109.
Mozilla Firefox;61.0.1;True;['CVE-2023-23598'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23598;Due to the Firefox GTK wrapper code's use of text/plain for drag data and GTK treating all text/plain MIMEs containing file URLs as being dragged a website could arbitrarily read a file via a call to <code>DataTransfer.setData</code>. This vulnerability affects Firefox < 109, Thunderbird < 102.7, and Firefox ESR < 102.7.
Mozilla Firefox;61.0.1;True;['CVE-2023-23599'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23599;When copying a network request from the developer tools panel as a curl command the output was not being properly sanitized and could allow arbitrary commands to be hidden within. This vulnerability affects Firefox < 109, Thunderbird < 102.7, and Firefox ESR < 102.7.
Mozilla Firefox;61.0.1;True;['CVE-2023-23600'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23600;Per origin notification permissions were being stored in a way that didn't take into account what browsing context the permission was granted in. This lead to the possibility of notifications to be displayed during different browsing sessions.<br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 109.
Mozilla Firefox;61.0.1;True;['CVE-2023-23601'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23601;Navigations were being allowed when dragging a URL from a cross-origin iframe into the same tab which could lead to website spoofing attacks. This vulnerability affects Firefox < 109, Thunderbird < 102.7, and Firefox ESR < 102.7.
Mozilla Firefox;61.0.1;True;['CVE-2023-23602'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23602;A mishandled security check when creating a WebSocket in a WebWorker caused the Content Security Policy connect-src header to be ignored. This could lead to connections to restricted origins from inside WebWorkers. This vulnerability affects Firefox < 109, Thunderbird < 102.7, and Firefox ESR < 102.7.
Mozilla Firefox;61.0.1;True;['CVE-2023-23603'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23603;Regular expressions used to filter out forbidden properties and values from style directives in calls to <code>console.log</code> weren't accounting for external URLs. Data could then be potentially exfiltrated from the browser. This vulnerability affects Firefox < 109, Thunderbird < 102.7, and Firefox ESR < 102.7.
Mozilla Firefox;61.0.1;True;['CVE-2023-23604'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23604;A duplicate <code>SystemPrincipal</code> object could be created when parsing a non-system html document via <code>DOMParser::ParseFromSafeString</code>. This could have lead to bypassing web security checks. This vulnerability affects Firefox < 109.
Mozilla Firefox;61.0.1;True;['CVE-2023-23605'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23605;Mozilla developers and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 108 and Firefox ESR 102.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 109, Thunderbird < 102.7, and Firefox ESR < 102.7.
Mozilla Firefox;61.0.1;True;['CVE-2023-23606'];https://www.prio-n.com/kb/vulnerability/CVE-2023-23606;Mozilla developers and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 108. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 109.
Mozilla Firefox;61.0.1;True;['CVE-2023-25728'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25728;The <code>Content-Security-Policy-Report-Only</code> header could allow an attacker to leak a child iframe's unredacted URI when interaction with that iframe triggers a redirect. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25729'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25729;Permission prompts for opening external schemes were only shown for <code>ContentPrincipals</code> resulting in extensions being able to open them without user interaction via <code>ExpandedPrincipals</code>. This could lead to further malicious actions such as downloading files or interacting with software already installed on the system. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25730'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25730;A background script invoking <code>requestFullscreen</code> and then blocking the main thread could force the browser into fullscreen mode indefinitely, resulting in potential user confusion or spoofing attacks. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25731'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25731;Due to URL previews in the network panel of developer tools improperly storing URLs, query parameters could potentially be used to overwrite global objects in privileged code. This vulnerability affects Firefox < 110.
Mozilla Firefox;61.0.1;True;['CVE-2023-25732'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25732;When encoding data from an <code>inputStream</code> in <code>xpcom</code> the size of the input being encoded was not correctly calculated potentially leading to an out of bounds memory write. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25733'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25733;The return value from `gfx::SourceSurfaceSkia::Map()` wasn't being verified which could have potentially lead to a null pointer dereference. This vulnerability affects Firefox < 110.
Mozilla Firefox;61.0.1;True;['CVE-2023-25734'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25734;After downloading a Windows <code>.url</code> shortcut from the local filesystem, an attacker could supply a remote path that would lead to unexpected network requests from the operating system. This also had the potential to leak NTLM credentials to the resource.<br>*This bug only affects Firefox on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25735'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25735;Cross-compartment wrappers wrapping a scripted proxy could have caused objects from other compartments to be stored in the main compartment resulting in a use-after-free after unwrapping the proxy. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25736'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25736;An invalid downcast from `nsHTMLDocument` to `nsIContent` could have lead to undefined behavior. This vulnerability affects Firefox < 110.
Mozilla Firefox;61.0.1;True;['CVE-2023-25737'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25737;An invalid downcast from <code>nsTextNode</code> to <code>SVGElement</code> could have lead to undefined behavior. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25738'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25738;Members of the <code>DEVMODEW</code> struct set by the printer device driver weren't being validated and could have resulted in invalid values which in turn would cause the browser to attempt out of bounds access to related variables.<br>*This bug only affects Firefox on Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25739'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25739;Module load requests that failed were not being checked as to whether or not they were cancelled causing a use-after-free in <code>ScriptLoadContext</code>. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25740'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25740;After downloading a Windows <code>.scf</code> script from the local filesystem, an attacker could supply a remote path that would lead to unexpected network requests from the operating system. This also had the potential to leak NTLM credentials to the resource.<br>*This bug only affects Firefox for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox < 110.
Mozilla Firefox;61.0.1;True;['CVE-2023-25741'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25741;When dragging and dropping an image cross-origin, the image's size could potentially be leaked. This behavior was shipped in 109 and caused web compatibility problems as well as this security concern, so the behavior was disabled until further review. This vulnerability affects Firefox < 110.
Mozilla Firefox;61.0.1;True;['CVE-2023-25742'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25742;When importing a SPKI RSA public key as ECDSA P-256, the key would be handled incorrectly causing the tab to crash. This vulnerability affects Firefox < 110, Thunderbird < 102.8, and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25744'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25744;Mozilla developers Kershaw Chang and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 109 and Firefox ESR 102.7. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 110 and Firefox ESR < 102.8.
Mozilla Firefox;61.0.1;True;['CVE-2023-25745'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25745;Mozilla developers Timothy Nikkel, Gabriele Svelto, Jeff Muizelaar and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 109. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 110.
Mozilla Firefox;61.0.1;True;['CVE-2023-25747'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25747;"A potential use-after-free in libaudio was fixed by disabling the AAudio backend when running on Android API below version 30.
*This bug only affects Firefox for Android. Other versions of Firefox are unaffected.* This vulnerability affects Firefox for Android < 110.1.0."
Mozilla Firefox;61.0.1;True;['CVE-2023-25748'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25748;By displaying a prompt with a long description, the fullscreen notification could have been hidden, resulting in potential user confusion or spoofing attacks. <br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 111.
Mozilla Firefox;61.0.1;True;['CVE-2023-25749'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25749;Android applications with unpatched vulnerabilities can be launched from a browser using Intents, exposing users to these vulnerabilities. Firefox will now confirm with users that they want to launch an external application before doing so. <br>*This bug only affects Firefox for Android. Other versions of Firefox are unaffected.*. This vulnerability affects Firefox < 111.
Mozilla Firefox;61.0.1;True;['CVE-2023-25750'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25750;Under certain circumstances, a ServiceWorker's offline cache may have leaked to the file system when using private browsing mode. This vulnerability affects Firefox < 111.
Mozilla Firefox;61.0.1;True;['CVE-2023-25751'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25751;Sometimes, when invalidating JIT code while following an iterator, the newly generated code could be overwritten incorrectly. This could lead to a potentially exploitable crash. This vulnerability affects Firefox < 111, Firefox ESR < 102.9, and Thunderbird < 102.9.
Mozilla Firefox;61.0.1;True;['CVE-2023-25752'];https://www.prio-n.com/kb/vulnerability/CVE-2023-25752;When accessing throttled streams, the count of available bytes needed to be checked in the calling function to be within bounds. This may have lead future code to be incorrect and vulnerable. This vulnerability affects Firefox < 111, Firefox ESR < 102.9, and Thunderbird < 102.9.
Mozilla Firefox;61.0.1;True;['CVE-2023-28159'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28159;The fullscreen notification could have been hidden on Firefox for Android by using download popups, resulting in potential user confusion or spoofing attacks. <br>*This bug only affects Firefox for Android. Other operating systems are unaffected.*. This vulnerability affects Firefox < 111.
Mozilla Firefox;61.0.1;True;['CVE-2023-28160'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28160;When following a redirect to a publicly accessible web extension file, the URL may have been translated to the actual local path, leaking potentially sensitive information. This vulnerability affects Firefox < 111.
Mozilla Firefox;61.0.1;True;['CVE-2023-28161'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28161;"If temporary ""one-time"" permissions, such as the ability to use the Camera, were granted to a document loaded using a file: URL, that permission persisted in that tab for all other documents loaded from a file: URL. This is potentially dangerous if the local files came from different sources, such as in a download directory. This vulnerability affects Firefox < 111."
Mozilla Firefox;61.0.1;True;['CVE-2023-28162'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28162;While implementing AudioWorklets, some code may have casted one type to another, invalid, dynamic type. This could have led to a potentially exploitable crash. This vulnerability affects Firefox < 111, Firefox ESR < 102.9, and Thunderbird < 102.9.
Mozilla Firefox;61.0.1;True;['CVE-2023-28163'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28163;When downloading files through the Save As dialog on Windows with suggested filenames containing environment variable names, Windows would have resolved those in the context of the current user. <br>*This bug only affects Firefox on Windows. Other versions of Firefox are unaffected.*. This vulnerability affects Firefox < 111, Firefox ESR < 102.9, and Thunderbird < 102.9.
Mozilla Firefox;61.0.1;True;['CVE-2023-28164'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28164;Dragging a URL from a cross-origin iframe that was removed during the drag could have led to user confusion and website spoofing attacks. This vulnerability affects Firefox < 111, Firefox ESR < 102.9, and Thunderbird < 102.9.
Mozilla Firefox;61.0.1;True;['CVE-2023-28176'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28176;Mozilla developers Timothy Nikkel, Andrew McCreight, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 110 and Firefox ESR 102.8. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 111, Firefox ESR < 102.9, and Thunderbird < 102.9.
Mozilla Firefox;61.0.1;True;['CVE-2023-28177'];https://www.prio-n.com/kb/vulnerability/CVE-2023-28177;Mozilla developers and community members Calixte Denizet, Gabriele Svelto, Andrew McCreight, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 110. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 111.
Mozilla Firefox;61.0.1;True;['CVE-2023-29531'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29531;"An attacker could have caused an out of bounds memory access using WebGL APIs, leading to memory corruption and a potentially exploitable crash.

*This bug only affects Firefox and¬†Thunderbird for macOS. Other operating systems are unaffected.* This vulnerability affects Firefox < 112, Firefox ESR < 102.10, and Thunderbird < 102.10."
Mozilla Firefox;61.0.1;True;['CVE-2023-29532'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29532;"A local attacker can trick the Mozilla Maintenance Service into applying an unsigned update file by pointing the service at an update file on a malicious SMB server. The update file can be replaced after the signature check, before the use, because the write-lock requested by the service does not work on a SMB server.

*Note: This attack requires local system access and only affects Windows. Other operating systems are not affected.* This vulnerability affects Firefox < 112, Firefox ESR < 102.10, and Thunderbird < 102.10."
Mozilla Firefox;61.0.1;True;['CVE-2023-29533'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29533;A website could have obscured the fullscreen notification by using a combination of <code>window.open</code>, fullscreen requests, <code>window.name</code> assignments, and <code>setInterval</code> calls. This could have led to user confusion and possible spoofing attacks. This vulnerability affects Firefox < 112, Focus for Android < 112, Firefox ESR < 102.10, Firefox for Android < 112, and Thunderbird < 102.10.
Mozilla Firefox;61.0.1;True;['CVE-2023-29534'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29534;"Different techniques existed to obscure the fullscreen notification in Firefox and Focus for Android.  These could have led to potential user confusion and spoofing attacks.

*This bug only affects Firefox and Focus for Android. Other versions of Firefox are unaffected.* This vulnerability affects Firefox for Android < 112 and Focus for Android < 112."
Mozilla Firefox;61.0.1;True;['CVE-2023-29535'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29535;Following a Garbage Collector compaction, weak maps may have been accessed before they were correctly traced. This resulted in memory corruption and a potentially exploitable crash. This vulnerability affects Firefox < 112, Focus for Android < 112, Firefox ESR < 102.10, Firefox for Android < 112, and Thunderbird < 102.10.
Mozilla Firefox;61.0.1;True;['CVE-2023-29536'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29536;An attacker could cause the memory manager to incorrectly free a pointer that addresses attacker-controlled memory, resulting in an assertion, memory corruption, or a potentially exploitable crash. This vulnerability affects Firefox < 112, Focus for Android < 112, Firefox ESR < 102.10, Firefox for Android < 112, and Thunderbird < 102.10.
Mozilla Firefox;61.0.1;True;['CVE-2023-29537'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29537;Multiple race conditions in the font initialization could have led to memory corruption and execution of attacker-controlled code. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-29538'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29538;Under specific circumstances a WebExtension may have received a <code>jar:file:///</code> URI instead of a <code>moz-extension:///</code> URI during a load request. This leaked directory paths on the user's machine. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-29539'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29539;When handling the filename directive in the Content-Disposition header, the filename would be truncated if the filename contained a NULL character. This could have led to reflected file download attacks potentially tricking users to install malware. This vulnerability affects Firefox < 112, Focus for Android < 112, Firefox ESR < 102.10, Firefox for Android < 112, and Thunderbird < 102.10.
Mozilla Firefox;61.0.1;True;['CVE-2023-29540'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29540;Using a redirect embedded into <code>sourceMappingUrls</code> could allow for navigation to external protocol links in sandboxed iframes without <code>allow-top-navigation-to-custom-protocols</code>. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-29541'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29541;Firefox did not properly handle downloads of files ending in <code>.desktop</code>, which can be interpreted to run attacker-controlled commands. <br>*This bug only affects Firefox for Linux on certain Distributions. Other operating systems are unaffected, and Mozilla is unable to enumerate all affected Linux Distributions.*. This vulnerability affects Firefox < 112, Focus for Android < 112, Firefox ESR < 102.10, Firefox for Android < 112, and Thunderbird < 102.10.
Mozilla Firefox;61.0.1;True;['CVE-2023-29542'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29542;"A newline in a filename could have been used to bypass the file extension security mechanisms that replace malicious file extensions such as .lnk  with .download. This could have led to accidental execution of malicious code.

*This bug only affects Firefox and Thunderbird on Windows. Other versions of Firefox¬†and Thunderbird are unaffected.* This vulnerability affects Firefox < 112, Firefox ESR < 102.10, and Thunderbird < 102.10."
Mozilla Firefox;61.0.1;True;['CVE-2023-29543'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29543;An attacker could have caused memory corruption and a potentially exploitable use-after-free of a pointer in a global object's debugger vector. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-29544'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29544;If multiple instances of resource exhaustion occurred at the incorrect time, the garbage collector could have caused memory corruption and a potentially exploitable crash. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-28163', 'CVE-2023-29545'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29545;"Similar to CVE-2023-28163, this time when choosing 'Save Link As', suggested filenames containing environment variable names would have resolved those in the context of the current user. 

*This bug only affects Firefox and¬†Thunderbird on Windows. Other versions of Firefox and¬†Thunderbird are unaffected.* This vulnerability affects Firefox < 112, Firefox ESR < 102.10, and Thunderbird < 102.10."
Mozilla Firefox;61.0.1;True;['CVE-2023-29546'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29546;"When recording the screen while in Private Browsing on Firefox for Android the address bar and keyboard were not hidden, potentially leaking sensitive information. 

*This bug only affects Firefox for Android. Other operating systems are unaffected.* This vulnerability affects Firefox for Android < 112 and Focus for Android < 112."
Mozilla Firefox;61.0.1;True;['CVE-2023-29547'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29547;When a secure cookie existed in the Firefox cookie jar an insecure cookie for the same domain could have been created, when it should have silently failed. This could have led to a desynchronization in expected results when reading from the secure cookie. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-29548'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29548;A wrong lowering instruction in the ARM64 Ion compiler resulted in a wrong optimization result. This vulnerability affects Firefox < 112, Focus for Android < 112, Firefox ESR < 102.10, Firefox for Android < 112, and Thunderbird < 102.10.
Mozilla Firefox;61.0.1;True;['CVE-2023-29549'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29549;Under certain circumstances, a call to the <code>bind</code> function may have resulted in the incorrect realm. This may have created a vulnerability relating to JavaScript-implemented sandboxes such as SES. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-29550'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29550;Mozilla developers Randell Jesup, Andrew Osmond, Sebastian Hengst, Andrew McCreight, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 111 and Firefox ESR 102.9. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 112, Focus for Android < 112, Firefox ESR < 102.10, Firefox for Android < 112, and Thunderbird < 102.10.
Mozilla Firefox;61.0.1;True;['CVE-2023-29551'];https://www.prio-n.com/kb/vulnerability/CVE-2023-29551;Mozilla developers Randell Jesup, Andrew McCreight, Gabriele Svelto, and the Mozilla Fuzzing Team reported memory safety bugs present in Firefox 111. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox for Android < 112, Firefox < 112, and Focus for Android < 112.
Mozilla Firefox;61.0.1;True;['CVE-2023-32205'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32205;In multiple cases browser prompts could have been obscured by popups controlled by content. These could have led to potential user confusion and spoofing attacks. This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11.
Mozilla Firefox;61.0.1;True;['CVE-2023-32206'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32206;An out-of-bound read could have led to a crash in the RLBox Expat driver. This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11.
Mozilla Firefox;61.0.1;True;['CVE-2023-32207'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32207;A missing delay in popup notifications could have made it possible for an attacker to trick a user into granting permissions. This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11.
Mozilla Firefox;61.0.1;True;['CVE-2023-32208'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32208;Service workers could reveal script base URL due to dynamic `import()`. This vulnerability affects Firefox < 113.
Mozilla Firefox;61.0.1;True;['CVE-2023-32209'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32209;A maliciously crafted favicon could have led to an out of memory crash. This vulnerability affects Firefox < 113.
Mozilla Firefox;61.0.1;True;['CVE-2023-32210'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32210;Documents were incorrectly assuming an ordering of principal objects when ensuring we were loading an appropriately privileged principal. In certain circumstances it might have been possible to cause a document to be loaded with a higher privileged principal than intended. This vulnerability affects Firefox < 113.
Mozilla Firefox;61.0.1;True;['CVE-2023-32211'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32211;A type checking bug would have led to invalid code being compiled. This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11.
Mozilla Firefox;61.0.1;True;['CVE-2023-32212'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32212;An attacker could have positioned a <code>datalist</code> element to obscure the address bar. This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11.
Mozilla Firefox;61.0.1;True;['CVE-2023-32213'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32213;When reading a file, an uninitialized value could have been used as read limit. This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11.
Mozilla Firefox;61.0.1;True;['CVE-2023-32214'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32214;"Protocol handlers `ms-cxh` and `ms-cxh-full` could have been leveraged to trigger a denial of service.
*Note: This attack only affects Windows. Other operating systems are not affected.* This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11."
Mozilla Firefox;61.0.1;True;['CVE-2023-32215'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32215;Memory safety bugs present in Firefox 112 and Firefox ESR 102.10. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 113, Firefox ESR < 102.11, and Thunderbird < 102.11.
Mozilla Firefox;61.0.1;True;['CVE-2023-32216'];https://www.prio-n.com/kb/vulnerability/CVE-2023-32216;Memory safety  bugs present in Firefox 112. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 113.
Mozilla Firefox;61.0.1;True;['CVE-2023-34414'];https://www.prio-n.com/kb/vulnerability/CVE-2023-34414;"The error page for sites with invalid TLS certificates was missing the
activation-delay Firefox uses to protect prompts and permission dialogs
from attacks that exploit human response time delays. If a malicious
page elicited user clicks in precise locations immediately before
navigating to a site with a certificate error and made the renderer
extremely busy at the same time, it could create a gap between when
the error page was loaded and when the display actually refreshed.
With the right timing the elicited clicks could land in that gap and 
activate the button that overrides the certificate error for that site. This vulnerability affects Firefox ESR < 102.12, Firefox < 114, and Thunderbird < 102.12."
Mozilla Firefox;61.0.1;True;['CVE-2023-34415'];https://www.prio-n.com/kb/vulnerability/CVE-2023-34415;"When choosing a site-isolated process for a document loaded from a data: URL that was the result of a redirect, Firefox would load that document in the same process as the site that issued the redirect. This bypassed the site-isolation protections against Spectre-like attacks on sites that host an ""open redirect"". Firefox no longer follows HTTP redirects to data: URLs. This vulnerability affects Firefox < 114."
Mozilla Firefox;61.0.1;True;['CVE-2023-34416'];https://www.prio-n.com/kb/vulnerability/CVE-2023-34416;Memory safety bugs present in Firefox 113, Firefox ESR 102.11, and Thunderbird 102.12. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 102.12, Firefox < 114, and Thunderbird < 102.12.
Mozilla Firefox;61.0.1;True;['CVE-2023-34417'];https://www.prio-n.com/kb/vulnerability/CVE-2023-34417;Memory safety bugs present in Firefox 113. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 114.
Mozilla Firefox;61.0.1;True;['CVE-2023-3482'];https://www.prio-n.com/kb/vulnerability/CVE-2023-3482;When Firefox is configured to block storage of all cookies, it was still possible to store data in localstorage by using an iframe with a source of 'about:blank'. This could have led to malicious websites storing tracking data without permission. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-3600'];https://www.prio-n.com/kb/vulnerability/CVE-2023-3600;During the worker lifecycle, a use-after-free condition could have occured, which could have led to a potentially exploitable crash. This vulnerability affects Firefox < 115.0.2, Firefox ESR < 115.0.2, and Thunderbird < 115.0.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-37201'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37201;An attacker could have triggered a use-after-free condition when creating a WebRTC connection over HTTPS. This vulnerability affects Firefox < 115, Firefox ESR < 102.13, and Thunderbird < 102.13.
Mozilla Firefox;61.0.1;True;['CVE-2023-37202'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37202;Cross-compartment wrappers wrapping a scripted proxy could have caused objects from other compartments to be stored in the main compartment resulting in a use-after-free. This vulnerability affects Firefox < 115, Firefox ESR < 102.13, and Thunderbird < 102.13.
Mozilla Firefox;61.0.1;True;['CVE-2023-37203'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37203;Insufficient validation in the Drag and Drop API in conjunction with social engineering, may have allowed an attacker to trick end-users into creating a shortcut to local system files.  This could have been leveraged to execute arbitrary code. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37204'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37204;A website could have obscured the fullscreen notification by using an option element by introducing lag via an expensive computational function. This could have led to user confusion and possible spoofing attacks. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37205'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37205;The use of RTL Arabic characters in the address bar may have allowed for URL spoofing. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37206'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37206;Uploading files which contain symlinks may have allowed an attacker to trick a user into submitting sensitive data to a malicious website. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37207'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37207;A website could have obscured the fullscreen notification by using a URL with a scheme handled by an external program, such as a mailto URL. This could have led to user confusion and possible spoofing attacks. This vulnerability affects Firefox < 115, Firefox ESR < 102.13, and Thunderbird < 102.13.
Mozilla Firefox;61.0.1;True;['CVE-2023-37208'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37208;When opening Diagcab files, Firefox did not warn the user that these files may contain malicious code. This vulnerability affects Firefox < 115, Firefox ESR < 102.13, and Thunderbird < 102.13.
Mozilla Firefox;61.0.1;True;['CVE-2023-37209'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37209;A use-after-free condition existed in `NotifyOnHistoryReload` where a `LoadingSessionHistoryEntry` object was freed and a reference to that object remained.  This resulted in a potentially exploitable condition when the reference to that object was later reused. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37210'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37210;A website could prevent a user from exiting full-screen mode via alert and prompt calls.  This could lead to user confusion and possible spoofing attacks. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37211'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37211;Memory safety bugs present in Firefox 114, Firefox ESR 102.12, and Thunderbird 102.12. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 115, Firefox ESR < 102.13, and Thunderbird < 102.13.
Mozilla Firefox;61.0.1;True;['CVE-2023-37212'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37212;Memory safety bugs present in Firefox 114. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37455'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37455;The permission request prompt from the site in the background tab was overlaid on top of the site in the foreground tab. This vulnerability affects Firefox for iOS < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-37456'];https://www.prio-n.com/kb/vulnerability/CVE-2023-37456;The session restore helper crashed whenever there was no parameter sent to the message handler. This vulnerability affects Firefox for iOS < 115.
Mozilla Firefox;61.0.1;True;['CVE-2023-4045'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4045;Offscreen Canvas did not properly track cross-origin tainting, which could have been used to access image data from another site in violation of same-origin policy. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4046'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4046;In some circumstances, a stale value could have been used for a global variable in WASM JIT analysis. This resulted in incorrect compilation and a potentially exploitable crash in the content process. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4047'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4047;A bug in popup notifications delay calculation could have made it possible for an attacker to trick a user into granting permissions. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4048'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4048;An out-of-bounds read could have led to an exploitable crash when parsing HTML with DOMParser in low memory situations. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4049'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4049;Race conditions in reference counting code were found through code inspection. These could have resulted in potentially exploitable use-after-free vulnerabilities. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4050'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4050;In some cases, an untrusted input stream was copied to a stack buffer without checking its size. This resulted in a potentially exploitable crash which could have led to a sandbox escape. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4051'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4051;A website could have obscured the full screen notification by using the file open dialog. This could have led to user confusion and possible spoofing attacks. This vulnerability affects Firefox < 116, Firefox ESR < 115.2, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4052'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4052;"The Firefox updater created a directory writable by non-privileged users. When uninstalling Firefox, any files in that directory would be recursively deleted with the permissions of the uninstalling user account. This could be combined with creation of a junction (a form of symbolic link) to allow arbitrary file deletion controlled by the non-privileged user. 
*This bug only affects Firefox on Windows. Other operating systems are unaffected.* This vulnerability affects Firefox < 116, Firefox ESR < 115.1, and Thunderbird < 115.1."
Mozilla Firefox;61.0.1;True;['CVE-2023-4053'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4053;A website could have obscured the full screen notification by using a URL with a scheme handled by an external program, such as a mailto URL. This could have led to user confusion and possible spoofing attacks. This vulnerability affects Firefox < 116, Firefox ESR < 115.2, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4054'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4054;"When opening appref-ms files, Firefox did not warn the user that these files may contain malicious code. 
*This bug only affects Firefox on Windows. Other operating systems are unaffected.* This vulnerability affects Firefox < 116, Firefox ESR < 102.14, Firefox ESR < 115.1, Thunderbird < 102.14, and Thunderbird < 115.1."
Mozilla Firefox;61.0.1;True;['CVE-2023-4055'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4055;When the number of cookies per domain was exceeded in `document.cookie`, the actual cookie jar sent to the host was no longer consistent with expected cookie jar state. This could have caused requests to be sent with some cookies missing. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4056'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4056;Memory safety bugs present in Firefox 115, Firefox ESR 115.0, Firefox ESR 102.13, Thunderbird 115.0, and Thunderbird 102.13. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 116, Firefox ESR < 102.14, and Firefox ESR < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4057'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4057;Memory safety bugs present in Firefox 115, Firefox ESR 115.0, and Thunderbird 115.0. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 116, Firefox ESR < 115.1, and Thunderbird < 115.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-4058'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4058;Memory safety bugs present in Firefox 115. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 116.
Mozilla Firefox;61.0.1;True;['CVE-2023-4573'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4573;When receiving rendering data over IPC `mStream` could have been destroyed when initialized, which could have led to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox < 117, Firefox ESR < 102.15, Firefox ESR < 115.2, Thunderbird < 102.15, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4574'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4574;When creating a callback over IPC for showing the Color Picker window, multiple of the same callbacks could have been created at a time and eventually all simultaneously destroyed as soon as one of the callbacks finished. This could have led to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox < 117, Firefox ESR < 102.15, Firefox ESR < 115.2, Thunderbird < 102.15, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4575'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4575;When creating a callback over IPC for showing the File Picker window, multiple of the same callbacks could have been created at a time and eventually all simultaneously destroyed as soon as one of the callbacks finished. This could have led to a use-after-free causing a potentially exploitable crash. This vulnerability affects Firefox < 117, Firefox ESR < 102.15, Firefox ESR < 115.2, Thunderbird < 102.15, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4576'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4576;"On Windows, an integer overflow could occur in `RecordedSourceSurfaceCreation` which resulted in a heap buffer overflow potentially leaking sensitive data that could have led to a sandbox escape.
*This bug only affects Firefox on Windows. Other operating systems are unaffected.* This vulnerability affects Firefox < 117, Firefox ESR < 102.15, Firefox ESR < 115.2, Thunderbird < 102.15, and Thunderbird < 115.2."
Mozilla Firefox;61.0.1;True;['CVE-2023-4577'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4577;When `UpdateRegExpStatics` attempted to access `initialStringHeap` it could already have been garbage collected prior to entering the function, which could potentially have led to an exploitable crash. This vulnerability affects Firefox < 117, Firefox ESR < 115.2, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4578'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4578;When calling `JS::CheckRegExpSyntax` a Syntax Error could have been set which would end in calling `convertToRuntimeErrorAndClear`. A path in the function could attempt to allocate memory when none is available which would have caused a newly created Out of Memory exception to be mishandled as a Syntax Error. This vulnerability affects Firefox < 117, Firefox ESR < 115.2, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4579'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4579;Search queries in the default search engine could appear to have been the currently navigated URL if the search query itself was a well formed URL. This could have led to a site spoofing another if it had been maliciously set as the default search engine. This vulnerability affects Firefox < 117.
Mozilla Firefox;61.0.1;True;['CVE-2023-4580'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4580;Push notifications stored on disk in private browsing mode were not being encrypted potentially allowing the leak of sensitive information. This vulnerability affects Firefox < 117, Firefox ESR < 115.2, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4581'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4581;Excel `.xll` add-in files did not have a blocklist entry in Firefox's executable blocklist which allowed them to be downloaded without any warning of their potential harm. This vulnerability affects Firefox < 117, Firefox ESR < 102.15, Firefox ESR < 115.2, Thunderbird < 102.15, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4582'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4582;"Due to large allocation checks in Angle for glsl shaders being too lenient a buffer overflow could have occured when allocating too much private shader memory on mac OS. 
*This bug only affects Firefox on macOS. Other operating systems are unaffected.* This vulnerability affects Firefox < 117, Firefox ESR < 115.2, and Thunderbird < 115.2."
Mozilla Firefox;61.0.1;True;['CVE-2023-4583'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4583;When checking if the Browsing Context had been discarded in `HttpBaseChannel`, if the load group was not available then it was assumed to have already been discarded which was not always the case for private channels after the private session had ended. This vulnerability affects Firefox < 117, Firefox ESR < 115.2, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4584'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4584;Memory safety bugs present in Firefox 116, Firefox ESR 102.14, Firefox ESR 115.1, Thunderbird 102.14, and Thunderbird 115.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 117, Firefox ESR < 102.15, Firefox ESR < 115.2, Thunderbird < 102.15, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4585'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4585;Memory safety bugs present in Firefox 116, Firefox ESR 115.1, and Thunderbird 115.1. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 117, Firefox ESR < 115.2, and Thunderbird < 115.2.
Mozilla Firefox;61.0.1;True;['CVE-2023-4863'];https://www.prio-n.com/kb/vulnerability/CVE-2023-4863;Heap buffer overflow in libwebp in Google Chrome prior to 116.0.5845.187 and libwebp 1.3.2 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: Critical)
Mozilla Firefox;61.0.1;True;['CVE-2023-49060'];https://www.prio-n.com/kb/vulnerability/CVE-2023-49060;An attacker could have accessed internal pages or data by ex-filtrating a security key from ReaderMode via the `referrerpolicy` attribute. This vulnerability affects Firefox for iOS < 120.
Mozilla Firefox;61.0.1;True;['CVE-2023-49061'];https://www.prio-n.com/kb/vulnerability/CVE-2023-49061;An attacker could have performed HTML template injection via Reader Mode and exfiltrated user information. This vulnerability affects Firefox for iOS < 120.
Mozilla Firefox;61.0.1;True;['CVE-2023-5168'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5168;"A compromised content process could have provided malicious data to `FilterNodeD2D1` resulting in an out-of-bounds write, leading to a potentially exploitable crash in a privileged process.
*This bug only affects Firefox on Windows. Other operating systems are unaffected.* This vulnerability affects Firefox < 118, Firefox ESR < 115.3, and Thunderbird < 115.3."
Mozilla Firefox;61.0.1;True;['CVE-2023-5169'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5169;A compromised content process could have provided malicious data in a `PathRecording` resulting in an out-of-bounds write, leading to a potentially exploitable crash in a privileged process. This vulnerability affects Firefox < 118, Firefox ESR < 115.3, and Thunderbird < 115.3.
Mozilla Firefox;61.0.1;True;['CVE-2023-5170'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5170;In canvas rendering, a compromised content process could have caused a surface to change unexpectedly, leading to a memory leak of a privileged process. This memory leak could be used to effect a sandbox escape if the correct data was leaked. This vulnerability affects Firefox < 118.
Mozilla Firefox;61.0.1;True;['CVE-2023-5171'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5171;During Ion compilation, a Garbage Collection could have resulted in a use-after-free condition, allowing an attacker to write two NUL bytes, and cause a potentially exploitable crash. This vulnerability affects Firefox < 118, Firefox ESR < 115.3, and Thunderbird < 115.3.
Mozilla Firefox;61.0.1;True;['CVE-2023-5172'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5172;A hashtable  in the Ion Engine could have been mutated while there was a live interior reference, leading to a potential use-after-free and exploitable crash. This vulnerability affects Firefox < 118.
Mozilla Firefox;61.0.1;True;['CVE-2023-5173'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5173;"In a non-standard configuration of Firefox, an integer overflow could have occurred based on network traffic (possibly under influence of a local unprivileged webpage), leading to an out-of-bounds write to privileged process memory. 
*This bug only affects Firefox if a non-standard preference allowing non-HTTPS Alternate Services (`network.http.altsvc.oe`) is enabled.* This vulnerability affects Firefox < 118."
Mozilla Firefox;61.0.1;True;['CVE-2023-5174'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5174;"If Windows failed to duplicate a handle during process creation, the sandbox code may have inadvertently freed a pointer twice, resulting in a use-after-free and a potentially exploitable crash.
*This bug only affects Firefox on Windows when run in non-standard configurations (such as using `runas`). Other operating systems are unaffected.* This vulnerability affects Firefox < 118, Firefox ESR < 115.3, and Thunderbird < 115.3."
Mozilla Firefox;61.0.1;True;['CVE-2023-5175'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5175;During process shutdown, it was possible that an `ImageBitmap` was created that would later be used after being freed from a different codepath, leading to a potentially exploitable crash. This vulnerability affects Firefox < 118.
Mozilla Firefox;61.0.1;True;['CVE-2023-5176'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5176;Memory safety bugs present in Firefox 117, Firefox ESR 115.2, and Thunderbird 115.2. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 118, Firefox ESR < 115.3, and Thunderbird < 115.3.
Mozilla Firefox;61.0.1;True;['CVE-2023-5217'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5217;Heap buffer overflow in vp8 encoding in libvpx in Google Chrome prior to 117.0.5938.132 and libvpx 1.13.1 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)
Mozilla Firefox;61.0.1;True;['CVE-2023-5721'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5721;It was possible for certain browser prompts and dialogs to be activated or dismissed unintentionally by the user due to an insufficient activation-delay. This vulnerability affects Firefox < 119, Firefox ESR < 115.4, and Thunderbird < 115.4.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-5722'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5722;Using iterative requests an attacker was able to learn the size of an opaque response, as well as the contents of a server-supplied Vary header. This vulnerability affects Firefox < 119.
Mozilla Firefox;61.0.1;True;['CVE-2023-5723'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5723;An attacker with temporary script access to a site could have set a cookie containing invalid characters using `document.cookie` that could have led to unknown errors. This vulnerability affects Firefox < 119.
Mozilla Firefox;61.0.1;True;['CVE-2023-5724'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5724;Drivers are not always robust to extremely large draw calls and in some cases this scenario could have led to a crash. This vulnerability affects Firefox < 119, Firefox ESR < 115.4, and Thunderbird < 115.4.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-5725'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5725;A malicious installed WebExtension could open arbitrary URLs, which under the right circumstance could be leveraged to collect sensitive user data. This vulnerability affects Firefox < 119, Firefox ESR < 115.4, and Thunderbird < 115.4.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-5726'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5726;"A website could have obscured the full screen notification by using the file open dialog. This could have led to user confusion and possible spoofing attacks. 
*Note: This issue only affected macOS operating systems. Other operating systems are unaffected.* This vulnerability affects Firefox < 119, Firefox ESR < 115.4, and Thunderbird < 115.4.1."
Mozilla Firefox;61.0.1;True;['CVE-2023-5727'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5727;"The executable file warning was not presented when downloading .msix, .msixbundle, .appx, and .appxbundle files, which can run commands on a user's computer.  
*Note: This issue only affected Windows operating systems. Other operating systems are unaffected.* This vulnerability affects Firefox < 119, Firefox ESR < 115.4, and Thunderbird < 115.4.1."
Mozilla Firefox;61.0.1;True;['CVE-2023-5728'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5728;During garbage collection extra operations were performed on a object that should not be. This could have led to a potentially exploitable crash. This vulnerability affects Firefox < 119, Firefox ESR < 115.4, and Thunderbird < 115.4.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-5729'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5729;A malicious web site can enter fullscreen mode while simultaneously triggering a WebAuthn prompt. This could have obscured the fullscreen notification and could have been leveraged in a spoofing attack. This vulnerability affects Firefox < 119.
Mozilla Firefox;61.0.1;True;['CVE-2023-5730'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5730;Memory safety bugs present in Firefox 118, Firefox ESR 115.3, and Thunderbird 115.3. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 119, Firefox ESR < 115.4, and Thunderbird < 115.4.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-5731'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5731;Memory safety bugs present in Firefox 118. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 119.
Mozilla Firefox;61.0.1;True;['CVE-2023-5732'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5732;An attacker could have created a malicious link using bidirectional characters to spoof the location in the address bar when visited. This vulnerability affects Firefox < 117, Firefox ESR < 115.4, and Thunderbird < 115.4.1.
Mozilla Firefox;61.0.1;True;['CVE-2023-5758'];https://www.prio-n.com/kb/vulnerability/CVE-2023-5758;When opening a page in reader mode, the redirect URL could have caused attacker-controlled script to execute in a reflected Cross-Site Scripting (XSS) attack. This vulnerability affects Firefox for iOS < 119.
Mozilla Firefox;61.0.1;True;['CVE-2023-6135'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6135;"Multiple NSS NIST curves were susceptible to a side-channel attack known as ""Minerva"". This attack could potentially allow an attacker to recover the private key. This vulnerability affects Firefox < 121."
Mozilla Firefox;61.0.1;True;['CVE-2023-6204'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6204;On some systems‚Äîdepending on the graphics settings and drivers‚Äîit was possible to force an out-of-bounds read and leak memory data into the images created on the canvas element. This vulnerability affects Firefox < 120, Firefox ESR < 115.5.0, and Thunderbird < 115.5.
Mozilla Firefox;61.0.1;True;['CVE-2023-6205'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6205;It was possible to cause the use of a MessagePort after it had already been freed, which could potentially have led to an exploitable crash. This vulnerability affects Firefox < 120, Firefox ESR < 115.5.0, and Thunderbird < 115.5.
Mozilla Firefox;61.0.1;True;['CVE-2023-6206'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6206;The black fade animation when exiting fullscreen is roughly the length of the anti-clickjacking delay on permission prompts. It was possible to use this fact to surprise users by luring them to click where the permission grant button would be about to appear. This vulnerability affects Firefox < 120, Firefox ESR < 115.5.0, and Thunderbird < 115.5.
Mozilla Firefox;61.0.1;True;['CVE-2023-6207'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6207;Ownership mismanagement led to a use-after-free in ReadableByteStreams This vulnerability affects Firefox < 120, Firefox ESR < 115.5.0, and Thunderbird < 115.5.
Mozilla Firefox;61.0.1;True;['CVE-2023-6208'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6208;"When using X11, text selected by the page using the Selection API was erroneously copied into the primary selection, a temporary storage not unlike the clipboard.
*This bug only affects Firefox on X11. Other systems are unaffected.* This vulnerability affects Firefox < 120, Firefox ESR < 115.5.0, and Thunderbird < 115.5."
Mozilla Firefox;61.0.1;True;['CVE-2023-6209'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6209;"Relative URLs starting with three slashes were incorrectly parsed, and a path-traversal ""/../"" part in the path could be used to override the specified host. This could contribute to security problems in web sites. This vulnerability affects Firefox < 120, Firefox ESR < 115.5.0, and Thunderbird < 115.5."
Mozilla Firefox;61.0.1;True;['CVE-2023-6210'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6210;"When an https: web page created a pop-up from a ""javascript:"" URL, that pop-up was incorrectly allowed to load blockable content such as iframes from insecure http: URLs This vulnerability affects Firefox < 120."
Mozilla Firefox;61.0.1;True;['CVE-2023-6211'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6211;If an attacker needed a user to load an insecure http: page and knew that user had enabled HTTPS-only mode, the attacker could have tricked the user into clicking to grant an HTTPS-only exception if they could get the user to participate in a clicking game. This vulnerability affects Firefox < 120.
Mozilla Firefox;61.0.1;True;['CVE-2023-6212'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6212;Memory safety bugs present in Firefox 119, Firefox ESR 115.4, and Thunderbird 115.4. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 120, Firefox ESR < 115.5.0, and Thunderbird < 115.5.
Mozilla Firefox;61.0.1;True;['CVE-2023-6213'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6213;Memory safety bugs present in Firefox 119. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 120.
Mozilla Firefox;61.0.1;True;['CVE-2023-6856'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6856;The WebGL `DrawElementsInstanced` method was susceptible to a heap buffer overflow when used on systems with the Mesa VM driver.  This issue could allow an attacker to perform remote code execution and sandbox escape. This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6857'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6857;"When resolving a symlink, a race may occur where the buffer passed to `readlink` may actually be smaller than necessary. 
*This bug only affects Firefox on Unix-based operating systems (Android, Linux, MacOS). Windows is unaffected.* This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121."
Mozilla Firefox;61.0.1;True;['CVE-2023-6858'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6858;Firefox was susceptible to a heap buffer overflow in `nsTextFragment` due to insufficient OOM handling. This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6859'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6859;A use-after-free condition affected TLS socket creation when under memory pressure. This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6860'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6860;The `VideoBridge` allowed any content process to use textures produced by remote decoders.  This could be abused to escape the sandbox. This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6861'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6861;The `nsWindow::PickerOpen(void)` method was susceptible to a heap buffer overflow when running in headless mode. This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6863'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6863;The `ShutdownObserver()` was susceptible to potentially undefined behavior due to its reliance on a dynamic type that lacked a virtual destructor. This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6864'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6864;Memory safety bugs present in Firefox 120, Firefox ESR 115.5, and Thunderbird 115.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox ESR < 115.6, Thunderbird < 115.6, and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6865'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6865;`EncryptingOutputStream` was susceptible to exposing uninitialized data.  This issue could only be abused in order to write data to a local disk which may have implications for private browsing mode. This vulnerability affects Firefox ESR < 115.6 and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6866'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6866;TypedArrays can be fallible and lacked proper exception handling. This could lead to abuse in other APIs which expect TypedArrays to always succeed. This vulnerability affects Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6867'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6867;The timing of a button click causing a popup to disappear was approximately the same length as the anti-clickjacking delay on permission prompts. It was possible to use this fact to surprise users by luring them to click where the permission grant button would be about to appear. This vulnerability affects Firefox ESR < 115.6 and Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6868'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6868;"In some instances, the user-agent would allow push requests which lacked a valid VAPID even though the push manager subscription defined one. This could allow empty messages to be sent from unauthorized parties.
*This bug only affects Firefox on Android.* This vulnerability affects Firefox < 121."
Mozilla Firefox;61.0.1;True;['CVE-2023-6869'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6869;"A `&lt;dialog>` element could have been manipulated to paint content outside of a sandboxed iframe. This could allow untrusted content to display under the guise of trusted content. This vulnerability affects Firefox < 121."
Mozilla Firefox;61.0.1;True;['CVE-2023-6870'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6870;"Applications which spawn a Toast notification in a background thread may have obscured fullscreen notifications displayed by Firefox. 
*This issue only affects Android versions of Firefox and Firefox Focus.* This vulnerability affects Firefox < 121."
Mozilla Firefox;61.0.1;True;['CVE-2023-6871'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6871;Under certain conditions, Firefox did not display a warning when a user attempted to navigate to a new protocol handler. This vulnerability affects Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6872'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6872;Browser tab titles were being leaked by GNOME to system logs. This could potentially expose the browsing habits of users running in a private tab. This vulnerability affects Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2023-6873'];https://www.prio-n.com/kb/vulnerability/CVE-2023-6873;Memory safety bugs present in Firefox 120. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 121.
Mozilla Firefox;61.0.1;True;['CVE-2024-0741'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0741;An out of bounds write in ANGLE could have allowed an attacker to corrupt memory leading to a potentially exploitable crash. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0742'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0742;It was possible for certain browser prompts and dialogs to be activated or dismissed unintentionally by the user due to an incorrect timestamp used to prevent input after page load. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0743'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0743;An unchecked return value in TLS handshake code could have caused a potentially exploitable crash. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0744'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0744;In some circumstances, JIT compiled code could have dereferenced a wild pointer value. This could have led to an exploitable crash. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0745'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0745;The WebAudio `OscillatorNode` object was susceptible to a stack buffer overflow. This could have led to a potentially exploitable crash. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0746'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0746;A Linux user opening the print preview dialog could have caused the browser to crash. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0747'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0747;When a parent page loaded a child in an iframe with `unsafe-inline`, the parent Content Security Policy could have overridden the child Content Security Policy. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0748'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0748;A compromised content process could have updated the document URI. This could have allowed an attacker to set an arbitrary URI in the address bar or history. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0749'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0749;A phishing site could have repurposed an `about:` dialog to show phishing content with an incorrect origin in the address bar. This vulnerability affects Firefox < 122 and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0750'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0750;A bug in popup notifications delay calculation could have made it possible for an attacker to trick a user into granting permissions. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0751'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0751;A malicious devtools extension could have been used to escalate privileges. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0752'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0752;A use-after-free crash could have occurred on macOS if a Firefox update were being applied on a very busy system. This could have resulted in an exploitable crash. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0753'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0753;In specific HSTS configurations an attacker could have bypassed HSTS on a subdomain. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
Mozilla Firefox;61.0.1;True;['CVE-2024-0754'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0754;Some WASM source files could have caused a crash when loaded in devtools. This vulnerability affects Firefox < 122.
Mozilla Firefox;61.0.1;True;['CVE-2024-0755'];https://www.prio-n.com/kb/vulnerability/CVE-2024-0755;Memory safety bugs present in Firefox 121, Firefox ESR 115.6, and Thunderbird 115.6. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 122, Firefox ESR < 115.7, and Thunderbird < 115.7.
